ARM GAS  /tmp/ccjDVqjv.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	MX_GPIO_Init:
  23              	.LFB69:
  24              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  32:Src/main.c    ****   *    this license. 
  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
ARM GAS  /tmp/ccjDVqjv.s 			page 2


  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  50:Src/main.c    **** #include "main.h"
  51:Src/main.c    **** #include "stm32f1xx_hal.h"
  52:Src/main.c    **** #include "usb_device.h"
  53:Src/main.c    **** #include "cli.h"
  54:Src/main.c    **** /* USER CODE BEGIN Includes */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END Includes */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  59:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  60:Src/main.c    **** I2C_HandleTypeDef hi2c2;
  61:Src/main.c    **** 
  62:Src/main.c    **** UART_HandleTypeDef huart1;
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN PV */
  65:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END PV */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  70:Src/main.c    **** void SystemClock_Config(void);
  71:Src/main.c    **** static void MX_GPIO_Init(void);
  72:Src/main.c    **** static void MX_I2C1_Init(void);
  73:Src/main.c    **** static void MX_I2C2_Init(void);
  74:Src/main.c    **** static void MX_USART1_UART_Init(void);
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE BEGIN PFP */
  77:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  78:Src/main.c    **** 
  79:Src/main.c    **** /* USER CODE END PFP */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE BEGIN 0 */
  82:Src/main.c    **** 
  83:Src/main.c    **** /* USER CODE END 0 */
  84:Src/main.c    **** 
  85:Src/main.c    **** /**
  86:Src/main.c    ****   * @brief  The application entry point.
  87:Src/main.c    ****   *
  88:Src/main.c    ****   * @retval None
  89:Src/main.c    ****   */
  90:Src/main.c    **** int main(void)
  91:Src/main.c    **** {
ARM GAS  /tmp/ccjDVqjv.s 			page 3


  92:Src/main.c    ****   /* USER CODE BEGIN 1 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END 1 */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  99:Src/main.c    ****   HAL_Init();
 100:Src/main.c    ****   setvbuf(stdout,NULL,_IONBF,0);
 101:Src/main.c    ****   /* USER CODE BEGIN Init */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE END Init */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Configure the system clock */
 106:Src/main.c    ****   SystemClock_Config();
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* USER CODE END SysInit */
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* Initialize all configured peripherals */
 113:Src/main.c    ****   MX_GPIO_Init();
 114:Src/main.c    ****   MX_I2C1_Init();
 115:Src/main.c    ****   MX_I2C2_Init();
 116:Src/main.c    ****   MX_USART1_UART_Init();
 117:Src/main.c    ****   MX_USB_DEVICE_Init();
 118:Src/main.c    ****   /* USER CODE BEGIN 2 */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE END 2 */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Infinite loop */
 123:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 124:Src/main.c    ****   while (1)
 125:Src/main.c    ****   {
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* USER CODE END WHILE */
 128:Src/main.c    **** 	  prvUARTCommandConsoleTask(NULL);
 129:Src/main.c    ****   /* USER CODE BEGIN 3 */
 130:Src/main.c    **** 
 131:Src/main.c    ****   }
 132:Src/main.c    ****   /* USER CODE END 3 */
 133:Src/main.c    **** 
 134:Src/main.c    **** }
 135:Src/main.c    **** 
 136:Src/main.c    **** /**
 137:Src/main.c    ****   * @brief System Clock Configuration
 138:Src/main.c    ****   * @retval None
 139:Src/main.c    ****   */
 140:Src/main.c    **** void SystemClock_Config(void)
 141:Src/main.c    **** {
 142:Src/main.c    **** 
 143:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 144:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 145:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 146:Src/main.c    **** 
 147:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 148:Src/main.c    ****     */
ARM GAS  /tmp/ccjDVqjv.s 			page 4


 149:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 150:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 151:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 152:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 156:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 157:Src/main.c    ****   {
 158:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 159:Src/main.c    ****   }
 160:Src/main.c    **** 
 161:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 162:Src/main.c    ****     */
 163:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 164:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 165:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 166:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 167:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 168:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 169:Src/main.c    **** 
 170:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 171:Src/main.c    ****   {
 172:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 173:Src/main.c    ****   }
 174:Src/main.c    **** 
 175:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 176:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 177:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 178:Src/main.c    ****   {
 179:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 180:Src/main.c    ****   }
 181:Src/main.c    **** 
 182:Src/main.c    ****     /**Configure the Systick interrupt time 
 183:Src/main.c    ****     */
 184:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 185:Src/main.c    **** 
 186:Src/main.c    ****     /**Configure the Systick 
 187:Src/main.c    ****     */
 188:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 189:Src/main.c    **** 
 190:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 191:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 192:Src/main.c    **** }
 193:Src/main.c    **** 
 194:Src/main.c    **** /* I2C1 init function */
 195:Src/main.c    **** static void MX_I2C1_Init(void)
 196:Src/main.c    **** {
 197:Src/main.c    **** 
 198:Src/main.c    ****   hi2c1.Instance = I2C1;
 199:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 200:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 201:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 202:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 203:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 204:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 205:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
ARM GAS  /tmp/ccjDVqjv.s 			page 5


 206:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 207:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 208:Src/main.c    ****   {
 209:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 210:Src/main.c    ****   }
 211:Src/main.c    **** 
 212:Src/main.c    **** }
 213:Src/main.c    **** 
 214:Src/main.c    **** /* I2C2 init function */
 215:Src/main.c    **** static void MX_I2C2_Init(void)
 216:Src/main.c    **** {
 217:Src/main.c    **** 
 218:Src/main.c    ****   hi2c2.Instance = I2C2;
 219:Src/main.c    ****   hi2c2.Init.ClockSpeed = 100000;
 220:Src/main.c    ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 221:Src/main.c    ****   hi2c2.Init.OwnAddress1 = 0;
 222:Src/main.c    ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 223:Src/main.c    ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 224:Src/main.c    ****   hi2c2.Init.OwnAddress2 = 0;
 225:Src/main.c    ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 226:Src/main.c    ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 227:Src/main.c    ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 228:Src/main.c    ****   {
 229:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 230:Src/main.c    ****   }
 231:Src/main.c    **** 
 232:Src/main.c    **** }
 233:Src/main.c    **** 
 234:Src/main.c    **** /* USART1 init function */
 235:Src/main.c    **** static void MX_USART1_UART_Init(void)
 236:Src/main.c    **** {
 237:Src/main.c    **** 
 238:Src/main.c    ****   huart1.Instance = USART1;
 239:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 240:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 241:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 242:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 243:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 244:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 245:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 246:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 247:Src/main.c    ****   {
 248:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 249:Src/main.c    ****   }
 250:Src/main.c    **** 
 251:Src/main.c    **** }
 252:Src/main.c    **** 
 253:Src/main.c    **** /** Configure pins as 
 254:Src/main.c    ****         * Analog 
 255:Src/main.c    ****         * Input 
 256:Src/main.c    ****         * Output
 257:Src/main.c    ****         * EVENT_OUT
 258:Src/main.c    ****         * EXTI
 259:Src/main.c    **** */
 260:Src/main.c    **** static void MX_GPIO_Init(void)
 261:Src/main.c    **** {
  25              		.loc 1 261 0
ARM GAS  /tmp/ccjDVqjv.s 			page 6


  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 16
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 84B0     		sub	sp, sp, #16
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              	.LBB2:
 262:Src/main.c    **** 
 263:Src/main.c    ****   /* GPIO Ports Clock Enable */
 264:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 264 0
  35 0002 0F4B     		ldr	r3, .L3
  36 0004 9A69     		ldr	r2, [r3, #24]
  37 0006 42F02002 		orr	r2, r2, #32
  38 000a 9A61     		str	r2, [r3, #24]
  39 000c 9A69     		ldr	r2, [r3, #24]
  40 000e 02F02002 		and	r2, r2, #32
  41 0012 0192     		str	r2, [sp, #4]
  42 0014 019A     		ldr	r2, [sp, #4]
  43              	.LBE2:
  44              	.LBB3:
 265:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 265 0
  46 0016 9A69     		ldr	r2, [r3, #24]
  47 0018 42F00802 		orr	r2, r2, #8
  48 001c 9A61     		str	r2, [r3, #24]
  49 001e 9A69     		ldr	r2, [r3, #24]
  50 0020 02F00802 		and	r2, r2, #8
  51 0024 0292     		str	r2, [sp, #8]
  52 0026 029A     		ldr	r2, [sp, #8]
  53              	.LBE3:
  54              	.LBB4:
 266:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  55              		.loc 1 266 0
  56 0028 9A69     		ldr	r2, [r3, #24]
  57 002a 42F00402 		orr	r2, r2, #4
  58 002e 9A61     		str	r2, [r3, #24]
  59 0030 9B69     		ldr	r3, [r3, #24]
  60 0032 03F00403 		and	r3, r3, #4
  61 0036 0393     		str	r3, [sp, #12]
  62 0038 039B     		ldr	r3, [sp, #12]
  63              	.LBE4:
 267:Src/main.c    **** 
 268:Src/main.c    **** }
  64              		.loc 1 268 0
  65 003a 04B0     		add	sp, sp, #16
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 0
  68              		@ sp needed
  69 003c 7047     		bx	lr
  70              	.L4:
  71 003e 00BF     		.align	2
  72              	.L3:
  73 0040 00100240 		.word	1073876992
  74              		.cfi_endproc
  75              	.LFE69:
ARM GAS  /tmp/ccjDVqjv.s 			page 7


  77              		.section	.text._Error_Handler,"ax",%progbits
  78              		.align	1
  79              		.global	_Error_Handler
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu softvfp
  85              	_Error_Handler:
  86              	.LFB70:
 269:Src/main.c    **** 
 270:Src/main.c    **** /* USER CODE BEGIN 4 */
 271:Src/main.c    **** 
 272:Src/main.c    **** /* USER CODE END 4 */
 273:Src/main.c    **** 
 274:Src/main.c    **** /**
 275:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 276:Src/main.c    ****   * @param  file: The file name as string.
 277:Src/main.c    ****   * @param  line: The line in file as a number.
 278:Src/main.c    ****   * @retval None
 279:Src/main.c    ****   */
 280:Src/main.c    **** void _Error_Handler(char *file, int line)
 281:Src/main.c    **** {
  87              		.loc 1 281 0
  88              		.cfi_startproc
  89              		@ Volatile: function does not return.
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL0:
  94              	.L6:
  95 0000 FEE7     		b	.L6
  96              		.cfi_endproc
  97              	.LFE70:
  99              		.section	.text.MX_I2C1_Init,"ax",%progbits
 100              		.align	1
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu softvfp
 106              	MX_I2C1_Init:
 107              	.LFB66:
 196:Src/main.c    **** 
 108              		.loc 1 196 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 196:Src/main.c    **** 
 112              		.loc 1 196 0
 113 0000 08B5     		push	{r3, lr}
 114              	.LCFI2:
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 3, -8
 117              		.cfi_offset 14, -4
 198:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 118              		.loc 1 198 0
 119 0002 0B48     		ldr	r0, .L11
 120 0004 0B4B     		ldr	r3, .L11+4
ARM GAS  /tmp/ccjDVqjv.s 			page 8


 121 0006 0360     		str	r3, [r0]
 199:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 122              		.loc 1 199 0
 123 0008 0B4B     		ldr	r3, .L11+8
 124 000a 4360     		str	r3, [r0, #4]
 200:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 125              		.loc 1 200 0
 126 000c 0023     		movs	r3, #0
 127 000e 8360     		str	r3, [r0, #8]
 201:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 128              		.loc 1 201 0
 129 0010 C360     		str	r3, [r0, #12]
 202:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 130              		.loc 1 202 0
 131 0012 4FF48042 		mov	r2, #16384
 132 0016 0261     		str	r2, [r0, #16]
 203:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 133              		.loc 1 203 0
 134 0018 4361     		str	r3, [r0, #20]
 204:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 135              		.loc 1 204 0
 136 001a 8361     		str	r3, [r0, #24]
 205:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 137              		.loc 1 205 0
 138 001c C361     		str	r3, [r0, #28]
 206:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 139              		.loc 1 206 0
 140 001e 0362     		str	r3, [r0, #32]
 207:Src/main.c    ****   {
 141              		.loc 1 207 0
 142 0020 FFF7FEFF 		bl	HAL_I2C_Init
 143              	.LVL1:
 144 0024 00B9     		cbnz	r0, .L10
 145 0026 08BD     		pop	{r3, pc}
 146              	.L10:
 209:Src/main.c    ****   }
 147              		.loc 1 209 0
 148 0028 D121     		movs	r1, #209
 149 002a 0448     		ldr	r0, .L11+12
 150 002c FFF7FEFF 		bl	_Error_Handler
 151              	.LVL2:
 152              	.L12:
 153              		.align	2
 154              	.L11:
 155 0030 00000000 		.word	hi2c1
 156 0034 00540040 		.word	1073763328
 157 0038 A0860100 		.word	100000
 158 003c 00000000 		.word	.LC0
 159              		.cfi_endproc
 160              	.LFE66:
 162              		.section	.text.MX_I2C2_Init,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu softvfp
 169              	MX_I2C2_Init:
ARM GAS  /tmp/ccjDVqjv.s 			page 9


 170              	.LFB67:
 216:Src/main.c    **** 
 171              		.loc 1 216 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 0000 08B5     		push	{r3, lr}
 176              	.LCFI3:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 218:Src/main.c    ****   hi2c2.Init.ClockSpeed = 100000;
 180              		.loc 1 218 0
 181 0002 0B48     		ldr	r0, .L17
 182 0004 0B4B     		ldr	r3, .L17+4
 183 0006 0360     		str	r3, [r0]
 219:Src/main.c    ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 184              		.loc 1 219 0
 185 0008 0B4B     		ldr	r3, .L17+8
 186 000a 4360     		str	r3, [r0, #4]
 220:Src/main.c    ****   hi2c2.Init.OwnAddress1 = 0;
 187              		.loc 1 220 0
 188 000c 0023     		movs	r3, #0
 189 000e 8360     		str	r3, [r0, #8]
 221:Src/main.c    ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 190              		.loc 1 221 0
 191 0010 C360     		str	r3, [r0, #12]
 222:Src/main.c    ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 192              		.loc 1 222 0
 193 0012 4FF48042 		mov	r2, #16384
 194 0016 0261     		str	r2, [r0, #16]
 223:Src/main.c    ****   hi2c2.Init.OwnAddress2 = 0;
 195              		.loc 1 223 0
 196 0018 4361     		str	r3, [r0, #20]
 224:Src/main.c    ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 197              		.loc 1 224 0
 198 001a 8361     		str	r3, [r0, #24]
 225:Src/main.c    ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 199              		.loc 1 225 0
 200 001c C361     		str	r3, [r0, #28]
 226:Src/main.c    ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 201              		.loc 1 226 0
 202 001e 0362     		str	r3, [r0, #32]
 227:Src/main.c    ****   {
 203              		.loc 1 227 0
 204 0020 FFF7FEFF 		bl	HAL_I2C_Init
 205              	.LVL3:
 206 0024 00B9     		cbnz	r0, .L16
 207 0026 08BD     		pop	{r3, pc}
 208              	.L16:
 229:Src/main.c    ****   }
 209              		.loc 1 229 0
 210 0028 E521     		movs	r1, #229
 211 002a 0448     		ldr	r0, .L17+12
 212 002c FFF7FEFF 		bl	_Error_Handler
 213              	.LVL4:
 214              	.L18:
ARM GAS  /tmp/ccjDVqjv.s 			page 10


 215              		.align	2
 216              	.L17:
 217 0030 00000000 		.word	hi2c2
 218 0034 00580040 		.word	1073764352
 219 0038 A0860100 		.word	100000
 220 003c 00000000 		.word	.LC0
 221              		.cfi_endproc
 222              	.LFE67:
 224              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 225              		.align	1
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu softvfp
 231              	MX_USART1_UART_Init:
 232              	.LFB68:
 236:Src/main.c    **** 
 233              		.loc 1 236 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 08B5     		push	{r3, lr}
 238              	.LCFI4:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
 238:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 242              		.loc 1 238 0
 243 0002 0B48     		ldr	r0, .L23
 244 0004 0B4B     		ldr	r3, .L23+4
 245 0006 0360     		str	r3, [r0]
 239:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 246              		.loc 1 239 0
 247 0008 4FF4E133 		mov	r3, #115200
 248 000c 4360     		str	r3, [r0, #4]
 240:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 249              		.loc 1 240 0
 250 000e 0023     		movs	r3, #0
 251 0010 8360     		str	r3, [r0, #8]
 241:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 252              		.loc 1 241 0
 253 0012 C360     		str	r3, [r0, #12]
 242:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 254              		.loc 1 242 0
 255 0014 0361     		str	r3, [r0, #16]
 243:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 256              		.loc 1 243 0
 257 0016 0C22     		movs	r2, #12
 258 0018 4261     		str	r2, [r0, #20]
 244:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 259              		.loc 1 244 0
 260 001a 8361     		str	r3, [r0, #24]
 245:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 261              		.loc 1 245 0
 262 001c C361     		str	r3, [r0, #28]
 246:Src/main.c    ****   {
 263              		.loc 1 246 0
ARM GAS  /tmp/ccjDVqjv.s 			page 11


 264 001e FFF7FEFF 		bl	HAL_UART_Init
 265              	.LVL5:
 266 0022 00B9     		cbnz	r0, .L22
 267 0024 08BD     		pop	{r3, pc}
 268              	.L22:
 248:Src/main.c    ****   }
 269              		.loc 1 248 0
 270 0026 F821     		movs	r1, #248
 271 0028 0348     		ldr	r0, .L23+8
 272 002a FFF7FEFF 		bl	_Error_Handler
 273              	.LVL6:
 274              	.L24:
 275 002e 00BF     		.align	2
 276              	.L23:
 277 0030 00000000 		.word	huart1
 278 0034 00380140 		.word	1073821696
 279 0038 00000000 		.word	.LC0
 280              		.cfi_endproc
 281              	.LFE68:
 283              		.section	.text.SystemClock_Config,"ax",%progbits
 284              		.align	1
 285              		.global	SystemClock_Config
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu softvfp
 291              	SystemClock_Config:
 292              	.LFB65:
 141:Src/main.c    **** 
 293              		.loc 1 141 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 80
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297 0000 00B5     		push	{lr}
 298              	.LCFI5:
 299              		.cfi_def_cfa_offset 4
 300              		.cfi_offset 14, -4
 301 0002 95B0     		sub	sp, sp, #84
 302              	.LCFI6:
 303              		.cfi_def_cfa_offset 88
 149:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 304              		.loc 1 149 0
 305 0004 0122     		movs	r2, #1
 306 0006 0A92     		str	r2, [sp, #40]
 150:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 307              		.loc 1 150 0
 308 0008 4FF48033 		mov	r3, #65536
 309 000c 0B93     		str	r3, [sp, #44]
 151:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 310              		.loc 1 151 0
 311 000e 0021     		movs	r1, #0
 312 0010 0C91     		str	r1, [sp, #48]
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 313              		.loc 1 152 0
 314 0012 0E92     		str	r2, [sp, #56]
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 315              		.loc 1 153 0
ARM GAS  /tmp/ccjDVqjv.s 			page 12


 316 0014 0222     		movs	r2, #2
 317 0016 1192     		str	r2, [sp, #68]
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 318              		.loc 1 154 0
 319 0018 1293     		str	r3, [sp, #72]
 155:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 320              		.loc 1 155 0
 321 001a 4FF4E013 		mov	r3, #1835008
 322 001e 1393     		str	r3, [sp, #76]
 156:Src/main.c    ****   {
 323              		.loc 1 156 0
 324 0020 0AA8     		add	r0, sp, #40
 325 0022 FFF7FEFF 		bl	HAL_RCC_OscConfig
 326              	.LVL7:
 327 0026 48BB     		cbnz	r0, .L30
 163:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 328              		.loc 1 163 0
 329 0028 0F23     		movs	r3, #15
 330 002a 0593     		str	r3, [sp, #20]
 165:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 331              		.loc 1 165 0
 332 002c 0221     		movs	r1, #2
 333 002e 0691     		str	r1, [sp, #24]
 166:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 334              		.loc 1 166 0
 335 0030 0023     		movs	r3, #0
 336 0032 0793     		str	r3, [sp, #28]
 167:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 337              		.loc 1 167 0
 338 0034 4FF48063 		mov	r3, #1024
 339 0038 0893     		str	r3, [sp, #32]
 168:Src/main.c    **** 
 340              		.loc 1 168 0
 341 003a 0993     		str	r3, [sp, #36]
 170:Src/main.c    ****   {
 342              		.loc 1 170 0
 343 003c 05A8     		add	r0, sp, #20
 344 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 345              	.LVL8:
 346 0042 F8B9     		cbnz	r0, .L31
 175:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 347              		.loc 1 175 0
 348 0044 1023     		movs	r3, #16
 349 0046 0193     		str	r3, [sp, #4]
 176:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 350              		.loc 1 176 0
 351 0048 0023     		movs	r3, #0
 352 004a 0493     		str	r3, [sp, #16]
 177:Src/main.c    ****   {
 353              		.loc 1 177 0
 354 004c 01A8     		add	r0, sp, #4
 355 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 356              	.LVL9:
 357 0052 D8B9     		cbnz	r0, .L32
 184:Src/main.c    **** 
 358              		.loc 1 184 0
 359 0054 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
ARM GAS  /tmp/ccjDVqjv.s 			page 13


 360              	.LVL10:
 361 0058 0E4B     		ldr	r3, .L33
 362 005a A3FB0030 		umull	r3, r0, r3, r0
 363 005e 8009     		lsrs	r0, r0, #6
 364 0060 FFF7FEFF 		bl	HAL_SYSTICK_Config
 365              	.LVL11:
 188:Src/main.c    **** 
 366              		.loc 1 188 0
 367 0064 0420     		movs	r0, #4
 368 0066 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 369              	.LVL12:
 191:Src/main.c    **** }
 370              		.loc 1 191 0
 371 006a 0022     		movs	r2, #0
 372 006c 1146     		mov	r1, r2
 373 006e 4FF0FF30 		mov	r0, #-1
 374 0072 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 375              	.LVL13:
 192:Src/main.c    **** 
 376              		.loc 1 192 0
 377 0076 15B0     		add	sp, sp, #84
 378              	.LCFI7:
 379              		.cfi_remember_state
 380              		.cfi_def_cfa_offset 4
 381              		@ sp needed
 382 0078 5DF804FB 		ldr	pc, [sp], #4
 383              	.L30:
 384              	.LCFI8:
 385              		.cfi_restore_state
 158:Src/main.c    ****   }
 386              		.loc 1 158 0
 387 007c 9E21     		movs	r1, #158
 388 007e 0648     		ldr	r0, .L33+4
 389 0080 FFF7FEFF 		bl	_Error_Handler
 390              	.LVL14:
 391              	.L31:
 172:Src/main.c    ****   }
 392              		.loc 1 172 0
 393 0084 AC21     		movs	r1, #172
 394 0086 0448     		ldr	r0, .L33+4
 395 0088 FFF7FEFF 		bl	_Error_Handler
 396              	.LVL15:
 397              	.L32:
 179:Src/main.c    ****   }
 398              		.loc 1 179 0
 399 008c B321     		movs	r1, #179
 400 008e 0248     		ldr	r0, .L33+4
 401 0090 FFF7FEFF 		bl	_Error_Handler
 402              	.LVL16:
 403              	.L34:
 404              		.align	2
 405              	.L33:
 406 0094 D34D6210 		.word	274877907
 407 0098 00000000 		.word	.LC0
 408              		.cfi_endproc
 409              	.LFE65:
 411              		.section	.text.main,"ax",%progbits
ARM GAS  /tmp/ccjDVqjv.s 			page 14


 412              		.align	1
 413              		.global	main
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 417              		.fpu softvfp
 419              	main:
 420              	.LFB64:
  91:Src/main.c    ****   /* USER CODE BEGIN 1 */
 421              		.loc 1 91 0
 422              		.cfi_startproc
 423              		@ Volatile: function does not return.
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426 0000 08B5     		push	{r3, lr}
 427              	.LCFI9:
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 3, -8
 430              		.cfi_offset 14, -4
  99:Src/main.c    ****   setvbuf(stdout,NULL,_IONBF,0);
 431              		.loc 1 99 0
 432 0002 FFF7FEFF 		bl	HAL_Init
 433              	.LVL17:
 100:Src/main.c    ****   /* USER CODE BEGIN Init */
 434              		.loc 1 100 0
 435 0006 0C4B     		ldr	r3, .L38
 436 0008 1868     		ldr	r0, [r3]
 437 000a 0023     		movs	r3, #0
 438 000c 0222     		movs	r2, #2
 439 000e 1946     		mov	r1, r3
 440 0010 8068     		ldr	r0, [r0, #8]
 441 0012 FFF7FEFF 		bl	setvbuf
 442              	.LVL18:
 106:Src/main.c    **** 
 443              		.loc 1 106 0
 444 0016 FFF7FEFF 		bl	SystemClock_Config
 445              	.LVL19:
 113:Src/main.c    ****   MX_I2C1_Init();
 446              		.loc 1 113 0
 447 001a FFF7FEFF 		bl	MX_GPIO_Init
 448              	.LVL20:
 114:Src/main.c    ****   MX_I2C2_Init();
 449              		.loc 1 114 0
 450 001e FFF7FEFF 		bl	MX_I2C1_Init
 451              	.LVL21:
 115:Src/main.c    ****   MX_USART1_UART_Init();
 452              		.loc 1 115 0
 453 0022 FFF7FEFF 		bl	MX_I2C2_Init
 454              	.LVL22:
 116:Src/main.c    ****   MX_USB_DEVICE_Init();
 455              		.loc 1 116 0
 456 0026 FFF7FEFF 		bl	MX_USART1_UART_Init
 457              	.LVL23:
 117:Src/main.c    ****   /* USER CODE BEGIN 2 */
 458              		.loc 1 117 0
 459 002a FFF7FEFF 		bl	MX_USB_DEVICE_Init
 460              	.LVL24:
ARM GAS  /tmp/ccjDVqjv.s 			page 15


 461              	.L36:
 128:Src/main.c    ****   /* USER CODE BEGIN 3 */
 462              		.loc 1 128 0 discriminator 1
 463 002e 0020     		movs	r0, #0
 464 0030 FFF7FEFF 		bl	prvUARTCommandConsoleTask
 465              	.LVL25:
 466 0034 FBE7     		b	.L36
 467              	.L39:
 468 0036 00BF     		.align	2
 469              	.L38:
 470 0038 00000000 		.word	_impure_ptr
 471              		.cfi_endproc
 472              	.LFE64:
 474              		.comm	huart1,64,4
 475              		.comm	hi2c2,84,4
 476              		.comm	hi2c1,84,4
 477              		.section	.rodata.MX_I2C1_Init.str1.4,"aMS",%progbits,1
 478              		.align	2
 479              	.LC0:
 480 0000 5372632F 		.ascii	"Src/main.c\000"
 480      6D61696E 
 480      2E6300
 481              		.text
 482              	.Letext0:
 483              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 484              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 485              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 486              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 487              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 488              		.file 7 "/usr/include/newlib/sys/lock.h"
 489              		.file 8 "/usr/include/newlib/sys/_types.h"
 490              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 491              		.file 10 "/usr/include/newlib/sys/reent.h"
 492              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 493              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 494              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 495              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 496              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 497              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 498              		.file 17 "/usr/include/newlib/stdlib.h"
 499              		.file 18 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 500              		.file 19 "Inc/usb_device.h"
 501              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 502              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 503              		.file 22 "/usr/include/newlib/stdio.h"
 504              		.file 23 "Inc/cli.h"
ARM GAS  /tmp/ccjDVqjv.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccjDVqjv.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccjDVqjv.s:22     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccjDVqjv.s:73     .text.MX_GPIO_Init:0000000000000040 $d
     /tmp/ccjDVqjv.s:78     .text._Error_Handler:0000000000000000 $t
     /tmp/ccjDVqjv.s:85     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccjDVqjv.s:100    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccjDVqjv.s:106    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccjDVqjv.s:155    .text.MX_I2C1_Init:0000000000000030 $d
                            *COM*:0000000000000054 hi2c1
     /tmp/ccjDVqjv.s:163    .text.MX_I2C2_Init:0000000000000000 $t
     /tmp/ccjDVqjv.s:169    .text.MX_I2C2_Init:0000000000000000 MX_I2C2_Init
     /tmp/ccjDVqjv.s:217    .text.MX_I2C2_Init:0000000000000030 $d
                            *COM*:0000000000000054 hi2c2
     /tmp/ccjDVqjv.s:225    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccjDVqjv.s:231    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccjDVqjv.s:277    .text.MX_USART1_UART_Init:0000000000000030 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccjDVqjv.s:284    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccjDVqjv.s:291    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccjDVqjv.s:406    .text.SystemClock_Config:0000000000000094 $d
     /tmp/ccjDVqjv.s:412    .text.main:0000000000000000 $t
     /tmp/ccjDVqjv.s:419    .text.main:0000000000000000 main
     /tmp/ccjDVqjv.s:470    .text.main:0000000000000038 $d
     /tmp/ccjDVqjv.s:478    .rodata.MX_I2C1_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_I2C_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
setvbuf
MX_USB_DEVICE_Init
prvUARTCommandConsoleTask
_impure_ptr
