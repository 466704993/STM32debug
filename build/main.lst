ARM GAS  /tmp/ccwk5FOU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB68:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  32:Src/main.c    ****   *    this license. 
  33:Src/main.c    ****   *
ARM GAS  /tmp/ccwk5FOU.s 			page 2


  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  50:Src/main.c    **** #include "main.h"
  51:Src/main.c    **** #include "stm32f1xx_hal.h"
  52:Src/main.c    **** #include "usb_device.h"
  53:Src/main.c    **** #include "cli.h"
  54:Src/main.c    **** /* USER CODE BEGIN Includes */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END Includes */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  59:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  60:Src/main.c    **** I2C_HandleTypeDef hi2c2;
  61:Src/main.c    **** 
  62:Src/main.c    **** UART_HandleTypeDef huart1;
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN PV */
  65:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END PV */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  70:Src/main.c    **** void SystemClock_Config(void);
  71:Src/main.c    **** static void MX_GPIO_Init(void);
  72:Src/main.c    **** static void MX_I2C1_Init(void);
  73:Src/main.c    **** static void MX_I2C2_Init(void);
  74:Src/main.c    **** static void MX_USART1_UART_Init(void);
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE BEGIN PFP */
  77:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  78:Src/main.c    **** 
  79:Src/main.c    **** /* USER CODE END PFP */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE BEGIN 0 */
  82:Src/main.c    **** 
  83:Src/main.c    **** /* USER CODE END 0 */
  84:Src/main.c    **** 
  85:Src/main.c    **** /**
  86:Src/main.c    ****   * @brief  The application entry point.
  87:Src/main.c    ****   *
  88:Src/main.c    ****   * @retval None
  89:Src/main.c    ****   */
  90:Src/main.c    **** int main(void)
ARM GAS  /tmp/ccwk5FOU.s 			page 3


  91:Src/main.c    **** {
  92:Src/main.c    ****   /* USER CODE BEGIN 1 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END 1 */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  99:Src/main.c    ****   HAL_Init();
 100:Src/main.c    ****   setvbuf(stdout,NULL,_IONBF,0);
 101:Src/main.c    ****   /* USER CODE BEGIN Init */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE END Init */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Configure the system clock */
 106:Src/main.c    ****   SystemClock_Config();
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* USER CODE END SysInit */
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* Initialize all configured peripherals */
 113:Src/main.c    ****   MX_GPIO_Init();
 114:Src/main.c    ****   MX_I2C1_Init();
 115:Src/main.c    ****   MX_I2C2_Init();
 116:Src/main.c    ****   MX_USART1_UART_Init();
 117:Src/main.c    ****   MX_USB_DEVICE_Init();
 118:Src/main.c    ****   /* USER CODE BEGIN 2 */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE END 2 */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Infinite loop */
 123:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 124:Src/main.c    ****   while (1)
 125:Src/main.c    ****   {
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* USER CODE END WHILE */
 128:Src/main.c    **** 	  prvUARTCommandConsoleTask(NULL);
 129:Src/main.c    ****   /* USER CODE BEGIN 3 */
 130:Src/main.c    **** 
 131:Src/main.c    ****   }
 132:Src/main.c    ****   /* USER CODE END 3 */
 133:Src/main.c    **** 
 134:Src/main.c    **** }
 135:Src/main.c    **** 
 136:Src/main.c    **** /**
 137:Src/main.c    ****   * @brief System Clock Configuration
 138:Src/main.c    ****   * @retval None
 139:Src/main.c    ****   */
 140:Src/main.c    **** void SystemClock_Config(void)
 141:Src/main.c    **** {
 142:Src/main.c    **** 
 143:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 144:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 145:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 146:Src/main.c    **** 
 147:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/ccwk5FOU.s 			page 4


 148:Src/main.c    ****     */
 149:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 150:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 151:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 152:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 156:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 157:Src/main.c    ****   {
 158:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 159:Src/main.c    ****   }
 160:Src/main.c    **** 
 161:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 162:Src/main.c    ****     */
 163:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 164:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 165:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 166:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 167:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 168:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 169:Src/main.c    **** 
 170:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 171:Src/main.c    ****   {
 172:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 173:Src/main.c    ****   }
 174:Src/main.c    **** 
 175:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 176:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 177:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 178:Src/main.c    ****   {
 179:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 180:Src/main.c    ****   }
 181:Src/main.c    **** 
 182:Src/main.c    ****     /**Configure the Systick interrupt time 
 183:Src/main.c    ****     */
 184:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 185:Src/main.c    **** 
 186:Src/main.c    ****     /**Configure the Systick 
 187:Src/main.c    ****     */
 188:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 189:Src/main.c    **** 
 190:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 191:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 192:Src/main.c    **** }
 193:Src/main.c    **** 
 194:Src/main.c    **** /* I2C1 init function */
 195:Src/main.c    **** static void MX_I2C1_Init(void)
 196:Src/main.c    **** {
 197:Src/main.c    **** 
 198:Src/main.c    ****   hi2c1.Instance = I2C1;
 199:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 200:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 201:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 202:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 203:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 204:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
ARM GAS  /tmp/ccwk5FOU.s 			page 5


 205:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 206:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 207:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 208:Src/main.c    ****   {
 209:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 210:Src/main.c    ****   }
 211:Src/main.c    **** 
 212:Src/main.c    **** }
 213:Src/main.c    **** 
 214:Src/main.c    **** /* I2C2 init function */
 215:Src/main.c    **** static void MX_I2C2_Init(void)
 216:Src/main.c    **** {
 217:Src/main.c    **** 
 218:Src/main.c    ****   hi2c2.Instance = I2C2;
 219:Src/main.c    ****   hi2c2.Init.ClockSpeed = 100000;
 220:Src/main.c    ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 221:Src/main.c    ****   hi2c2.Init.OwnAddress1 = 0;
 222:Src/main.c    ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 223:Src/main.c    ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 224:Src/main.c    ****   hi2c2.Init.OwnAddress2 = 0;
 225:Src/main.c    ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 226:Src/main.c    ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 227:Src/main.c    ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 228:Src/main.c    ****   {
 229:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 230:Src/main.c    ****   }
 231:Src/main.c    **** 
 232:Src/main.c    **** }
 233:Src/main.c    **** 
 234:Src/main.c    **** /* USART1 init function */
 235:Src/main.c    **** static void MX_USART1_UART_Init(void)
 236:Src/main.c    **** {
 237:Src/main.c    **** 
 238:Src/main.c    ****   huart1.Instance = USART1;
 239:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 240:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 241:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 242:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 243:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 244:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 245:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 246:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 247:Src/main.c    ****   {
 248:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 249:Src/main.c    ****   }
 250:Src/main.c    **** 
 251:Src/main.c    **** }
 252:Src/main.c    **** 
 253:Src/main.c    **** /** Configure pins as 
 254:Src/main.c    ****         * Analog 
 255:Src/main.c    ****         * Input 
 256:Src/main.c    ****         * Output
 257:Src/main.c    ****         * EVENT_OUT
 258:Src/main.c    ****         * EXTI
 259:Src/main.c    **** */
 260:Src/main.c    **** static void MX_GPIO_Init(void)
 261:Src/main.c    **** {
ARM GAS  /tmp/ccwk5FOU.s 			page 6


  26              		.loc 1 261 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 16
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 84B0     		sub	sp, sp, #16
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              	.LBB2:
 262:Src/main.c    **** 
 263:Src/main.c    ****   /* GPIO Ports Clock Enable */
 264:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  35              		.loc 1 264 0
  36 0002 0F4B     		ldr	r3, .L3
  37 0004 9A69     		ldr	r2, [r3, #24]
  38 0006 42F02002 		orr	r2, r2, #32
  39 000a 9A61     		str	r2, [r3, #24]
  40 000c 9A69     		ldr	r2, [r3, #24]
  41 000e 02F02002 		and	r2, r2, #32
  42 0012 0192     		str	r2, [sp, #4]
  43 0014 019A     		ldr	r2, [sp, #4]
  44              	.LBE2:
  45              	.LBB3:
 265:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  46              		.loc 1 265 0
  47 0016 9A69     		ldr	r2, [r3, #24]
  48 0018 42F00802 		orr	r2, r2, #8
  49 001c 9A61     		str	r2, [r3, #24]
  50 001e 9A69     		ldr	r2, [r3, #24]
  51 0020 02F00802 		and	r2, r2, #8
  52 0024 0292     		str	r2, [sp, #8]
  53 0026 029A     		ldr	r2, [sp, #8]
  54              	.LBE3:
  55              	.LBB4:
 266:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  56              		.loc 1 266 0
  57 0028 9A69     		ldr	r2, [r3, #24]
  58 002a 42F00402 		orr	r2, r2, #4
  59 002e 9A61     		str	r2, [r3, #24]
  60 0030 9B69     		ldr	r3, [r3, #24]
  61 0032 03F00403 		and	r3, r3, #4
  62 0036 0393     		str	r3, [sp, #12]
  63 0038 039B     		ldr	r3, [sp, #12]
  64              	.LBE4:
 267:Src/main.c    **** 
 268:Src/main.c    **** }
  65              		.loc 1 268 0
  66 003a 04B0     		add	sp, sp, #16
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 0
  69              		@ sp needed
  70 003c 7047     		bx	lr
  71              	.L4:
  72 003e 00BF     		.align	2
  73              	.L3:
  74 0040 00100240 		.word	1073876992
  75              		.cfi_endproc
ARM GAS  /tmp/ccwk5FOU.s 			page 7


  76              	.LFE68:
  78              		.section	.text._Error_Handler,"ax",%progbits
  79              		.align	2
  80              		.global	_Error_Handler
  81              		.thumb
  82              		.thumb_func
  84              	_Error_Handler:
  85              	.LFB69:
 269:Src/main.c    **** 
 270:Src/main.c    **** /* USER CODE BEGIN 4 */
 271:Src/main.c    **** 
 272:Src/main.c    **** /* USER CODE END 4 */
 273:Src/main.c    **** 
 274:Src/main.c    **** /**
 275:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 276:Src/main.c    ****   * @param  file: The file name as string.
 277:Src/main.c    ****   * @param  line: The line in file as a number.
 278:Src/main.c    ****   * @retval None
 279:Src/main.c    ****   */
 280:Src/main.c    **** void _Error_Handler(char *file, int line)
 281:Src/main.c    **** {
  86              		.loc 1 281 0
  87              		.cfi_startproc
  88              		@ Volatile: function does not return.
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.LVL0:
  93              	.L6:
 282:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 283:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 284:Src/main.c    ****   while(1)
 285:Src/main.c    ****   {
 286:Src/main.c    ****   }
  94              		.loc 1 286 0 discriminator 1
  95 0000 FEE7     		b	.L6
  96              		.cfi_endproc
  97              	.LFE69:
  99 0002 00BF     		.section	.text.MX_I2C1_Init,"ax",%progbits
 100              		.align	2
 101              		.thumb
 102              		.thumb_func
 104              	MX_I2C1_Init:
 105              	.LFB65:
 196:Src/main.c    **** 
 106              		.loc 1 196 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110 0000 08B5     		push	{r3, lr}
 111              	.LCFI2:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 3, -8
 114              		.cfi_offset 14, -4
 198:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 115              		.loc 1 198 0
 116 0002 0B48     		ldr	r0, .L10
ARM GAS  /tmp/ccwk5FOU.s 			page 8


 117 0004 0B4B     		ldr	r3, .L10+4
 118 0006 0360     		str	r3, [r0]
 199:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 119              		.loc 1 199 0
 120 0008 0B4B     		ldr	r3, .L10+8
 121 000a 4360     		str	r3, [r0, #4]
 200:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 122              		.loc 1 200 0
 123 000c 0023     		movs	r3, #0
 124 000e 8360     		str	r3, [r0, #8]
 201:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 125              		.loc 1 201 0
 126 0010 C360     		str	r3, [r0, #12]
 202:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 127              		.loc 1 202 0
 128 0012 4FF48042 		mov	r2, #16384
 129 0016 0261     		str	r2, [r0, #16]
 203:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 130              		.loc 1 203 0
 131 0018 4361     		str	r3, [r0, #20]
 204:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 132              		.loc 1 204 0
 133 001a 8361     		str	r3, [r0, #24]
 205:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 134              		.loc 1 205 0
 135 001c C361     		str	r3, [r0, #28]
 206:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 136              		.loc 1 206 0
 137 001e 0362     		str	r3, [r0, #32]
 207:Src/main.c    ****   {
 138              		.loc 1 207 0
 139 0020 FFF7FEFF 		bl	HAL_I2C_Init
 140              	.LVL1:
 141 0024 18B1     		cbz	r0, .L7
 209:Src/main.c    ****   }
 142              		.loc 1 209 0
 143 0026 0548     		ldr	r0, .L10+12
 144 0028 D121     		movs	r1, #209
 145 002a FFF7FEFF 		bl	_Error_Handler
 146              	.LVL2:
 147              	.L7:
 148 002e 08BD     		pop	{r3, pc}
 149              	.L11:
 150              		.align	2
 151              	.L10:
 152 0030 00000000 		.word	hi2c1
 153 0034 00540040 		.word	1073763328
 154 0038 A0860100 		.word	100000
 155 003c 00000000 		.word	.LC0
 156              		.cfi_endproc
 157              	.LFE65:
 159              		.section	.text.MX_I2C2_Init,"ax",%progbits
 160              		.align	2
 161              		.thumb
 162              		.thumb_func
 164              	MX_I2C2_Init:
 165              	.LFB66:
ARM GAS  /tmp/ccwk5FOU.s 			page 9


 216:Src/main.c    **** 
 166              		.loc 1 216 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170 0000 08B5     		push	{r3, lr}
 171              	.LCFI3:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 3, -8
 174              		.cfi_offset 14, -4
 218:Src/main.c    ****   hi2c2.Init.ClockSpeed = 100000;
 175              		.loc 1 218 0
 176 0002 0B48     		ldr	r0, .L15
 177 0004 0B4B     		ldr	r3, .L15+4
 178 0006 0360     		str	r3, [r0]
 219:Src/main.c    ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 179              		.loc 1 219 0
 180 0008 0B4B     		ldr	r3, .L15+8
 181 000a 4360     		str	r3, [r0, #4]
 220:Src/main.c    ****   hi2c2.Init.OwnAddress1 = 0;
 182              		.loc 1 220 0
 183 000c 0023     		movs	r3, #0
 184 000e 8360     		str	r3, [r0, #8]
 221:Src/main.c    ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 185              		.loc 1 221 0
 186 0010 C360     		str	r3, [r0, #12]
 222:Src/main.c    ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 187              		.loc 1 222 0
 188 0012 4FF48042 		mov	r2, #16384
 189 0016 0261     		str	r2, [r0, #16]
 223:Src/main.c    ****   hi2c2.Init.OwnAddress2 = 0;
 190              		.loc 1 223 0
 191 0018 4361     		str	r3, [r0, #20]
 224:Src/main.c    ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 192              		.loc 1 224 0
 193 001a 8361     		str	r3, [r0, #24]
 225:Src/main.c    ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 194              		.loc 1 225 0
 195 001c C361     		str	r3, [r0, #28]
 226:Src/main.c    ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 196              		.loc 1 226 0
 197 001e 0362     		str	r3, [r0, #32]
 227:Src/main.c    ****   {
 198              		.loc 1 227 0
 199 0020 FFF7FEFF 		bl	HAL_I2C_Init
 200              	.LVL3:
 201 0024 18B1     		cbz	r0, .L12
 229:Src/main.c    ****   }
 202              		.loc 1 229 0
 203 0026 0548     		ldr	r0, .L15+12
 204 0028 E521     		movs	r1, #229
 205 002a FFF7FEFF 		bl	_Error_Handler
 206              	.LVL4:
 207              	.L12:
 208 002e 08BD     		pop	{r3, pc}
 209              	.L16:
 210              		.align	2
ARM GAS  /tmp/ccwk5FOU.s 			page 10


 211              	.L15:
 212 0030 00000000 		.word	hi2c2
 213 0034 00580040 		.word	1073764352
 214 0038 A0860100 		.word	100000
 215 003c 00000000 		.word	.LC0
 216              		.cfi_endproc
 217              	.LFE66:
 219              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 220              		.align	2
 221              		.thumb
 222              		.thumb_func
 224              	MX_USART1_UART_Init:
 225              	.LFB67:
 236:Src/main.c    **** 
 226              		.loc 1 236 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 08B5     		push	{r3, lr}
 231              	.LCFI4:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 3, -8
 234              		.cfi_offset 14, -4
 238:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 235              		.loc 1 238 0
 236 0002 0B48     		ldr	r0, .L20
 237 0004 0B4B     		ldr	r3, .L20+4
 238 0006 0360     		str	r3, [r0]
 239:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 239              		.loc 1 239 0
 240 0008 4FF4E133 		mov	r3, #115200
 241 000c 4360     		str	r3, [r0, #4]
 240:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 242              		.loc 1 240 0
 243 000e 0023     		movs	r3, #0
 244 0010 8360     		str	r3, [r0, #8]
 241:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 245              		.loc 1 241 0
 246 0012 C360     		str	r3, [r0, #12]
 242:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 247              		.loc 1 242 0
 248 0014 0361     		str	r3, [r0, #16]
 243:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 249              		.loc 1 243 0
 250 0016 0C22     		movs	r2, #12
 251 0018 4261     		str	r2, [r0, #20]
 244:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 252              		.loc 1 244 0
 253 001a 8361     		str	r3, [r0, #24]
 245:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 254              		.loc 1 245 0
 255 001c C361     		str	r3, [r0, #28]
 246:Src/main.c    ****   {
 256              		.loc 1 246 0
 257 001e FFF7FEFF 		bl	HAL_UART_Init
 258              	.LVL5:
 259 0022 18B1     		cbz	r0, .L17
ARM GAS  /tmp/ccwk5FOU.s 			page 11


 248:Src/main.c    ****   }
 260              		.loc 1 248 0
 261 0024 0448     		ldr	r0, .L20+8
 262 0026 F821     		movs	r1, #248
 263 0028 FFF7FEFF 		bl	_Error_Handler
 264              	.LVL6:
 265              	.L17:
 266 002c 08BD     		pop	{r3, pc}
 267              	.L21:
 268 002e 00BF     		.align	2
 269              	.L20:
 270 0030 00000000 		.word	huart1
 271 0034 00380140 		.word	1073821696
 272 0038 00000000 		.word	.LC0
 273              		.cfi_endproc
 274              	.LFE67:
 276              		.section	.text.SystemClock_Config,"ax",%progbits
 277              		.align	2
 278              		.global	SystemClock_Config
 279              		.thumb
 280              		.thumb_func
 282              	SystemClock_Config:
 283              	.LFB64:
 141:Src/main.c    **** 
 284              		.loc 1 141 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 80
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288 0000 00B5     		push	{lr}
 289              	.LCFI5:
 290              		.cfi_def_cfa_offset 4
 291              		.cfi_offset 14, -4
 292 0002 95B0     		sub	sp, sp, #84
 293              	.LCFI6:
 294              		.cfi_def_cfa_offset 88
 149:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 295              		.loc 1 149 0
 296 0004 0122     		movs	r2, #1
 297 0006 0A92     		str	r2, [sp, #40]
 150:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 298              		.loc 1 150 0
 299 0008 4FF48033 		mov	r3, #65536
 300 000c 0B93     		str	r3, [sp, #44]
 151:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 301              		.loc 1 151 0
 302 000e 0021     		movs	r1, #0
 303 0010 0C91     		str	r1, [sp, #48]
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 304              		.loc 1 152 0
 305 0012 0E92     		str	r2, [sp, #56]
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 306              		.loc 1 153 0
 307 0014 0222     		movs	r2, #2
 308 0016 1192     		str	r2, [sp, #68]
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 309              		.loc 1 154 0
 310 0018 1293     		str	r3, [sp, #72]
ARM GAS  /tmp/ccwk5FOU.s 			page 12


 155:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 311              		.loc 1 155 0
 312 001a 4FF4E013 		mov	r3, #1835008
 313 001e 1393     		str	r3, [sp, #76]
 156:Src/main.c    ****   {
 314              		.loc 1 156 0
 315 0020 0AA8     		add	r0, sp, #40
 316 0022 FFF7FEFF 		bl	HAL_RCC_OscConfig
 317              	.LVL7:
 318 0026 18B1     		cbz	r0, .L23
 158:Src/main.c    ****   }
 319              		.loc 1 158 0
 320 0028 1A48     		ldr	r0, .L27
 321 002a 9E21     		movs	r1, #158
 322 002c FFF7FEFF 		bl	_Error_Handler
 323              	.LVL8:
 324              	.L23:
 163:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 325              		.loc 1 163 0
 326 0030 0F23     		movs	r3, #15
 327 0032 0593     		str	r3, [sp, #20]
 165:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 328              		.loc 1 165 0
 329 0034 0221     		movs	r1, #2
 330 0036 0691     		str	r1, [sp, #24]
 166:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 331              		.loc 1 166 0
 332 0038 0023     		movs	r3, #0
 333 003a 0793     		str	r3, [sp, #28]
 167:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 334              		.loc 1 167 0
 335 003c 4FF48063 		mov	r3, #1024
 336 0040 0893     		str	r3, [sp, #32]
 168:Src/main.c    **** 
 337              		.loc 1 168 0
 338 0042 0993     		str	r3, [sp, #36]
 170:Src/main.c    ****   {
 339              		.loc 1 170 0
 340 0044 05A8     		add	r0, sp, #20
 341 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 342              	.LVL9:
 343 004a 18B1     		cbz	r0, .L24
 172:Src/main.c    ****   }
 344              		.loc 1 172 0
 345 004c 1148     		ldr	r0, .L27
 346 004e AC21     		movs	r1, #172
 347 0050 FFF7FEFF 		bl	_Error_Handler
 348              	.LVL10:
 349              	.L24:
 175:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 350              		.loc 1 175 0
 351 0054 1023     		movs	r3, #16
 352 0056 0193     		str	r3, [sp, #4]
 176:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 353              		.loc 1 176 0
 354 0058 0023     		movs	r3, #0
 355 005a 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccwk5FOU.s 			page 13


 177:Src/main.c    ****   {
 356              		.loc 1 177 0
 357 005c 01A8     		add	r0, sp, #4
 358 005e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 359              	.LVL11:
 360 0062 18B1     		cbz	r0, .L25
 179:Src/main.c    ****   }
 361              		.loc 1 179 0
 362 0064 0B48     		ldr	r0, .L27
 363 0066 B321     		movs	r1, #179
 364 0068 FFF7FEFF 		bl	_Error_Handler
 365              	.LVL12:
 366              	.L25:
 184:Src/main.c    **** 
 367              		.loc 1 184 0
 368 006c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 369              	.LVL13:
 370 0070 094B     		ldr	r3, .L27+4
 371 0072 A3FB0030 		umull	r3, r0, r3, r0
 372 0076 8009     		lsrs	r0, r0, #6
 373 0078 FFF7FEFF 		bl	HAL_SYSTICK_Config
 374              	.LVL14:
 188:Src/main.c    **** 
 375              		.loc 1 188 0
 376 007c 0420     		movs	r0, #4
 377 007e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 378              	.LVL15:
 191:Src/main.c    **** }
 379              		.loc 1 191 0
 380 0082 4FF0FF30 		mov	r0, #-1
 381 0086 0021     		movs	r1, #0
 382 0088 0A46     		mov	r2, r1
 383 008a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 384              	.LVL16:
 192:Src/main.c    **** 
 385              		.loc 1 192 0
 386 008e 15B0     		add	sp, sp, #84
 387              	.LCFI7:
 388              		.cfi_def_cfa_offset 4
 389              		@ sp needed
 390 0090 5DF804FB 		ldr	pc, [sp], #4
 391              	.L28:
 392              		.align	2
 393              	.L27:
 394 0094 00000000 		.word	.LC0
 395 0098 D34D6210 		.word	274877907
 396              		.cfi_endproc
 397              	.LFE64:
 399              		.section	.text.main,"ax",%progbits
 400              		.align	2
 401              		.global	main
 402              		.thumb
 403              		.thumb_func
 405              	main:
 406              	.LFB63:
  91:Src/main.c    ****   /* USER CODE BEGIN 1 */
 407              		.loc 1 91 0
ARM GAS  /tmp/ccwk5FOU.s 			page 14


 408              		.cfi_startproc
 409              		@ Volatile: function does not return.
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412 0000 08B5     		push	{r3, lr}
 413              	.LCFI8:
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 3, -8
 416              		.cfi_offset 14, -4
  99:Src/main.c    ****   setvbuf(stdout,NULL,_IONBF,0);
 417              		.loc 1 99 0
 418 0002 FFF7FEFF 		bl	HAL_Init
 419              	.LVL17:
 100:Src/main.c    ****   /* USER CODE BEGIN Init */
 420              		.loc 1 100 0
 421 0006 0C4B     		ldr	r3, .L32
 422 0008 1B68     		ldr	r3, [r3]
 423 000a 9868     		ldr	r0, [r3, #8]
 424 000c 0021     		movs	r1, #0
 425 000e 0222     		movs	r2, #2
 426 0010 0B46     		mov	r3, r1
 427 0012 FFF7FEFF 		bl	setvbuf
 428              	.LVL18:
 106:Src/main.c    **** 
 429              		.loc 1 106 0
 430 0016 FFF7FEFF 		bl	SystemClock_Config
 431              	.LVL19:
 113:Src/main.c    ****   MX_I2C1_Init();
 432              		.loc 1 113 0
 433 001a FFF7FEFF 		bl	MX_GPIO_Init
 434              	.LVL20:
 114:Src/main.c    ****   MX_I2C2_Init();
 435              		.loc 1 114 0
 436 001e FFF7FEFF 		bl	MX_I2C1_Init
 437              	.LVL21:
 115:Src/main.c    ****   MX_USART1_UART_Init();
 438              		.loc 1 115 0
 439 0022 FFF7FEFF 		bl	MX_I2C2_Init
 440              	.LVL22:
 116:Src/main.c    ****   MX_USB_DEVICE_Init();
 441              		.loc 1 116 0
 442 0026 FFF7FEFF 		bl	MX_USART1_UART_Init
 443              	.LVL23:
 117:Src/main.c    ****   /* USER CODE BEGIN 2 */
 444              		.loc 1 117 0
 445 002a FFF7FEFF 		bl	MX_USB_DEVICE_Init
 446              	.LVL24:
 447              	.L30:
 128:Src/main.c    ****   /* USER CODE BEGIN 3 */
 448              		.loc 1 128 0 discriminator 1
 449 002e 0020     		movs	r0, #0
 450 0030 FFF7FEFF 		bl	prvUARTCommandConsoleTask
 451              	.LVL25:
 131:Src/main.c    ****   /* USER CODE END 3 */
 452              		.loc 1 131 0 discriminator 1
 453 0034 FBE7     		b	.L30
 454              	.L33:
ARM GAS  /tmp/ccwk5FOU.s 			page 15


 455 0036 00BF     		.align	2
 456              	.L32:
 457 0038 00000000 		.word	_impure_ptr
 458              		.cfi_endproc
 459              	.LFE63:
 461              		.comm	huart1,64,4
 462              		.comm	hi2c2,84,4
 463              		.comm	hi2c1,84,4
 464              		.section	.rodata.str1.4,"aMS",%progbits,1
 465              		.align	2
 466              	.LC0:
 467 0000 5372632F 		.ascii	"Src/main.c\000"
 467      6D61696E 
 467      2E6300
 468              		.text
 469              	.Letext0:
 470              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 471              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 472              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 473              		.file 5 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h"
 474              		.file 6 "/usr/include/newlib/sys/lock.h"
 475              		.file 7 "/usr/include/newlib/sys/_types.h"
 476              		.file 8 "/usr/include/newlib/sys/reent.h"
 477              		.file 9 "/usr/include/newlib/stdio.h"
 478              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 479              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 480              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 481              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 482              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 483              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 484              		.file 16 "Drivers/CMSIS/Include/core_cm3.h"
 485              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 486              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 487              		.file 19 "Inc/usb_device.h"
 488              		.file 20 "Inc/cli.h"
ARM GAS  /tmp/ccwk5FOU.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccwk5FOU.s:19     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccwk5FOU.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccwk5FOU.s:74     .text.MX_GPIO_Init:0000000000000040 $d
     /tmp/ccwk5FOU.s:79     .text._Error_Handler:0000000000000000 $t
     /tmp/ccwk5FOU.s:84     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccwk5FOU.s:100    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccwk5FOU.s:104    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccwk5FOU.s:152    .text.MX_I2C1_Init:0000000000000030 $d
                            *COM*:0000000000000054 hi2c1
     /tmp/ccwk5FOU.s:160    .text.MX_I2C2_Init:0000000000000000 $t
     /tmp/ccwk5FOU.s:164    .text.MX_I2C2_Init:0000000000000000 MX_I2C2_Init
     /tmp/ccwk5FOU.s:212    .text.MX_I2C2_Init:0000000000000030 $d
                            *COM*:0000000000000054 hi2c2
     /tmp/ccwk5FOU.s:220    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccwk5FOU.s:224    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccwk5FOU.s:270    .text.MX_USART1_UART_Init:0000000000000030 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccwk5FOU.s:277    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccwk5FOU.s:282    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccwk5FOU.s:394    .text.SystemClock_Config:0000000000000094 $d
     /tmp/ccwk5FOU.s:400    .text.main:0000000000000000 $t
     /tmp/ccwk5FOU.s:405    .text.main:0000000000000000 main
     /tmp/ccwk5FOU.s:457    .text.main:0000000000000038 $d
     /tmp/ccwk5FOU.s:465    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_I2C_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
setvbuf
MX_USB_DEVICE_Init
prvUARTCommandConsoleTask
_impure_ptr
