ARM GAS  /tmp/ccIRRSlb.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"cmd_app.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.cmd_add_Init,"ax",%progbits
  16              		.align	1
  17              		.global	cmd_add_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	cmd_add_Init:
  24              	.LFB65:
  25              		.file 1 "Src/cmd_app.c"
   1:Src/cmd_app.c **** /*
   2:Src/cmd_app.c ****  * cmd_app.c
   3:Src/cmd_app.c ****  *
   4:Src/cmd_app.c ****  *  Created on: Nov 14, 2018
   5:Src/cmd_app.c ****  *      Author: bitohw03
   6:Src/cmd_app.c ****  */
   7:Src/cmd_app.c **** 
   8:Src/cmd_app.c **** #include <string.h>
   9:Src/cmd_app.c **** #include <stdlib.h>
  10:Src/cmd_app.c **** #include <stdio.h>
  11:Src/cmd_app.c **** #include "stm32f1xx_hal.h"
  12:Src/cmd_app.c **** #include "common.h"
  13:Src/cmd_app.c **** //#include "cli.c"
  14:Src/cmd_app.c **** #include "cmd_app.h"
  15:Src/cmd_app.c **** 
  16:Src/cmd_app.c **** 
  17:Src/cmd_app.c **** 
  18:Src/cmd_app.c **** static HAL_StatusTypeDef prvDispOprwConfig(int argc, char** argv)
  19:Src/cmd_app.c **** {
  20:Src/cmd_app.c **** 	I2C_DATA_T i2c_data;
  21:Src/cmd_app.c **** 	uint8_t databuff[256];
  22:Src/cmd_app.c **** 	uint8_t result = HAL_ERROR;
  23:Src/cmd_app.c **** 
  24:Src/cmd_app.c **** 	if (!strcmp(argv[0],"opw") )
  25:Src/cmd_app.c **** 	{
  26:Src/cmd_app.c **** 		i2c_data.rwType = WRITE_CMD;
  27:Src/cmd_app.c **** 	}
  28:Src/cmd_app.c **** 	else if (!strcmp(argv[0],"opr") )
  29:Src/cmd_app.c **** 	{
  30:Src/cmd_app.c **** 		i2c_data.rwType = READ_CMD;
  31:Src/cmd_app.c **** 	}
  32:Src/cmd_app.c **** 
  33:Src/cmd_app.c **** 	i2c_data.devAddr 	= com_str_to_int16(argv[1]);
ARM GAS  /tmp/ccIRRSlb.s 			page 2


  34:Src/cmd_app.c **** 	i2c_data.offsetAddr = com_str_to_int16(argv[2]);
  35:Src/cmd_app.c **** 	i2c_data.readData   = databuff;
  36:Src/cmd_app.c **** 	i2c_data.writeData  = databuff;
  37:Src/cmd_app.c **** 	i2c_data.i2c_dbg_mode = false;  //false:normal i2c mode,true:dbg i2c mode
  38:Src/cmd_app.c **** 
  39:Src/cmd_app.c **** 	if(i2c_data.rwType == READ_CMD)
  40:Src/cmd_app.c **** 	{
  41:Src/cmd_app.c **** 		if(argc == 3)
  42:Src/cmd_app.c **** 		{
  43:Src/cmd_app.c **** 			i2c_data.rwByteNum = 1;
  44:Src/cmd_app.c **** 		}
  45:Src/cmd_app.c **** 		else
  46:Src/cmd_app.c **** 		{
  47:Src/cmd_app.c **** 			i2c_data.rwByteNum = com_str_to_int16(argv[3]);
  48:Src/cmd_app.c **** 		}
  49:Src/cmd_app.c **** 	}
  50:Src/cmd_app.c **** 	else
  51:Src/cmd_app.c **** 	{
  52:Src/cmd_app.c **** 		uint8_t i = 0, index = 0;
  53:Src/cmd_app.c **** 
  54:Src/cmd_app.c **** 		if(argc == 0x4)
  55:Src/cmd_app.c **** 		{
  56:Src/cmd_app.c **** 			i2c_data.rwByteNum = argc - 3;
  57:Src/cmd_app.c **** 			index = 3;
  58:Src/cmd_app.c **** 
  59:Src/cmd_app.c **** 		}
  60:Src/cmd_app.c **** 		else if(argc > 0x4)
  61:Src/cmd_app.c **** 		{
  62:Src/cmd_app.c **** 			i2c_data.rwByteNum = argc - 4;
  63:Src/cmd_app.c **** 			index = 4;
  64:Src/cmd_app.c **** 		}
  65:Src/cmd_app.c **** 
  66:Src/cmd_app.c **** 		for(i= 0; i < i2c_data.rwByteNum;i++ )
  67:Src/cmd_app.c **** 		{
  68:Src/cmd_app.c **** 			databuff[i] = com_str_to_int16(argv[index + i]);
  69:Src/cmd_app.c **** 		}
  70:Src/cmd_app.c **** 	}
  71:Src/cmd_app.c **** 
  72:Src/cmd_app.c **** 	if(i2c_data.rwType == READ_CMD)
  73:Src/cmd_app.c **** 	{
  74:Src/cmd_app.c **** 	//		result = smb_read_multi_byte( i2c_data.devAddr, i2c_data.offsetAddr,  i2c_data.readData, i2c_d
  75:Src/cmd_app.c **** 	}
  76:Src/cmd_app.c **** 	else
  77:Src/cmd_app.c **** 	{
  78:Src/cmd_app.c **** 	//		result = smb_write_multi_byte( i2c_data.devAddr, i2c_data.offsetAddr,  i2c_data.readData, i2c_
  79:Src/cmd_app.c **** 	}
  80:Src/cmd_app.c **** 
  81:Src/cmd_app.c **** 	if(result == HAL_OK)
  82:Src/cmd_app.c **** 	{
  83:Src/cmd_app.c **** 		printf(" \r\n The value on page (0x%x), index(0x%x) : ",i2c_data.devAddr,i2c_data.offsetAddr);
  84:Src/cmd_app.c **** 		while(i2c_data.rwByteNum --)
  85:Src/cmd_app.c **** 		{
  86:Src/cmd_app.c **** 			printf(" 0x%x",*(i2c_data.readData++));
  87:Src/cmd_app.c **** 		}
  88:Src/cmd_app.c **** 	}
  89:Src/cmd_app.c **** 	return result;
  90:Src/cmd_app.c **** }
ARM GAS  /tmp/ccIRRSlb.s 			page 3


  91:Src/cmd_app.c **** 
  92:Src/cmd_app.c **** void cmd_add_Init(void)
  93:Src/cmd_app.c **** {
  26              		.loc 1 93 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 7047     		bx	lr
  32              		.cfi_endproc
  33              	.LFE65:
  35              		.text
  36              	.Letext0:
  37              		.file 2 "/usr/include/newlib/machine/_default_types.h"
  38              		.file 3 "/usr/include/newlib/sys/lock.h"
  39              		.file 4 "/usr/include/newlib/sys/_types.h"
  40              		.file 5 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
  41              		.file 6 "/usr/include/newlib/sys/reent.h"
  42              		.file 7 "/usr/include/newlib/stdlib.h"
  43              		.file 8 "/usr/include/newlib/sys/_stdint.h"
  44              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
  45              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
ARM GAS  /tmp/ccIRRSlb.s 			page 4


DEFINED SYMBOLS
                            *ABS*:0000000000000000 cmd_app.c
     /tmp/ccIRRSlb.s:16     .text.cmd_add_Init:0000000000000000 $t
     /tmp/ccIRRSlb.s:23     .text.cmd_add_Init:0000000000000000 cmd_add_Init
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
