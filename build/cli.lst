ARM GAS  /tmp/cc1eEA2J.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"cli.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.cli_deinit,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	cli_deinit:
  23              	.LFB68:
  24              		.file 1 "Src/cli.c"
   1:Src/cli.c     **** /*
   2:Src/cli.c     ****  * cli.c
   3:Src/cli.c     ****  *
   4:Src/cli.c     ****  *  Created on: Nov 14, 2018
   5:Src/cli.c     ****  *      Author: bitohw03
   6:Src/cli.c     ****  */
   7:Src/cli.c     **** 
   8:Src/cli.c     **** #include "stm32f1xx_hal.h"
   9:Src/cli.c     **** #include <string.h>
  10:Src/cli.c     **** #include <stdio.h>
  11:Src/cli.c     **** #include <stdlib.h>
  12:Src/cli.c     **** #include <stdarg.h>  //for va_list ap
  13:Src/cli.c     **** #include "cli.h"
  14:Src/cli.c     **** #include "common.h"
  15:Src/cli.c     **** 
  16:Src/cli.c     **** 
  17:Src/cli.c     **** #define UART_BUFF_LEN 100
  18:Src/cli.c     **** 
  19:Src/cli.c     **** static bit label = false;
  20:Src/cli.c     **** GET_CMD_PARAM_INFO_T gCmdParamInfo;
  21:Src/cli.c     **** 
  22:Src/cli.c     **** struct
  23:Src/cli.c     **** {
  24:Src/cli.c     **** 	char 			cHandleBuf[UART_BUFF_LEN];
  25:Src/cli.c     **** 	char 			*read_ptr;     //read pointer
  26:Src/cli.c     **** 	char 			*write_ptr;	   //write pointer
  27:Src/cli.c     **** }gUsbParamInfo;
  28:Src/cli.c     **** 
  29:Src/cli.c     **** struct
  30:Src/cli.c     **** {
  31:Src/cli.c     **** 	CLI_Command_List_t command[100];
  32:Src/cli.c     **** 	CLI_Command_List_t parameter[100];
  33:Src/cli.c     **** }clilist;
  34:Src/cli.c     **** 
ARM GAS  /tmp/cc1eEA2J.s 			page 2


  35:Src/cli.c     **** static void vOutputString(char *str)
  36:Src/cli.c     **** {
  37:Src/cli.c     **** 	printf("%s",str);
  38:Src/cli.c     **** }
  39:Src/cli.c     **** static void vOutputChar(char ch)
  40:Src/cli.c     **** {
  41:Src/cli.c     **** 	printf("%c",ch);
  42:Src/cli.c     **** }
  43:Src/cli.c     **** char vGetchar(uint16_t time)
  44:Src/cli.c     **** {
  45:Src/cli.c     **** 		return read_cInput(time);
  46:Src/cli.c     **** }
  47:Src/cli.c     **** void prvUARTCommandConsoleTask(void const *pvParameters)
  48:Src/cli.c     **** {
  49:Src/cli.c     **** 	CLI_info_init();  //CLI ï¿½ï¿½Ê¼ï¿½ï¿½
  50:Src/cli.c     **** 	while(1)
  51:Src/cli.c     **** 	{
  52:Src/cli.c     **** 		CLI_event_handle(); //CLIï¿½Ö·ï¿½ï¿½ï¿½ï¿½ï¿½poll
  53:Src/cli.c     **** //		vTaskDelay(30);
  54:Src/cli.c     **** 	}
  55:Src/cli.c     **** }
  56:Src/cli.c     **** 
  57:Src/cli.c     **** static void cli_deinit() //ï¿½ï¿½ï¿½ï¿½ï¿½Õ¶ï¿½
  58:Src/cli.c     **** {
  25              		.loc 1 58 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  59:Src/cli.c     **** 	gCmdParamInfo.cmdBufTail   = gCmdParamInfo.cmdBuf;
  30              		.loc 1 59 0
  31 0000 044B     		ldr	r3, .L2
  32 0002 03F5B072 		add	r2, r3, #352
  33 0006 5A60     		str	r2, [r3, #4]
  60:Src/cli.c     **** 	gCmdParamInfo.cmdBufCursor = gCmdParamInfo.cmdBuf;
  34              		.loc 1 60 0
  35 0008 9A60     		str	r2, [r3, #8]
  61:Src/cli.c     **** 	gCmdParamInfo.cmdBuf[0] ='\0';
  36              		.loc 1 61 0
  37 000a 0022     		movs	r2, #0
  38 000c 83F86021 		strb	r2, [r3, #352]
  39 0010 7047     		bx	lr
  40              	.L3:
  41 0012 00BF     		.align	2
  42              	.L2:
  43 0014 00000000 		.word	gCmdParamInfo
  44              		.cfi_endproc
  45              	.LFE68:
  47              		.section	.text.vOutputString,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu softvfp
  54              	vOutputString:
  55              	.LFB64:
  36:Src/cli.c     **** 	printf("%s",str);
ARM GAS  /tmp/cc1eEA2J.s 			page 3


  56              		.loc 1 36 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              	.LVL0:
  61 0000 08B5     		push	{r3, lr}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 3, -8
  65              		.cfi_offset 14, -4
  37:Src/cli.c     **** }
  66              		.loc 1 37 0
  67 0002 0146     		mov	r1, r0
  68 0004 0148     		ldr	r0, .L6
  69              	.LVL1:
  70 0006 FFF7FEFF 		bl	printf
  71              	.LVL2:
  72 000a 08BD     		pop	{r3, pc}
  73              	.L7:
  74              		.align	2
  75              	.L6:
  76 000c 00000000 		.word	.LC0
  77              		.cfi_endproc
  78              	.LFE64:
  80              		.section	.text.prvDispHelpConfig,"ax",%progbits
  81              		.align	1
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu softvfp
  87              	prvDispHelpConfig:
  88              	.LFB79:
  62:Src/cli.c     **** }
  63:Src/cli.c     **** 
  64:Src/cli.c     **** static char *CLIGetParameter(char *str,uint8_t num)  //ï¿½È¶Ôµï¿½ï¿½ï¿½ï¿½Ö·ï¿½ï¿½ï¿½ï¿½ï¿½Ê§ï¿½Ü·ï
  65:Src/cli.c     **** {
  66:Src/cli.c     **** 	char *dst = str;
  67:Src/cli.c     **** 	uint8_t i = 0;
  68:Src/cli.c     **** 	while(*dst == ' ') dst++;
  69:Src/cli.c     **** 	if(num == 0 && *dst)
  70:Src/cli.c     **** 	{
  71:Src/cli.c     **** 		return dst;
  72:Src/cli.c     **** 	}
  73:Src/cli.c     **** 	while(*dst)
  74:Src/cli.c     **** 	{
  75:Src/cli.c     **** 		if(*dst == '[')
  76:Src/cli.c     **** 		{
  77:Src/cli.c     **** 			dst = strchr(dst, ']') + 1;
  78:Src/cli.c     **** 			if(dst == NULL)
  79:Src/cli.c     **** 			{
  80:Src/cli.c     **** 				vOutputString("\r\n Instruction standard error, please contact software processing!");
  81:Src/cli.c     **** 				return NULL;
  82:Src/cli.c     **** 			}
  83:Src/cli.c     **** 		}
  84:Src/cli.c     **** 		else if(*dst++ == ' ')
  85:Src/cli.c     **** 		{
  86:Src/cli.c     **** 			while(*dst == ' ') dst++;
ARM GAS  /tmp/cc1eEA2J.s 			page 4


  87:Src/cli.c     **** 			i++;
  88:Src/cli.c     **** 			if(i == num && *dst)
  89:Src/cli.c     **** 			{
  90:Src/cli.c     **** 				return dst;
  91:Src/cli.c     **** 			}
  92:Src/cli.c     **** 		}
  93:Src/cli.c     **** 	}
  94:Src/cli.c     **** 	return NULL;
  95:Src/cli.c     **** }
  96:Src/cli.c     **** 
  97:Src/cli.c     **** static void cli_format_cmd(char *strtop,char **parameter)  //ï¿½Ö¸ï¿½ï¿½Ö·ï¿½ï¿½ï¿½
  98:Src/cli.c     **** {
  99:Src/cli.c     **** 	char *strend;
 100:Src/cli.c     **** 
 101:Src/cli.c     **** 	gCmdParamInfo.argc = 0;
 102:Src/cli.c     **** 	gCmdParamInfo.argv[0] = gCmdParamInfo.argvBuf;
 103:Src/cli.c     **** 	do
 104:Src/cli.c     **** 	{
 105:Src/cli.c     **** 		strend = strchr(strtop,' ');
 106:Src/cli.c     **** 		if(strend == NULL)
 107:Src/cli.c     **** 		{
 108:Src/cli.c     **** 			if(strncmp(strtop,"-all",4))
 109:Src/cli.c     **** 			{
 110:Src/cli.c     **** 				strcpy(gCmdParamInfo.argv[gCmdParamInfo.argc],strtop);
 111:Src/cli.c     **** 				*(gCmdParamInfo.argv[gCmdParamInfo.argc ++] + strlen(strtop)) = '\0';
 112:Src/cli.c     **** 				gCmdParamInfo.argv[gCmdParamInfo.argc] = gCmdParamInfo.argv[gCmdParamInfo.argc - 1] + strlen(st
 113:Src/cli.c     **** 			}
 114:Src/cli.c     **** 			else
 115:Src/cli.c     **** 			{
 116:Src/cli.c     **** 				*parameter = strtop + 1;
 117:Src/cli.c     **** 				parameter ++;
 118:Src/cli.c     **** 			}
 119:Src/cli.c     **** 		}
 120:Src/cli.c     **** 		else
 121:Src/cli.c     **** 		{
 122:Src/cli.c     **** 			if(strncmp(strtop,"-all",4))
 123:Src/cli.c     **** 			{
 124:Src/cli.c     **** 				strncpy(gCmdParamInfo.argv[gCmdParamInfo.argc],strtop,strend - strtop);
 125:Src/cli.c     **** 				*(gCmdParamInfo.argv[gCmdParamInfo.argc ++] + (strend - strtop)) = '\0';
 126:Src/cli.c     **** 				gCmdParamInfo.argv[gCmdParamInfo.argc] = gCmdParamInfo.argv[gCmdParamInfo.argc - 1] + (strend -
 127:Src/cli.c     **** 			}
 128:Src/cli.c     **** 			else
 129:Src/cli.c     **** 			{
 130:Src/cli.c     **** 				*parameter = strtop + 1;
 131:Src/cli.c     **** 				parameter ++;
 132:Src/cli.c     **** 			}
 133:Src/cli.c     **** 			strtop = strend + 1;
 134:Src/cli.c     **** 		}
 135:Src/cli.c     **** 	}
 136:Src/cli.c     **** 	while(strend);
 137:Src/cli.c     **** 	gCmdParamInfo.argv[gCmdParamInfo.argc][0] = '\0';
 138:Src/cli.c     **** }
 139:Src/cli.c     **** 
 140:Src/cli.c     **** static void cli_write_history_cmd(char *str)  //ï¿½ï¿½ï¿½ï¿½ï¿½Ê·ï¿½ï¿½ï¿½ï¿½
 141:Src/cli.c     **** {
 142:Src/cli.c     **** 	static uint8_t i = 0;
 143:Src/cli.c     **** 
ARM GAS  /tmp/cc1eEA2J.s 			page 5


 144:Src/cli.c     **** 	if(strcmp(gCmdParamInfo.historyCmd.cmdBuf[i], str))
 145:Src/cli.c     **** 	{
 146:Src/cli.c     **** 		if(gCmdParamInfo.historyCmd.cmdBuf[i][0] != 0)
 147:Src/cli.c     **** 		{
 148:Src/cli.c     **** 			if(++i >= HISTORY_CMD_NUM)
 149:Src/cli.c     **** 			{
 150:Src/cli.c     **** 				i = 0;
 151:Src/cli.c     **** 			}
 152:Src/cli.c     **** 		}
 153:Src/cli.c     **** 		strcpy(gCmdParamInfo.historyCmd.cmdBuf[i],str);
 154:Src/cli.c     **** 	}
 155:Src/cli.c     **** 	gCmdParamInfo.historyCmd.wIndex = i;
 156:Src/cli.c     **** }
 157:Src/cli.c     **** 
 158:Src/cli.c     **** static void cli_read_history_cmd(uint8_t way) //ï¿½ï¿½ï¿½ï¿½Ê·ï¿½ï¿½ï¿½ï¿½
 159:Src/cli.c     **** {
 160:Src/cli.c     **** 	int i;
 161:Src/cli.c     **** 
 162:Src/cli.c     **** 	way = 0;
 163:Src/cli.c     **** 
 164:Src/cli.c     **** 	while(gCmdParamInfo.historyCmd.cmdBuf[gCmdParamInfo.historyCmd.wIndex][0] == 0 && gCmdParamInfo.hi
 165:Src/cli.c     **** 	{
 166:Src/cli.c     **** 		--gCmdParamInfo.historyCmd.wIndex;
 167:Src/cli.c     **** 	}
 168:Src/cli.c     **** 
 169:Src/cli.c     **** 	if(gCmdParamInfo.historyCmd.cmdBuf[gCmdParamInfo.historyCmd.wIndex][0] != 0)
 170:Src/cli.c     **** 	{
 171:Src/cli.c     **** 		for(i = strlen(gCmdParamInfo.cmdBufCursor); i > 0; i--)
 172:Src/cli.c     **** 		{
 173:Src/cli.c     **** 			vOutputChar(' ');
 174:Src/cli.c     **** 		}
 175:Src/cli.c     **** 
 176:Src/cli.c     **** 		for(i = strlen(gCmdParamInfo.cmdBuf); i > 0; i--)
 177:Src/cli.c     **** 		{
 178:Src/cli.c     **** 			vOutputString("\b \b");
 179:Src/cli.c     **** 		}
 180:Src/cli.c     **** 
 181:Src/cli.c     **** 		strcpy(gCmdParamInfo.cmdBuf, &gCmdParamInfo.historyCmd.cmdBuf[gCmdParamInfo.historyCmd.wIndex][0]
 182:Src/cli.c     **** 		gCmdParamInfo.cmdBufCursor = gCmdParamInfo.cmdBuf + strlen(&gCmdParamInfo.historyCmd.cmdBuf[gCmdP
 183:Src/cli.c     **** 		gCmdParamInfo.cmdBufTail   = gCmdParamInfo.cmdBufCursor;
 184:Src/cli.c     **** 		vOutputString(gCmdParamInfo.cmdBuf);
 185:Src/cli.c     **** 
 186:Src/cli.c     **** 		if(gCmdParamInfo.historyCmd.wIndex -- == 0)
 187:Src/cli.c     **** 		{
 188:Src/cli.c     **** 			gCmdParamInfo.historyCmd.wIndex = HISTORY_CMD_NUM - 1;
 189:Src/cli.c     **** 		}
 190:Src/cli.c     **** 	}
 191:Src/cli.c     **** }
 192:Src/cli.c     **** static void cli_cInput(char ReadChar)
 193:Src/cli.c     **** {
 194:Src/cli.c     **** 	if(ReadChar == ' ' && (*gCmdParamInfo.cmdBufCursor == ' '|| \
 195:Src/cli.c     **** 							(gCmdParamInfo.cmdBufCursor == gCmdParamInfo.cmdBuf) || \
 196:Src/cli.c     **** 							(*(gCmdParamInfo.cmdBufCursor - 1) == ' ')))
 197:Src/cli.c     **** 	{
 198:Src/cli.c     **** 		return;
 199:Src/cli.c     **** 	}
 200:Src/cli.c     **** 	else
ARM GAS  /tmp/cc1eEA2J.s 			page 6


 201:Src/cli.c     **** 	{
 202:Src/cli.c     **** 		char str[CMD_MAX_LENG];
 203:Src/cli.c     **** 		uint16_t i;
 204:Src/cli.c     **** 		strcpy(str, gCmdParamInfo.cmdBufCursor);
 205:Src/cli.c     **** 		memcpy((gCmdParamInfo.cmdBufCursor + 1),str,strlen(str) + 1);
 206:Src/cli.c     **** 		*gCmdParamInfo.cmdBufCursor = ReadChar;
 207:Src/cli.c     **** 		vOutputChar(ReadChar);
 208:Src/cli.c     **** 		vOutputString(str);
 209:Src/cli.c     **** 		for(i = strlen(str) ; i > 0 ; i-- )
 210:Src/cli.c     **** 		{
 211:Src/cli.c     **** 			vOutputChar('\b');
 212:Src/cli.c     **** 		}
 213:Src/cli.c     **** 		gCmdParamInfo.cmdBufCursor ++;
 214:Src/cli.c     **** 		gCmdParamInfo.cmdBufTail ++;
 215:Src/cli.c     **** 	}
 216:Src/cli.c     **** }
 217:Src/cli.c     **** static void cli_backspace(void)
 218:Src/cli.c     **** {
 219:Src/cli.c     **** 	char str[CMD_MAX_LENG];
 220:Src/cli.c     **** 	uint16_t i;
 221:Src/cli.c     **** 
 222:Src/cli.c     **** 	if(gCmdParamInfo.cmdBufCursor != gCmdParamInfo.cmdBuf)
 223:Src/cli.c     **** 	{
 224:Src/cli.c     **** 		do
 225:Src/cli.c     **** 		{
 226:Src/cli.c     **** 			if(gCmdParamInfo.cmdBufCursor == gCmdParamInfo.cmdBuf)
 227:Src/cli.c     **** 			{
 228:Src/cli.c     **** 				vOutputString(" ");
 229:Src/cli.c     **** 				gCmdParamInfo.cmdBufCursor ++;
 230:Src/cli.c     **** 			}
 231:Src/cli.c     **** 			strcpy(str, gCmdParamInfo.cmdBufCursor);
 232:Src/cli.c     **** 			gCmdParamInfo.cmdBufCursor --;
 233:Src/cli.c     **** 			gCmdParamInfo.cmdBufTail --;
 234:Src/cli.c     **** 			memcpy((gCmdParamInfo.cmdBufCursor),str,strlen(str)+1);
 235:Src/cli.c     **** 
 236:Src/cli.c     **** 			vOutputString("\b \b");
 237:Src/cli.c     **** 			vOutputString(str);
 238:Src/cli.c     **** 			vOutputString(" \b");
 239:Src/cli.c     **** 
 240:Src/cli.c     **** 			for(i = strlen(str); i > 0; i--)
 241:Src/cli.c     **** 			{
 242:Src/cli.c     **** 				vOutputChar('\b');
 243:Src/cli.c     **** 			}
 244:Src/cli.c     **** 		}
 245:Src/cli.c     **** 		while((gCmdParamInfo.cmdBufCursor == gCmdParamInfo.cmdBuf)&&(*gCmdParamInfo.cmdBufCursor == ' '))
 246:Src/cli.c     **** 	}
 247:Src/cli.c     **** }
 248:Src/cli.c     **** 
 249:Src/cli.c     **** static void cli_direction(char ReadChar)
 250:Src/cli.c     **** {
 251:Src/cli.c     **** 	switch(ReadChar)
 252:Src/cli.c     **** 	{
 253:Src/cli.c     **** 		case 'A': //up direction key
 254:Src/cli.c     **** 		{
 255:Src/cli.c     **** 			cli_read_history_cmd(0);
 256:Src/cli.c     **** 			break;
 257:Src/cli.c     **** 		}
ARM GAS  /tmp/cc1eEA2J.s 			page 7


 258:Src/cli.c     **** 		case 'B': //down direction key
 259:Src/cli.c     **** 		{
 260:Src/cli.c     **** 			cli_read_history_cmd(1);
 261:Src/cli.c     **** 			break;
 262:Src/cli.c     **** 		}
 263:Src/cli.c     **** 		case 'C': //right direciton key
 264:Src/cli.c     **** 		{
 265:Src/cli.c     **** 			if(*gCmdParamInfo.cmdBufCursor != '\0')
 266:Src/cli.c     **** 			{
 267:Src/cli.c     **** 				vOutputChar(0x1b);
 268:Src/cli.c     **** 				vOutputChar(0x5b);
 269:Src/cli.c     **** 				vOutputChar('C');
 270:Src/cli.c     **** 				gCmdParamInfo.cmdBufCursor++;
 271:Src/cli.c     **** 			}
 272:Src/cli.c     **** 			break;
 273:Src/cli.c     **** 		}
 274:Src/cli.c     **** 		case 'D': //left direciton key
 275:Src/cli.c     **** 		{
 276:Src/cli.c     **** 			if(gCmdParamInfo.cmdBufCursor != gCmdParamInfo.cmdBuf)
 277:Src/cli.c     **** 			{
 278:Src/cli.c     **** 				vOutputChar(0x1b);
 279:Src/cli.c     **** 				vOutputChar(0x5b);
 280:Src/cli.c     **** 				vOutputChar('D');
 281:Src/cli.c     **** 				gCmdParamInfo.cmdBufCursor--;
 282:Src/cli.c     **** 			}
 283:Src/cli.c     **** 			break;
 284:Src/cli.c     **** 		}
 285:Src/cli.c     **** 		default :
 286:Src/cli.c     **** 			break;
 287:Src/cli.c     **** 	}
 288:Src/cli.c     **** }
 289:Src/cli.c     **** 
 290:Src/cli.c     **** /*
 291:Src/cli.c     **** static CLI_Command_List_t *CLIParameterSeek(char *str)
 292:Src/cli.c     **** {
 293:Src/cli.c     **** 	CLI_Command_List_t *command = NULL;
 294:Src/cli.c     **** 	uint8_t num = 0;
 295:Src/cli.c     **** 	return command;
 296:Src/cli.c     **** }
 297:Src/cli.c     **** */
 298:Src/cli.c     **** static char  *CLI_Charmatching(char *src,char *dst)
 299:Src/cli.c     **** {
 300:Src/cli.c     **** 	char *ptr;
 301:Src/cli.c     **** 
 302:Src/cli.c     **** 	if(*src == '#')
 303:Src/cli.c     **** 	{
 304:Src/cli.c     **** 		return dst;
 305:Src/cli.c     **** 	}
 306:Src/cli.c     **** 
 307:Src/cli.c     **** 	if(!dst || !src)
 308:Src/cli.c     **** 	{
 309:Src/cli.c     **** 		return NULL;
 310:Src/cli.c     **** 	}
 311:Src/cli.c     **** 
 312:Src/cli.c     **** 	if(*src == '&')
 313:Src/cli.c     **** 	{
 314:Src/cli.c     **** 		return dst;
ARM GAS  /tmp/cc1eEA2J.s 			page 8


 315:Src/cli.c     **** 	}
 316:Src/cli.c     **** 
 317:Src/cli.c     **** 	if(*src == '[')
 318:Src/cli.c     **** 	{
 319:Src/cli.c     **** 		do
 320:Src/cli.c     **** 		{
 321:Src/cli.c     **** 			while(*(++src) == ' ');
 322:Src/cli.c     **** 			ptr = dst;
 323:Src/cli.c     **** 			while(*src == *ptr)
 324:Src/cli.c     **** 			{
 325:Src/cli.c     **** 				src ++;
 326:Src/cli.c     **** 				ptr ++;
 327:Src/cli.c     **** 				if(((*ptr == ' ') || (*ptr == '\0')) && ((*src == ' ') || (*src == '|') || (*src == ']')|| (*sr
 328:Src/cli.c     **** 				{
 329:Src/cli.c     **** 					return (src - (ptr - dst));
 330:Src/cli.c     **** 				}
 331:Src/cli.c     **** 			}
 332:Src/cli.c     **** 			while((*src != ']')&&(*src != '|'))src++;
 333:Src/cli.c     **** 		}while(*src != ']');
 334:Src/cli.c     **** 		return NULL;
 335:Src/cli.c     **** 	}
 336:Src/cli.c     **** 
 337:Src/cli.c     **** 	ptr = strchr(src,' ');
 338:Src/cli.c     **** 
 339:Src/cli.c     **** 	if(((ptr == NULL) && (!strcmp(src,dst))) || \
 340:Src/cli.c     **** 			(((((ptr != NULL) && (!strncmp(src,dst,ptr - src)))) && ((*(dst + (ptr - src)) == ' ') || (*(dst
 341:Src/cli.c     **** 			((ptr == NULL) && strchr(dst,'-') &&  !strncmp(src,dst,strlen(src))))
 342:Src/cli.c     **** 	{
 343:Src/cli.c     **** 		return src;
 344:Src/cli.c     **** 	}
 345:Src/cli.c     **** 	else
 346:Src/cli.c     **** 	{
 347:Src/cli.c     **** 		return NULL;
 348:Src/cli.c     **** 	}
 349:Src/cli.c     **** 
 350:Src/cli.c     **** }
 351:Src/cli.c     **** 
 352:Src/cli.c     **** static CLI_Command_List_t *CLICommandSeek(char *str)
 353:Src/cli.c     **** {
 354:Src/cli.c     **** 	CLI_Command_List_t *command = &clilist.command[0];
 355:Src/cli.c     **** 	char * src,  * dst ;
 356:Src/cli.c     **** 	do
 357:Src/cli.c     **** 	{
 358:Src/cli.c     **** 		src = command -> str;
 359:Src/cli.c     **** 		dst = str;
 360:Src/cli.c     **** 		while((*src == '#') || (CLI_Charmatching(src,dst) != NULL))
 361:Src/cli.c     **** 		{
 362:Src/cli.c     **** 			if(*src == '#' && (!CLIGetParameter(src,1)))
 363:Src/cli.c     **** 			{
 364:Src/cli.c     **** 				return command;
 365:Src/cli.c     **** 			}
 366:Src/cli.c     **** 			dst = CLIGetParameter(dst,1); //ï¿½ï¿½È¡ï¿½Ã»ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Ö·ï¿½ï¿½ï¿½
 367:Src/cli.c     **** 			src = CLIGetParameter(src,1); //ï¿½ï¿½È¡ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Ö·ï¿½ï¿½ï¿½
 368:Src/cli.c     **** 
 369:Src/cli.c     **** 			while((dst) && (*dst == '-'))
 370:Src/cli.c     **** 			dst = CLIGetParameter(dst,1); //ï¿½ï¿½È¡ï¿½Ã»ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Ö·ï¿½ï¿½ï¿½
 371:Src/cli.c     **** 
ARM GAS  /tmp/cc1eEA2J.s 			page 9


 372:Src/cli.c     **** 			if(!src && !dst)
 373:Src/cli.c     **** 			{
 374:Src/cli.c     **** 				return command;
 375:Src/cli.c     **** 			}
 376:Src/cli.c     **** 		}
 377:Src/cli.c     **** 	}while((++command)->str);
 378:Src/cli.c     **** 	return NULL;
 379:Src/cli.c     **** }
 380:Src/cli.c     **** 
 381:Src/cli.c     **** static void cli_ProcessCommand(char *str)
 382:Src/cli.c     **** {
 383:Src/cli.c     **** 	HAL_StatusTypeDef ret = HAL_OK;
 384:Src/cli.c     **** 	CLI_Command_List_t *command;
 385:Src/cli.c     **** 	char *parameter[10] = {NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL};
 386:Src/cli.c     **** 	char **prt = parameter;
 387:Src/cli.c     **** 
 388:Src/cli.c     **** 	cli_write_history_cmd(str);  //ï¿½ï¿½ï¿½ï¿½ï¿½Ê·ï¿½ï¿½ï¿½ï¿½
 389:Src/cli.c     **** 	cli_format_cmd(str,prt);	 //ï¿½Ö¸ï¿½ï¿½Ö·ï¿½ï¿½ï¿½  -allï¿½ï¿½ï¿½ï¿½Óµï¿½char** argv
 390:Src/cli.c     **** 
 391:Src/cli.c     **** 	command = CLICommandSeek(str);  //ï¿½Ú±ï¿½ï¿½Ð²ï¿½ï¿½Ò´ï¿½ï¿½ï¿½ï¿½ï¿½
 392:Src/cli.c     **** 	if(command != NULL)
 393:Src/cli.c     **** 	{
 394:Src/cli.c     **** 		ret = command->p(gCmdParamInfo.argc,gCmdParamInfo.argv); //Ö´ï¿½ï¿½ï¿½Ö·ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï
 395:Src/cli.c     **** 		if(HAL_OK != ret)
 396:Src/cli.c     **** 		{
 397:Src/cli.c     **** 			vOutputString("\r\n---ATECMDRESULT--- FAIL");
 398:Src/cli.c     **** 		}
 399:Src/cli.c     **** 		else
 400:Src/cli.c     **** 		{
 401:Src/cli.c     **** 			vOutputString("\r\n---ATECMDRESULT--- OK");
 402:Src/cli.c     **** 		}
 403:Src/cli.c     **** 	}
 404:Src/cli.c     **** 	else
 405:Src/cli.c     **** 	{
 406:Src/cli.c     **** 		vOutputString("\r\nCommand not recognised.  Enter 'help' to view a list of available commands.");
 407:Src/cli.c     **** 	}
 408:Src/cli.c     **** }
 409:Src/cli.c     **** static HAL_StatusTypeDef prvDispHelpConfig()  //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½î´¦ï¿½ï¿½ï¿½ï¿½
 410:Src/cli.c     **** {
  89              		.loc 1 410 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93 0000 10B5     		push	{r4, lr}
  94              	.LCFI1:
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 4, -8
  97              		.cfi_offset 14, -4
  98              	.LVL3:
 411:Src/cli.c     **** 	CLI_Command_List_t *command = &clilist.command[0];
  99              		.loc 1 411 0
 100 0002 064C     		ldr	r4, .L11
 101              	.LVL4:
 102              	.L9:
 412:Src/cli.c     **** 	do
 413:Src/cli.c     **** 	{
 414:Src/cli.c     **** 		vOutputString("\r\n        ");
ARM GAS  /tmp/cc1eEA2J.s 			page 10


 103              		.loc 1 414 0 discriminator 1
 104 0004 0648     		ldr	r0, .L11+4
 105 0006 FFF7FEFF 		bl	vOutputString
 106              	.LVL5:
 415:Src/cli.c     **** 		vOutputString(command ->str);
 107              		.loc 1 415 0 discriminator 1
 108 000a 2068     		ldr	r0, [r4]
 109 000c FFF7FEFF 		bl	vOutputString
 110              	.LVL6:
 416:Src/cli.c     **** 	}while((++command) ->str);
 111              		.loc 1 416 0 discriminator 1
 112 0010 54F8083F 		ldr	r3, [r4, #8]!
 113              	.LVL7:
 114 0014 002B     		cmp	r3, #0
 115 0016 F5D1     		bne	.L9
 417:Src/cli.c     **** 	return HAL_OK;
 418:Src/cli.c     **** }
 116              		.loc 1 418 0
 117 0018 0020     		movs	r0, #0
 118 001a 10BD     		pop	{r4, pc}
 119              	.LVL8:
 120              	.L12:
 121              		.align	2
 122              	.L11:
 123 001c 00000000 		.word	clilist
 124 0020 00000000 		.word	.LC1
 125              		.cfi_endproc
 126              	.LFE79:
 128              		.section	.text.cli_write_history_cmd,"ax",%progbits
 129              		.align	1
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 133              		.fpu softvfp
 135              	cli_write_history_cmd:
 136              	.LFB71:
 141:Src/cli.c     **** 	static uint8_t i = 0;
 137              		.loc 1 141 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              	.LVL9:
 142 0000 38B5     		push	{r3, r4, r5, lr}
 143              	.LCFI2:
 144              		.cfi_def_cfa_offset 16
 145              		.cfi_offset 3, -16
 146              		.cfi_offset 4, -12
 147              		.cfi_offset 5, -8
 148              		.cfi_offset 14, -4
 149 0002 0546     		mov	r5, r0
 144:Src/cli.c     **** 	{
 150              		.loc 1 144 0
 151 0004 144B     		ldr	r3, .L17
 152 0006 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 153 0008 2302     		lsls	r3, r4, #8
 154 000a 03F51873 		add	r3, r3, #608
 155 000e 0146     		mov	r1, r0
ARM GAS  /tmp/cc1eEA2J.s 			page 11


 156 0010 1248     		ldr	r0, .L17+4
 157              	.LVL10:
 158 0012 1844     		add	r0, r0, r3
 159 0014 FFF7FEFF 		bl	strcmp
 160              	.LVL11:
 161 0018 B8B1     		cbz	r0, .L14
 146:Src/cli.c     **** 		{
 162              		.loc 1 146 0
 163 001a 104B     		ldr	r3, .L17+4
 164 001c 03EB0423 		add	r3, r3, r4, lsl #8
 165 0020 93F86032 		ldrb	r3, [r3, #608]	@ zero_extendqisi2
 166 0024 3BB1     		cbz	r3, .L15
 148:Src/cli.c     **** 			{
 167              		.loc 1 148 0
 168 0026 0134     		adds	r4, r4, #1
 169 0028 E4B2     		uxtb	r4, r4
 170 002a 0B4B     		ldr	r3, .L17
 171 002c 1C70     		strb	r4, [r3]
 172 002e 042C     		cmp	r4, #4
 173 0030 01D9     		bls	.L15
 150:Src/cli.c     **** 			}
 174              		.loc 1 150 0
 175 0032 0022     		movs	r2, #0
 176 0034 1A70     		strb	r2, [r3]
 177              	.L15:
 153:Src/cli.c     **** 	}
 178              		.loc 1 153 0
 179 0036 084B     		ldr	r3, .L17
 180 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 181 003a 1B02     		lsls	r3, r3, #8
 182 003c 03F51873 		add	r3, r3, #608
 183 0040 2946     		mov	r1, r5
 184 0042 0648     		ldr	r0, .L17+4
 185 0044 1844     		add	r0, r0, r3
 186 0046 FFF7FEFF 		bl	strcpy
 187              	.LVL12:
 188              	.L14:
 155:Src/cli.c     **** }
 189              		.loc 1 155 0
 190 004a 034B     		ldr	r3, .L17
 191 004c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 192 004e 034B     		ldr	r3, .L17+4
 193 0050 83F86027 		strb	r2, [r3, #1888]
 194 0054 38BD     		pop	{r3, r4, r5, pc}
 195              	.LVL13:
 196              	.L18:
 197 0056 00BF     		.align	2
 198              	.L17:
 199 0058 00000000 		.word	.LANCHOR0
 200 005c 00000000 		.word	gCmdParamInfo
 201              		.cfi_endproc
 202              	.LFE71:
 204              		.section	.text.CLIGetParameter,"ax",%progbits
 205              		.align	1
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
ARM GAS  /tmp/cc1eEA2J.s 			page 12


 209              		.fpu softvfp
 211              	CLIGetParameter:
 212              	.LFB69:
  65:Src/cli.c     **** 	char *dst = str;
 213              		.loc 1 65 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              	.LVL14:
 218 0000 70B5     		push	{r4, r5, r6, lr}
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 16
 221              		.cfi_offset 4, -16
 222              		.cfi_offset 5, -12
 223              		.cfi_offset 6, -8
 224              		.cfi_offset 14, -4
 225 0002 0446     		mov	r4, r0
 226 0004 0E46     		mov	r6, r1
 227              	.LVL15:
  68:Src/cli.c     **** 	if(num == 0 && *dst)
 228              		.loc 1 68 0
 229 0006 00E0     		b	.L20
 230              	.LVL16:
 231              	.L21:
  68:Src/cli.c     **** 	if(num == 0 && *dst)
 232              		.loc 1 68 0 is_stmt 0 discriminator 2
 233 0008 0134     		adds	r4, r4, #1
 234              	.LVL17:
 235              	.L20:
  68:Src/cli.c     **** 	if(num == 0 && *dst)
 236              		.loc 1 68 0 discriminator 1
 237 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 238 000c 202B     		cmp	r3, #32
 239 000e FBD0     		beq	.L21
  69:Src/cli.c     **** 	{
 240              		.loc 1 69 0 is_stmt 1
 241 0010 0EBB     		cbnz	r6, .L29
  69:Src/cli.c     **** 	{
 242              		.loc 1 69 0 is_stmt 0 discriminator 1
 243 0012 23BB     		cbnz	r3, .L30
 244 0014 3546     		mov	r5, r6
 245 0016 05E0     		b	.L22
 246              	.LVL18:
 247              	.L35:
  77:Src/cli.c     **** 			if(dst == NULL)
 248              		.loc 1 77 0 is_stmt 1
 249 0018 5D21     		movs	r1, #93
 250 001a 2046     		mov	r0, r4
 251 001c FFF7FEFF 		bl	strchr
 252              	.LVL19:
  78:Src/cli.c     **** 			{
 253              		.loc 1 78 0
 254 0020 441C     		adds	r4, r0, #1
 255              	.LVL20:
 256 0022 07D0     		beq	.L33
 257              	.LVL21:
 258              	.L22:
ARM GAS  /tmp/cc1eEA2J.s 			page 13


  73:Src/cli.c     **** 	{
 259              		.loc 1 73 0
 260 0024 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 261 0026 C3B1     		cbz	r3, .L34
  75:Src/cli.c     **** 		{
 262              		.loc 1 75 0
 263 0028 5B2B     		cmp	r3, #91
 264 002a F5D0     		beq	.L35
  84:Src/cli.c     **** 		{
 265              		.loc 1 84 0
 266 002c 0134     		adds	r4, r4, #1
 267              	.LVL22:
 268 002e 202B     		cmp	r3, #32
 269 0030 F8D1     		bne	.L22
 270 0032 05E0     		b	.L26
 271              	.L33:
  80:Src/cli.c     **** 				return NULL;
 272              		.loc 1 80 0
 273 0034 0B48     		ldr	r0, .L36
 274 0036 FFF7FEFF 		bl	vOutputString
 275              	.LVL23:
  81:Src/cli.c     **** 			}
 276              		.loc 1 81 0
 277 003a 2046     		mov	r0, r4
 278 003c 70BD     		pop	{r4, r5, r6, pc}
 279              	.LVL24:
 280              	.L27:
  86:Src/cli.c     **** 			i++;
 281              		.loc 1 86 0 discriminator 2
 282 003e 0134     		adds	r4, r4, #1
 283              	.LVL25:
 284              	.L26:
  86:Src/cli.c     **** 			i++;
 285              		.loc 1 86 0 is_stmt 0 discriminator 1
 286 0040 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 287 0042 202B     		cmp	r3, #32
 288 0044 FBD0     		beq	.L27
  87:Src/cli.c     **** 			if(i == num && *dst)
 289              		.loc 1 87 0 is_stmt 1
 290 0046 0135     		adds	r5, r5, #1
 291              	.LVL26:
 292 0048 EDB2     		uxtb	r5, r5
 293              	.LVL27:
  88:Src/cli.c     **** 			{
 294              		.loc 1 88 0
 295 004a AE42     		cmp	r6, r5
 296 004c EAD1     		bne	.L22
  88:Src/cli.c     **** 			{
 297              		.loc 1 88 0 is_stmt 0 discriminator 1
 298 004e 002B     		cmp	r3, #0
 299 0050 E8D0     		beq	.L22
  90:Src/cli.c     **** 			}
 300              		.loc 1 90 0 is_stmt 1
 301 0052 2046     		mov	r0, r4
  95:Src/cli.c     **** 
 302              		.loc 1 95 0
 303 0054 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cc1eEA2J.s 			page 14


 304              	.LVL28:
 305              	.L29:
 306 0056 0025     		movs	r5, #0
 307 0058 E4E7     		b	.L22
 308              	.LVL29:
 309              	.L34:
  94:Src/cli.c     **** }
 310              		.loc 1 94 0
 311 005a 0020     		movs	r0, #0
 312 005c 70BD     		pop	{r4, r5, r6, pc}
 313              	.LVL30:
 314              	.L30:
  71:Src/cli.c     **** 	}
 315              		.loc 1 71 0
 316 005e 2046     		mov	r0, r4
 317              	.LVL31:
 318 0060 70BD     		pop	{r4, r5, r6, pc}
 319              	.LVL32:
 320              	.L37:
 321 0062 00BF     		.align	2
 322              	.L36:
 323 0064 00000000 		.word	.LC2
 324              		.cfi_endproc
 325              	.LFE69:
 327              		.section	.text.CLI_Charmatching,"ax",%progbits
 328              		.align	1
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 332              		.fpu softvfp
 334              	CLI_Charmatching:
 335              	.LFB76:
 299:Src/cli.c     **** 	char *ptr;
 336              		.loc 1 299 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              	.LVL33:
 341 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 342              	.LCFI4:
 343              		.cfi_def_cfa_offset 24
 344              		.cfi_offset 3, -24
 345              		.cfi_offset 4, -20
 346              		.cfi_offset 5, -16
 347              		.cfi_offset 6, -12
 348              		.cfi_offset 7, -8
 349              		.cfi_offset 14, -4
 350 0002 0D46     		mov	r5, r1
 302:Src/cli.c     **** 	{
 351              		.loc 1 302 0
 352 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 353 0006 232B     		cmp	r3, #35
 354 0008 5FD0     		beq	.L53
 355 000a 0446     		mov	r4, r0
 307:Src/cli.c     **** 	{
 356              		.loc 1 307 0
 357 000c 0029     		cmp	r1, #0
ARM GAS  /tmp/cc1eEA2J.s 			page 15


 358 000e 5ED0     		beq	.L54
 307:Src/cli.c     **** 	{
 359              		.loc 1 307 0 is_stmt 0 discriminator 1
 360 0010 0028     		cmp	r0, #0
 361 0012 5ED0     		beq	.L55
 312:Src/cli.c     **** 	{
 362              		.loc 1 312 0 is_stmt 1
 363 0014 262B     		cmp	r3, #38
 364 0016 5DD0     		beq	.L56
 317:Src/cli.c     **** 	{
 365              		.loc 1 317 0
 366 0018 5B2B     		cmp	r3, #91
 367 001a 44D0     		beq	.L41
 337:Src/cli.c     **** 
 368              		.loc 1 337 0
 369 001c 2021     		movs	r1, #32
 370              	.LVL34:
 371 001e FFF7FEFF 		bl	strchr
 372              	.LVL35:
 339:Src/cli.c     **** 			(((((ptr != NULL) && (!strncmp(src,dst,ptr - src)))) && ((*(dst + (ptr - src)) == ' ') || (*(dst
 373              		.loc 1 339 0
 374 0022 0646     		mov	r6, r0
 375 0024 0028     		cmp	r0, #0
 376 0026 46D0     		beq	.L64
 377              	.LVL36:
 378              	.L51:
 339:Src/cli.c     **** 			(((((ptr != NULL) && (!strncmp(src,dst,ptr - src)))) && ((*(dst + (ptr - src)) == ' ') || (*(dst
 379              		.loc 1 339 0 is_stmt 0 discriminator 3
 380 0028 5EB1     		cbz	r6, .L52
 340:Src/cli.c     **** 			((ptr == NULL) && strchr(dst,'-') &&  !strncmp(src,dst,strlen(src))))
 381              		.loc 1 340 0 is_stmt 1
 382 002a 371B     		subs	r7, r6, r4
 383 002c 3A46     		mov	r2, r7
 384 002e 2946     		mov	r1, r5
 385 0030 2046     		mov	r0, r4
 386 0032 FFF7FEFF 		bl	strncmp
 387              	.LVL37:
 388 0036 20B9     		cbnz	r0, .L52
 340:Src/cli.c     **** 			((ptr == NULL) && strchr(dst,'-') &&  !strncmp(src,dst,strlen(src))))
 389              		.loc 1 340 0 is_stmt 0 discriminator 1
 390 0038 EB5D     		ldrb	r3, [r5, r7]	@ zero_extendqisi2
 391 003a 202B     		cmp	r3, #32
 392 003c 4CD0     		beq	.L58
 340:Src/cli.c     **** 			((ptr == NULL) && strchr(dst,'-') &&  !strncmp(src,dst,strlen(src))))
 393              		.loc 1 340 0 discriminator 3
 394 003e 002B     		cmp	r3, #0
 395 0040 4CD0     		beq	.L59
 396              	.L52:
 340:Src/cli.c     **** 			((ptr == NULL) && strchr(dst,'-') &&  !strncmp(src,dst,strlen(src))))
 397              		.loc 1 340 0 discriminator 4
 398 0042 002E     		cmp	r6, #0
 399 0044 4CD1     		bne	.L60
 341:Src/cli.c     **** 	{
 400              		.loc 1 341 0 is_stmt 1
 401 0046 2D21     		movs	r1, #45
 402 0048 2846     		mov	r0, r5
 403 004a FFF7FEFF 		bl	strchr
ARM GAS  /tmp/cc1eEA2J.s 			page 16


 404              	.LVL38:
 405 004e 0028     		cmp	r0, #0
 406 0050 48D0     		beq	.L61
 341:Src/cli.c     **** 	{
 407              		.loc 1 341 0 is_stmt 0 discriminator 1
 408 0052 2046     		mov	r0, r4
 409 0054 FFF7FEFF 		bl	strlen
 410              	.LVL39:
 411 0058 0246     		mov	r2, r0
 412 005a 2946     		mov	r1, r5
 413 005c 2046     		mov	r0, r4
 414 005e FFF7FEFF 		bl	strncmp
 415              	.LVL40:
 416 0062 80BB     		cbnz	r0, .L65
 343:Src/cli.c     **** 	}
 417              		.loc 1 343 0 is_stmt 1
 418 0064 2046     		mov	r0, r4
 350:Src/cli.c     **** 
 419              		.loc 1 350 0
 420 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 421              	.LVL41:
 422              	.L43:
 327:Src/cli.c     **** 				{
 423              		.loc 1 327 0 discriminator 3
 424 0068 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 425 006a 202A     		cmp	r2, #32
 426 006c 10D0     		beq	.L45
 327:Src/cli.c     **** 				{
 427              		.loc 1 327 0 is_stmt 0 discriminator 4
 428 006e 7C2A     		cmp	r2, #124
 429 0070 0ED0     		beq	.L45
 327:Src/cli.c     **** 				{
 430              		.loc 1 327 0 discriminator 5
 431 0072 5D2A     		cmp	r2, #93
 432 0074 0CD0     		beq	.L45
 327:Src/cli.c     **** 				{
 433              		.loc 1 327 0 discriminator 6
 434 0076 5AB1     		cbz	r2, .L45
 435              	.LVL42:
 436              	.L42:
 323:Src/cli.c     **** 			{
 437              		.loc 1 323 0 is_stmt 1
 438 0078 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 439 007a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 440 007c 9142     		cmp	r1, r2
 441 007e 0BD1     		bne	.L47
 325:Src/cli.c     **** 				ptr ++;
 442              		.loc 1 325 0
 443 0080 0134     		adds	r4, r4, #1
 444              	.LVL43:
 327:Src/cli.c     **** 				{
 445              		.loc 1 327 0
 446 0082 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2
 447              	.LVL44:
 448 0086 202A     		cmp	r2, #32
 449 0088 EED0     		beq	.L43
 327:Src/cli.c     **** 				{
ARM GAS  /tmp/cc1eEA2J.s 			page 17


 450              		.loc 1 327 0 is_stmt 0 discriminator 2
 451 008a 002A     		cmp	r2, #0
 452 008c F4D1     		bne	.L42
 453 008e EBE7     		b	.L43
 454              	.L45:
 329:Src/cli.c     **** 				}
 455              		.loc 1 329 0 is_stmt 1
 456 0090 581B     		subs	r0, r3, r5
 457 0092 201A     		subs	r0, r4, r0
 458 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 459              	.LVL45:
 460              	.L49:
 332:Src/cli.c     **** 		}while(*src != ']');
 461              		.loc 1 332 0 discriminator 3
 462 0096 0134     		adds	r4, r4, #1
 463              	.LVL46:
 464              	.L47:
 332:Src/cli.c     **** 		}while(*src != ']');
 465              		.loc 1 332 0 is_stmt 0 discriminator 1
 466 0098 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 467 009a 5D2B     		cmp	r3, #93
 468 009c 01D0     		beq	.L48
 332:Src/cli.c     **** 		}while(*src != ']');
 469              		.loc 1 332 0 discriminator 2
 470 009e 7C2B     		cmp	r3, #124
 471 00a0 F9D1     		bne	.L49
 472              	.L48:
 333:Src/cli.c     **** 		return NULL;
 473              		.loc 1 333 0 is_stmt 1
 474 00a2 5D2B     		cmp	r3, #93
 475 00a4 05D0     		beq	.L66
 476              	.LVL47:
 477              	.L41:
 321:Src/cli.c     **** 			ptr = dst;
 478              		.loc 1 321 0 discriminator 1
 479 00a6 14F8013F 		ldrb	r3, [r4, #1]!	@ zero_extendqisi2
 480              	.LVL48:
 481 00aa 202B     		cmp	r3, #32
 482 00ac FBD0     		beq	.L41
 483 00ae 2B46     		mov	r3, r5
 484 00b0 E2E7     		b	.L42
 485              	.LVL49:
 486              	.L66:
 334:Src/cli.c     **** 	}
 487              		.loc 1 334 0
 488 00b2 0020     		movs	r0, #0
 489 00b4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 490              	.LVL50:
 491              	.L64:
 339:Src/cli.c     **** 			(((((ptr != NULL) && (!strncmp(src,dst,ptr - src)))) && ((*(dst + (ptr - src)) == ' ') || (*(dst
 492              		.loc 1 339 0 discriminator 1
 493 00b6 2946     		mov	r1, r5
 494 00b8 2046     		mov	r0, r4
 495              	.LVL51:
 496 00ba FFF7FEFF 		bl	strcmp
 497              	.LVL52:
 498 00be 0028     		cmp	r0, #0
ARM GAS  /tmp/cc1eEA2J.s 			page 18


 499 00c0 B2D1     		bne	.L51
 343:Src/cli.c     **** 	}
 500              		.loc 1 343 0
 501 00c2 2046     		mov	r0, r4
 502 00c4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 503              	.LVL53:
 504              	.L65:
 347:Src/cli.c     **** 	}
 505              		.loc 1 347 0
 506 00c6 0020     		movs	r0, #0
 507 00c8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 508              	.LVL54:
 509              	.L53:
 304:Src/cli.c     **** 	}
 510              		.loc 1 304 0
 511 00ca 0846     		mov	r0, r1
 512              	.LVL55:
 513 00cc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 514              	.LVL56:
 515              	.L54:
 309:Src/cli.c     **** 	}
 516              		.loc 1 309 0
 517 00ce 0846     		mov	r0, r1
 518              	.LVL57:
 519 00d0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 520              	.LVL58:
 521              	.L55:
 522 00d2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 523              	.L56:
 314:Src/cli.c     **** 	}
 524              		.loc 1 314 0
 525 00d4 0846     		mov	r0, r1
 526              	.LVL59:
 527 00d6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 528              	.LVL60:
 529              	.L58:
 343:Src/cli.c     **** 	}
 530              		.loc 1 343 0
 531 00d8 2046     		mov	r0, r4
 532 00da F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 533              	.LVL61:
 534              	.L59:
 535 00dc 2046     		mov	r0, r4
 536 00de F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 537              	.LVL62:
 538              	.L60:
 347:Src/cli.c     **** 	}
 539              		.loc 1 347 0
 540 00e0 0020     		movs	r0, #0
 541 00e2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 542              	.LVL63:
 543              	.L61:
 544 00e4 0020     		movs	r0, #0
 545 00e6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 546              		.cfi_endproc
 547              	.LFE76:
 549              		.section	.text.CLICommandSeek,"ax",%progbits
ARM GAS  /tmp/cc1eEA2J.s 			page 19


 550              		.align	1
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 554              		.fpu softvfp
 556              	CLICommandSeek:
 557              	.LFB77:
 353:Src/cli.c     **** 	CLI_Command_List_t *command = &clilist.command[0];
 558              		.loc 1 353 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              	.LVL64:
 563 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 564              	.LCFI5:
 565              		.cfi_def_cfa_offset 24
 566              		.cfi_offset 4, -24
 567              		.cfi_offset 5, -20
 568              		.cfi_offset 6, -16
 569              		.cfi_offset 7, -12
 570              		.cfi_offset 8, -8
 571              		.cfi_offset 14, -4
 572 0004 8046     		mov	r8, r0
 573              	.LVL65:
 354:Src/cli.c     **** 	char * src,  * dst ;
 574              		.loc 1 354 0
 575 0006 1A4F     		ldr	r7, .L81
 576 0008 2CE0     		b	.L75
 577              	.LVL66:
 578              	.L79:
 362:Src/cli.c     **** 			{
 579              		.loc 1 362 0 discriminator 1
 580 000a 0121     		movs	r1, #1
 581 000c 2846     		mov	r0, r5
 582 000e FFF7FEFF 		bl	CLIGetParameter
 583              	.LVL67:
 584 0012 B0B9     		cbnz	r0, .L69
 585              	.LVL68:
 586              	.L67:
 379:Src/cli.c     **** 
 587              		.loc 1 379 0
 588 0014 3846     		mov	r0, r7
 589 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 590              	.LVL69:
 591              	.L73:
 370:Src/cli.c     **** 
 592              		.loc 1 370 0
 593 001a 0121     		movs	r1, #1
 594 001c 2046     		mov	r0, r4
 595 001e FFF7FEFF 		bl	CLIGetParameter
 596              	.LVL70:
 597 0022 0446     		mov	r4, r0
 598              	.LVL71:
 599              	.L71:
 369:Src/cli.c     **** 			dst = CLIGetParameter(dst,1); //ï¿½ï¿½È¡ï¿½Ã»ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Ö·ï¿½ï¿½ï¿½
 600              		.loc 1 369 0
 601 0024 14B1     		cbz	r4, .L72
ARM GAS  /tmp/cc1eEA2J.s 			page 20


 369:Src/cli.c     **** 			dst = CLIGetParameter(dst,1); //ï¿½ï¿½È¡ï¿½Ã»ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Ö·ï¿½ï¿½ï¿½
 602              		.loc 1 369 0 is_stmt 0 discriminator 1
 603 0026 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 604 0028 2D2B     		cmp	r3, #45
 605 002a F6D0     		beq	.L73
 606              	.L72:
 372:Src/cli.c     **** 			{
 607              		.loc 1 372 0 is_stmt 1
 608 002c A5B1     		cbz	r5, .L77
 609              	.L68:
 360:Src/cli.c     **** 		{
 610              		.loc 1 360 0
 611 002e 2E78     		ldrb	r6, [r5]	@ zero_extendqisi2
 612 0030 232E     		cmp	r6, #35
 613 0032 04D0     		beq	.L74
 360:Src/cli.c     **** 		{
 614              		.loc 1 360 0 is_stmt 0 discriminator 1
 615 0034 2146     		mov	r1, r4
 616 0036 2846     		mov	r0, r5
 617 0038 FFF7FEFF 		bl	CLI_Charmatching
 618              	.LVL72:
 619 003c 78B1     		cbz	r0, .L78
 620              	.L74:
 362:Src/cli.c     **** 			{
 621              		.loc 1 362 0 is_stmt 1
 622 003e 232E     		cmp	r6, #35
 623 0040 E3D0     		beq	.L79
 624              	.L69:
 366:Src/cli.c     **** 			src = CLIGetParameter(src,1); //ï¿½ï¿½È¡ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Ö·ï¿½ï¿½ï¿½
 625              		.loc 1 366 0
 626 0042 0121     		movs	r1, #1
 627 0044 2046     		mov	r0, r4
 628 0046 FFF7FEFF 		bl	CLIGetParameter
 629              	.LVL73:
 630 004a 0446     		mov	r4, r0
 631              	.LVL74:
 367:Src/cli.c     **** 
 632              		.loc 1 367 0
 633 004c 0121     		movs	r1, #1
 634 004e 2846     		mov	r0, r5
 635              	.LVL75:
 636 0050 FFF7FEFF 		bl	CLIGetParameter
 637              	.LVL76:
 638 0054 0546     		mov	r5, r0
 639              	.LVL77:
 369:Src/cli.c     **** 			dst = CLIGetParameter(dst,1); //ï¿½ï¿½È¡ï¿½Ã»ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Ö·ï¿½ï¿½ï¿½
 640              		.loc 1 369 0
 641 0056 E5E7     		b	.L71
 642              	.LVL78:
 643              	.L77:
 372:Src/cli.c     **** 			{
 644              		.loc 1 372 0 discriminator 1
 645 0058 002C     		cmp	r4, #0
 646 005a E8D1     		bne	.L68
 647 005c DAE7     		b	.L67
 648              	.L78:
 377:Src/cli.c     **** 	return NULL;
ARM GAS  /tmp/cc1eEA2J.s 			page 21


 649              		.loc 1 377 0
 650 005e 57F8083F 		ldr	r3, [r7, #8]!
 651              	.LVL79:
 652 0062 13B1     		cbz	r3, .L80
 653              	.LVL80:
 654              	.L75:
 358:Src/cli.c     **** 		dst = str;
 655              		.loc 1 358 0
 656 0064 3D68     		ldr	r5, [r7]
 657              	.LVL81:
 359:Src/cli.c     **** 		while((*src == '#') || (CLI_Charmatching(src,dst) != NULL))
 658              		.loc 1 359 0
 659 0066 4446     		mov	r4, r8
 360:Src/cli.c     **** 		{
 660              		.loc 1 360 0
 661 0068 E1E7     		b	.L68
 662              	.LVL82:
 663              	.L80:
 378:Src/cli.c     **** }
 664              		.loc 1 378 0
 665 006a 0027     		movs	r7, #0
 666              	.LVL83:
 667 006c D2E7     		b	.L67
 668              	.L82:
 669 006e 00BF     		.align	2
 670              	.L81:
 671 0070 00000000 		.word	clilist
 672              		.cfi_endproc
 673              	.LFE77:
 675              		.section	.text.cli_format_cmd,"ax",%progbits
 676              		.align	1
 677              		.syntax unified
 678              		.thumb
 679              		.thumb_func
 680              		.fpu softvfp
 682              	cli_format_cmd:
 683              	.LFB70:
  98:Src/cli.c     **** 	char *strend;
 684              		.loc 1 98 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              	.LVL84:
 689 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 690              	.LCFI6:
 691              		.cfi_def_cfa_offset 32
 692              		.cfi_offset 3, -32
 693              		.cfi_offset 4, -28
 694              		.cfi_offset 5, -24
 695              		.cfi_offset 6, -20
 696              		.cfi_offset 7, -16
 697              		.cfi_offset 8, -12
 698              		.cfi_offset 9, -8
 699              		.cfi_offset 14, -4
 700 0004 0446     		mov	r4, r0
 701 0006 0F46     		mov	r7, r1
 101:Src/cli.c     **** 	gCmdParamInfo.argv[0] = gCmdParamInfo.argvBuf;
ARM GAS  /tmp/cc1eEA2J.s 			page 22


 702              		.loc 1 101 0
 703 0008 374A     		ldr	r2, .L95
 704 000a 1346     		mov	r3, r2
 705 000c 0021     		movs	r1, #0
 706              	.LVL85:
 707 000e 43F8601B 		str	r1, [r3], #96
 102:Src/cli.c     **** 	do
 708              		.loc 1 102 0
 709 0012 1361     		str	r3, [r2, #16]
 710 0014 4DE0     		b	.L89
 711              	.LVL86:
 712              	.L93:
 108:Src/cli.c     **** 			{
 713              		.loc 1 108 0
 714 0016 0422     		movs	r2, #4
 715 0018 3449     		ldr	r1, .L95+4
 716 001a 2046     		mov	r0, r4
 717              	.LVL87:
 718 001c FFF7FEFF 		bl	strncmp
 719              	.LVL88:
 720 0020 18B9     		cbnz	r0, .L91
 116:Src/cli.c     **** 				parameter ++;
 721              		.loc 1 116 0
 722 0022 631C     		adds	r3, r4, #1
 723 0024 47F8043B 		str	r3, [r7], #4
 724              	.LVL89:
 725 0028 42E0     		b	.L86
 726              	.L91:
 110:Src/cli.c     **** 				*(gCmdParamInfo.argv[gCmdParamInfo.argc ++] + strlen(strtop)) = '\0';
 727              		.loc 1 110 0
 728 002a 2F4E     		ldr	r6, .L95
 729 002c 3368     		ldr	r3, [r6]
 730 002e 0433     		adds	r3, r3, #4
 731 0030 2146     		mov	r1, r4
 732 0032 56F82300 		ldr	r0, [r6, r3, lsl #2]
 733 0036 FFF7FEFF 		bl	strcpy
 734              	.LVL90:
 111:Src/cli.c     **** 				gCmdParamInfo.argv[gCmdParamInfo.argc] = gCmdParamInfo.argv[gCmdParamInfo.argc - 1] + strlen(st
 735              		.loc 1 111 0
 736 003a 3368     		ldr	r3, [r6]
 737 003c 5A1C     		adds	r2, r3, #1
 738 003e 3260     		str	r2, [r6]
 739 0040 0433     		adds	r3, r3, #4
 740 0042 56F82380 		ldr	r8, [r6, r3, lsl #2]
 741 0046 2046     		mov	r0, r4
 742 0048 FFF7FEFF 		bl	strlen
 743              	.LVL91:
 744 004c 0023     		movs	r3, #0
 745 004e 08F80030 		strb	r3, [r8, r0]
 112:Src/cli.c     **** 			}
 746              		.loc 1 112 0
 747 0052 D6F80080 		ldr	r8, [r6]
 748 0056 08F10303 		add	r3, r8, #3
 749 005a 56F82390 		ldr	r9, [r6, r3, lsl #2]
 750 005e 2046     		mov	r0, r4
 751 0060 FFF7FEFF 		bl	strlen
 752              	.LVL92:
ARM GAS  /tmp/cc1eEA2J.s 			page 23


 753 0064 0130     		adds	r0, r0, #1
 754 0066 4844     		add	r0, r0, r9
 755 0068 08F10408 		add	r8, r8, #4
 756 006c 46F82800 		str	r0, [r6, r8, lsl #2]
 757 0070 1EE0     		b	.L86
 758              	.L94:
 124:Src/cli.c     **** 				*(gCmdParamInfo.argv[gCmdParamInfo.argc ++] + (strend - strtop)) = '\0';
 759              		.loc 1 124 0
 760 0072 1D4E     		ldr	r6, .L95
 761 0074 3368     		ldr	r3, [r6]
 762 0076 A5EB0408 		sub	r8, r5, r4
 763 007a 0433     		adds	r3, r3, #4
 764 007c 4246     		mov	r2, r8
 765 007e 2146     		mov	r1, r4
 766 0080 56F82300 		ldr	r0, [r6, r3, lsl #2]
 767 0084 FFF7FEFF 		bl	strncpy
 768              	.LVL93:
 125:Src/cli.c     **** 				gCmdParamInfo.argv[gCmdParamInfo.argc] = gCmdParamInfo.argv[gCmdParamInfo.argc - 1] + (strend -
 769              		.loc 1 125 0
 770 0088 3368     		ldr	r3, [r6]
 771 008a 5A1C     		adds	r2, r3, #1
 772 008c 3260     		str	r2, [r6]
 773 008e 0433     		adds	r3, r3, #4
 774 0090 56F82330 		ldr	r3, [r6, r3, lsl #2]
 775 0094 0022     		movs	r2, #0
 776 0096 03F80820 		strb	r2, [r3, r8]
 126:Src/cli.c     **** 			}
 777              		.loc 1 126 0
 778 009a 3368     		ldr	r3, [r6]
 779 009c DA1C     		adds	r2, r3, #3
 780 009e 56F82210 		ldr	r1, [r6, r2, lsl #2]
 781 00a2 08F10102 		add	r2, r8, #1
 782 00a6 0A44     		add	r2, r2, r1
 783 00a8 0433     		adds	r3, r3, #4
 784 00aa 46F82320 		str	r2, [r6, r3, lsl #2]
 785              	.LVL94:
 786              	.L88:
 133:Src/cli.c     **** 		}
 787              		.loc 1 133 0
 788 00ae 6C1C     		adds	r4, r5, #1
 789              	.LVL95:
 790              	.L86:
 136:Src/cli.c     **** 	gCmdParamInfo.argv[gCmdParamInfo.argc][0] = '\0';
 791              		.loc 1 136 0
 792 00b0 8DB1     		cbz	r5, .L92
 793              	.LVL96:
 794              	.L89:
 105:Src/cli.c     **** 		if(strend == NULL)
 795              		.loc 1 105 0
 796 00b2 2021     		movs	r1, #32
 797 00b4 2046     		mov	r0, r4
 798 00b6 FFF7FEFF 		bl	strchr
 799              	.LVL97:
 106:Src/cli.c     **** 		{
 800              		.loc 1 106 0
 801 00ba 0546     		mov	r5, r0
 802 00bc 0028     		cmp	r0, #0
ARM GAS  /tmp/cc1eEA2J.s 			page 24


 803 00be AAD0     		beq	.L93
 122:Src/cli.c     **** 			{
 804              		.loc 1 122 0
 805 00c0 0422     		movs	r2, #4
 806 00c2 0A49     		ldr	r1, .L95+4
 807 00c4 2046     		mov	r0, r4
 808              	.LVL98:
 809 00c6 FFF7FEFF 		bl	strncmp
 810              	.LVL99:
 811 00ca 0028     		cmp	r0, #0
 812 00cc D1D1     		bne	.L94
 130:Src/cli.c     **** 				parameter ++;
 813              		.loc 1 130 0
 814 00ce 0134     		adds	r4, r4, #1
 815              	.LVL100:
 816 00d0 47F8044B 		str	r4, [r7], #4
 817              	.LVL101:
 818 00d4 EBE7     		b	.L88
 819              	.LVL102:
 820              	.L92:
 137:Src/cli.c     **** }
 821              		.loc 1 137 0
 822 00d6 044A     		ldr	r2, .L95
 823 00d8 1368     		ldr	r3, [r2]
 824 00da 0433     		adds	r3, r3, #4
 825 00dc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 826 00e0 0022     		movs	r2, #0
 827 00e2 1A70     		strb	r2, [r3]
 828 00e4 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 829              	.LVL103:
 830              	.L96:
 831              		.align	2
 832              	.L95:
 833 00e8 00000000 		.word	gCmdParamInfo
 834 00ec 00000000 		.word	.LC3
 835              		.cfi_endproc
 836              	.LFE70:
 838              		.section	.text.cli_ProcessCommand,"ax",%progbits
 839              		.align	1
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 843              		.fpu softvfp
 845              	cli_ProcessCommand:
 846              	.LFB78:
 382:Src/cli.c     **** 	HAL_StatusTypeDef ret = HAL_OK;
 847              		.loc 1 382 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 40
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              	.LVL104:
 852 0000 10B5     		push	{r4, lr}
 853              	.LCFI7:
 854              		.cfi_def_cfa_offset 8
 855              		.cfi_offset 4, -8
 856              		.cfi_offset 14, -4
 857 0002 8AB0     		sub	sp, sp, #40
ARM GAS  /tmp/cc1eEA2J.s 			page 25


 858              	.LCFI8:
 859              		.cfi_def_cfa_offset 48
 860 0004 0446     		mov	r4, r0
 861              	.LVL105:
 385:Src/cli.c     **** 	char **prt = parameter;
 862              		.loc 1 385 0
 863 0006 2822     		movs	r2, #40
 864 0008 0021     		movs	r1, #0
 865 000a 6846     		mov	r0, sp
 866              	.LVL106:
 867 000c FFF7FEFF 		bl	memset
 868              	.LVL107:
 388:Src/cli.c     **** 	cli_format_cmd(str,prt);	 //ï¿½Ö¸ï¿½ï¿½Ö·ï¿½ï¿½ï¿½  -allï¿½ï¿½ï¿½ï¿½Óµï¿½char** argv
 869              		.loc 1 388 0
 870 0010 2046     		mov	r0, r4
 871 0012 FFF7FEFF 		bl	cli_write_history_cmd
 872              	.LVL108:
 389:Src/cli.c     **** 
 873              		.loc 1 389 0
 874 0016 6946     		mov	r1, sp
 875 0018 2046     		mov	r0, r4
 876 001a FFF7FEFF 		bl	cli_format_cmd
 877              	.LVL109:
 391:Src/cli.c     **** 	if(command != NULL)
 878              		.loc 1 391 0
 879 001e 2046     		mov	r0, r4
 880 0020 FFF7FEFF 		bl	CLICommandSeek
 881              	.LVL110:
 392:Src/cli.c     **** 	{
 882              		.loc 1 392 0
 883 0024 70B1     		cbz	r0, .L98
 394:Src/cli.c     **** 		if(HAL_OK != ret)
 884              		.loc 1 394 0
 885 0026 4368     		ldr	r3, [r0, #4]
 886 0028 0849     		ldr	r1, .L102
 887 002a 51F8100B 		ldr	r0, [r1], #16
 888              	.LVL111:
 889 002e 9847     		blx	r3
 890              	.LVL112:
 395:Src/cli.c     **** 		{
 891              		.loc 1 395 0
 892 0030 20B1     		cbz	r0, .L99
 397:Src/cli.c     **** 		}
 893              		.loc 1 397 0
 894 0032 0748     		ldr	r0, .L102+4
 895              	.LVL113:
 896 0034 FFF7FEFF 		bl	vOutputString
 897              	.LVL114:
 898              	.L97:
 408:Src/cli.c     **** static HAL_StatusTypeDef prvDispHelpConfig()  //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½î´¦ï¿½ï¿½ï¿½ï¿½
 899              		.loc 1 408 0
 900 0038 0AB0     		add	sp, sp, #40
 901              	.LCFI9:
 902              		.cfi_remember_state
 903              		.cfi_def_cfa_offset 8
 904              	.LVL115:
 905              		@ sp needed
ARM GAS  /tmp/cc1eEA2J.s 			page 26


 906 003a 10BD     		pop	{r4, pc}
 907              	.LVL116:
 908              	.L99:
 909              	.LCFI10:
 910              		.cfi_restore_state
 401:Src/cli.c     **** 		}
 911              		.loc 1 401 0
 912 003c 0548     		ldr	r0, .L102+8
 913              	.LVL117:
 914 003e FFF7FEFF 		bl	vOutputString
 915              	.LVL118:
 916 0042 F9E7     		b	.L97
 917              	.LVL119:
 918              	.L98:
 406:Src/cli.c     **** 	}
 919              		.loc 1 406 0
 920 0044 0448     		ldr	r0, .L102+12
 921              	.LVL120:
 922 0046 FFF7FEFF 		bl	vOutputString
 923              	.LVL121:
 408:Src/cli.c     **** static HAL_StatusTypeDef prvDispHelpConfig()  //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½î´¦ï¿½ï¿½ï¿½ï¿½
 924              		.loc 1 408 0
 925 004a F5E7     		b	.L97
 926              	.L103:
 927              		.align	2
 928              	.L102:
 929 004c 00000000 		.word	gCmdParamInfo
 930 0050 00000000 		.word	.LC4
 931 0054 1C000000 		.word	.LC5
 932 0058 34000000 		.word	.LC6
 933              		.cfi_endproc
 934              	.LFE78:
 936              		.section	.text.vOutputChar,"ax",%progbits
 937              		.align	1
 938              		.syntax unified
 939              		.thumb
 940              		.thumb_func
 941              		.fpu softvfp
 943              	vOutputChar:
 944              	.LFB65:
  40:Src/cli.c     **** 	printf("%c",ch);
 945              		.loc 1 40 0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949              	.LVL122:
 950 0000 08B5     		push	{r3, lr}
 951              	.LCFI11:
 952              		.cfi_def_cfa_offset 8
 953              		.cfi_offset 3, -8
 954              		.cfi_offset 14, -4
  41:Src/cli.c     **** }
 955              		.loc 1 41 0
 956 0002 FFF7FEFF 		bl	putchar
 957              	.LVL123:
 958 0006 08BD     		pop	{r3, pc}
 959              		.cfi_endproc
ARM GAS  /tmp/cc1eEA2J.s 			page 27


 960              	.LFE65:
 962              		.section	.text.cli_backspace,"ax",%progbits
 963              		.align	1
 964              		.syntax unified
 965              		.thumb
 966              		.thumb_func
 967              		.fpu softvfp
 969              	cli_backspace:
 970              	.LFB74:
 218:Src/cli.c     **** 	char str[CMD_MAX_LENG];
 971              		.loc 1 218 0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 256
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 222:Src/cli.c     **** 	{
 975              		.loc 1 222 0
 976 0000 254B     		ldr	r3, .L116
 977 0002 9A68     		ldr	r2, [r3, #8]
 978 0004 03F5B073 		add	r3, r3, #352
 979 0008 9A42     		cmp	r2, r3
 980 000a 43D0     		beq	.L113
 218:Src/cli.c     **** 	char str[CMD_MAX_LENG];
 981              		.loc 1 218 0
 982 000c 30B5     		push	{r4, r5, lr}
 983              	.LCFI12:
 984              		.cfi_def_cfa_offset 12
 985              		.cfi_offset 4, -12
 986              		.cfi_offset 5, -8
 987              		.cfi_offset 14, -4
 988 000e C1B0     		sub	sp, sp, #260
 989              	.LCFI13:
 990              		.cfi_def_cfa_offset 272
 991 0010 17E0     		b	.L111
 992              	.L115:
 228:Src/cli.c     **** 				gCmdParamInfo.cmdBufCursor ++;
 993              		.loc 1 228 0
 994 0012 2248     		ldr	r0, .L116+4
 995 0014 FFF7FEFF 		bl	vOutputString
 996              	.LVL124:
 229:Src/cli.c     **** 			}
 997              		.loc 1 229 0
 998 0018 1F4A     		ldr	r2, .L116
 999 001a 9368     		ldr	r3, [r2, #8]
 1000 001c 0133     		adds	r3, r3, #1
 1001 001e 9360     		str	r3, [r2, #8]
 1002 0020 15E0     		b	.L108
 1003              	.LVL125:
 1004              	.L110:
 242:Src/cli.c     **** 			}
 1005              		.loc 1 242 0 discriminator 3
 1006 0022 0820     		movs	r0, #8
 1007 0024 FFF7FEFF 		bl	vOutputChar
 1008              	.LVL126:
 240:Src/cli.c     **** 			{
 1009              		.loc 1 240 0 discriminator 3
 1010 0028 013C     		subs	r4, r4, #1
 1011              	.LVL127:
ARM GAS  /tmp/cc1eEA2J.s 			page 28


 1012 002a A4B2     		uxth	r4, r4
 1013              	.LVL128:
 1014              	.L109:
 240:Src/cli.c     **** 			{
 1015              		.loc 1 240 0 is_stmt 0 discriminator 1
 1016 002c 002C     		cmp	r4, #0
 1017 002e F8D1     		bne	.L110
 245:Src/cli.c     **** 	}
 1018              		.loc 1 245 0 is_stmt 1
 1019 0030 194B     		ldr	r3, .L116
 1020 0032 9A68     		ldr	r2, [r3, #8]
 1021 0034 03F5B073 		add	r3, r3, #352
 1022 0038 9A42     		cmp	r2, r3
 1023 003a 29D1     		bne	.L106
 245:Src/cli.c     **** 	}
 1024              		.loc 1 245 0 is_stmt 0 discriminator 1
 1025 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1026 003e 202B     		cmp	r3, #32
 1027 0040 26D1     		bne	.L106
 1028              	.LVL129:
 1029              	.L111:
 226:Src/cli.c     **** 			{
 1030              		.loc 1 226 0 is_stmt 1
 1031 0042 154B     		ldr	r3, .L116
 1032 0044 9A68     		ldr	r2, [r3, #8]
 1033 0046 03F5B073 		add	r3, r3, #352
 1034 004a 9A42     		cmp	r2, r3
 1035 004c E1D0     		beq	.L115
 1036              	.L108:
 231:Src/cli.c     **** 			gCmdParamInfo.cmdBufCursor --;
 1037              		.loc 1 231 0
 1038 004e 124D     		ldr	r5, .L116
 1039 0050 AC68     		ldr	r4, [r5, #8]
 1040 0052 2146     		mov	r1, r4
 1041 0054 6846     		mov	r0, sp
 1042 0056 FFF7FEFF 		bl	strcpy
 1043              	.LVL130:
 232:Src/cli.c     **** 			gCmdParamInfo.cmdBufTail --;
 1044              		.loc 1 232 0
 1045 005a 013C     		subs	r4, r4, #1
 1046 005c AC60     		str	r4, [r5, #8]
 233:Src/cli.c     **** 			memcpy((gCmdParamInfo.cmdBufCursor),str,strlen(str)+1);
 1047              		.loc 1 233 0
 1048 005e 6B68     		ldr	r3, [r5, #4]
 1049 0060 013B     		subs	r3, r3, #1
 1050 0062 6B60     		str	r3, [r5, #4]
 234:Src/cli.c     **** 
 1051              		.loc 1 234 0
 1052 0064 6846     		mov	r0, sp
 1053 0066 FFF7FEFF 		bl	strlen
 1054              	.LVL131:
 1055 006a 421C     		adds	r2, r0, #1
 1056 006c 6946     		mov	r1, sp
 1057 006e 2046     		mov	r0, r4
 1058 0070 FFF7FEFF 		bl	memcpy
 1059              	.LVL132:
 236:Src/cli.c     **** 			vOutputString(str);
ARM GAS  /tmp/cc1eEA2J.s 			page 29


 1060              		.loc 1 236 0
 1061 0074 0A48     		ldr	r0, .L116+8
 1062 0076 FFF7FEFF 		bl	vOutputString
 1063              	.LVL133:
 237:Src/cli.c     **** 			vOutputString(" \b");
 1064              		.loc 1 237 0
 1065 007a 6846     		mov	r0, sp
 1066 007c FFF7FEFF 		bl	vOutputString
 1067              	.LVL134:
 238:Src/cli.c     **** 
 1068              		.loc 1 238 0
 1069 0080 0848     		ldr	r0, .L116+12
 1070 0082 FFF7FEFF 		bl	vOutputString
 1071              	.LVL135:
 240:Src/cli.c     **** 			{
 1072              		.loc 1 240 0
 1073 0086 6846     		mov	r0, sp
 1074 0088 FFF7FEFF 		bl	strlen
 1075              	.LVL136:
 1076 008c 84B2     		uxth	r4, r0
 1077              	.LVL137:
 1078 008e CDE7     		b	.L109
 1079              	.L106:
 247:Src/cli.c     **** 
 1080              		.loc 1 247 0
 1081 0090 41B0     		add	sp, sp, #260
 1082              	.LCFI14:
 1083              		.cfi_def_cfa_offset 12
 1084              		@ sp needed
 1085 0092 30BD     		pop	{r4, r5, pc}
 1086              	.LVL138:
 1087              	.L113:
 1088              	.LCFI15:
 1089              		.cfi_def_cfa_offset 0
 1090              		.cfi_restore 4
 1091              		.cfi_restore 5
 1092              		.cfi_restore 14
 1093 0094 7047     		bx	lr
 1094              	.L117:
 1095 0096 00BF     		.align	2
 1096              	.L116:
 1097 0098 00000000 		.word	gCmdParamInfo
 1098 009c 00000000 		.word	.LC7
 1099 00a0 04000000 		.word	.LC8
 1100 00a4 08000000 		.word	.LC9
 1101              		.cfi_endproc
 1102              	.LFE74:
 1104              		.section	.text.cli_read_history_cmd,"ax",%progbits
 1105              		.align	1
 1106              		.syntax unified
 1107              		.thumb
 1108              		.thumb_func
 1109              		.fpu softvfp
 1111              	cli_read_history_cmd:
 1112              	.LFB72:
 159:Src/cli.c     **** 	int i;
 1113              		.loc 1 159 0
ARM GAS  /tmp/cc1eEA2J.s 			page 30


 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 0
 1116              		@ frame_needed = 0, uses_anonymous_args = 0
 1117              	.LVL139:
 1118 0000 38B5     		push	{r3, r4, r5, lr}
 1119              	.LCFI16:
 1120              		.cfi_def_cfa_offset 16
 1121              		.cfi_offset 3, -16
 1122              		.cfi_offset 4, -12
 1123              		.cfi_offset 5, -8
 1124              		.cfi_offset 14, -4
 1125              	.LVL140:
 164:Src/cli.c     **** 	{
 1126              		.loc 1 164 0
 1127 0002 03E0     		b	.L119
 1128              	.L121:
 166:Src/cli.c     **** 	}
 1129              		.loc 1 166 0
 1130 0004 013B     		subs	r3, r3, #1
 1131 0006 284A     		ldr	r2, .L128
 1132 0008 82F86037 		strb	r3, [r2, #1888]
 1133              	.L119:
 164:Src/cli.c     **** 	{
 1134              		.loc 1 164 0
 1135 000c 264A     		ldr	r2, .L128
 1136 000e 92F86037 		ldrb	r3, [r2, #1888]	@ zero_extendqisi2
 1137 0012 1946     		mov	r1, r3
 1138 0014 02EB0322 		add	r2, r2, r3, lsl #8
 1139 0018 92F86022 		ldrb	r2, [r2, #608]	@ zero_extendqisi2
 1140 001c 0AB9     		cbnz	r2, .L120
 164:Src/cli.c     **** 	{
 1141              		.loc 1 164 0 is_stmt 0 discriminator 1
 1142 001e 002B     		cmp	r3, #0
 1143 0020 F0D1     		bne	.L121
 1144              	.L120:
 169:Src/cli.c     **** 	{
 1145              		.loc 1 169 0 is_stmt 1
 1146 0022 214B     		ldr	r3, .L128
 1147 0024 03EB0121 		add	r1, r3, r1, lsl #8
 1148 0028 91F86032 		ldrb	r3, [r1, #608]	@ zero_extendqisi2
 1149 002c 002B     		cmp	r3, #0
 1150 002e 39D0     		beq	.L118
 171:Src/cli.c     **** 		{
 1151              		.loc 1 171 0
 1152 0030 1D4B     		ldr	r3, .L128
 1153 0032 9868     		ldr	r0, [r3, #8]
 1154 0034 FFF7FEFF 		bl	strlen
 1155              	.LVL141:
 1156 0038 0446     		mov	r4, r0
 1157              	.LVL142:
 1158 003a 03E0     		b	.L123
 1159              	.LVL143:
 1160              	.L124:
 173:Src/cli.c     **** 		}
 1161              		.loc 1 173 0 discriminator 3
 1162 003c 2020     		movs	r0, #32
 1163 003e FFF7FEFF 		bl	vOutputChar
ARM GAS  /tmp/cc1eEA2J.s 			page 31


 1164              	.LVL144:
 171:Src/cli.c     **** 		{
 1165              		.loc 1 171 0 discriminator 3
 1166 0042 013C     		subs	r4, r4, #1
 1167              	.LVL145:
 1168              	.L123:
 171:Src/cli.c     **** 		{
 1169              		.loc 1 171 0 is_stmt 0 discriminator 1
 1170 0044 002C     		cmp	r4, #0
 1171 0046 F9DC     		bgt	.L124
 176:Src/cli.c     **** 		{
 1172              		.loc 1 176 0 is_stmt 1
 1173 0048 1848     		ldr	r0, .L128+4
 1174 004a FFF7FEFF 		bl	strlen
 1175              	.LVL146:
 1176 004e 0446     		mov	r4, r0
 1177              	.LVL147:
 1178 0050 03E0     		b	.L125
 1179              	.LVL148:
 1180              	.L126:
 178:Src/cli.c     **** 		}
 1181              		.loc 1 178 0 discriminator 3
 1182 0052 1748     		ldr	r0, .L128+8
 1183 0054 FFF7FEFF 		bl	vOutputString
 1184              	.LVL149:
 176:Src/cli.c     **** 		{
 1185              		.loc 1 176 0 discriminator 3
 1186 0058 013C     		subs	r4, r4, #1
 1187              	.LVL150:
 1188              	.L125:
 176:Src/cli.c     **** 		{
 1189              		.loc 1 176 0 is_stmt 0 discriminator 1
 1190 005a 002C     		cmp	r4, #0
 1191 005c F9DC     		bgt	.L126
 181:Src/cli.c     **** 		gCmdParamInfo.cmdBufCursor = gCmdParamInfo.cmdBuf + strlen(&gCmdParamInfo.historyCmd.cmdBuf[gCmdP
 1192              		.loc 1 181 0 is_stmt 1
 1193 005e 124C     		ldr	r4, .L128
 1194              	.LVL151:
 1195 0060 94F86017 		ldrb	r1, [r4, #1888]	@ zero_extendqisi2
 1196 0064 0902     		lsls	r1, r1, #8
 1197 0066 01F51871 		add	r1, r1, #608
 1198 006a 04F5B075 		add	r5, r4, #352
 1199 006e 2144     		add	r1, r1, r4
 1200 0070 2846     		mov	r0, r5
 1201 0072 FFF7FEFF 		bl	strcpy
 1202              	.LVL152:
 182:Src/cli.c     **** 		gCmdParamInfo.cmdBufTail   = gCmdParamInfo.cmdBufCursor;
 1203              		.loc 1 182 0
 1204 0076 94F86007 		ldrb	r0, [r4, #1888]	@ zero_extendqisi2
 1205 007a 0002     		lsls	r0, r0, #8
 1206 007c 00F51870 		add	r0, r0, #608
 1207 0080 2044     		add	r0, r0, r4
 1208 0082 FFF7FEFF 		bl	strlen
 1209              	.LVL153:
 1210 0086 2844     		add	r0, r0, r5
 1211 0088 A060     		str	r0, [r4, #8]
 183:Src/cli.c     **** 		vOutputString(gCmdParamInfo.cmdBuf);
ARM GAS  /tmp/cc1eEA2J.s 			page 32


 1212              		.loc 1 183 0
 1213 008a 6060     		str	r0, [r4, #4]
 184:Src/cli.c     **** 
 1214              		.loc 1 184 0
 1215 008c 2846     		mov	r0, r5
 1216 008e FFF7FEFF 		bl	vOutputString
 1217              	.LVL154:
 186:Src/cli.c     **** 		{
 1218              		.loc 1 186 0
 1219 0092 94F86037 		ldrb	r3, [r4, #1888]	@ zero_extendqisi2
 1220 0096 5A1E     		subs	r2, r3, #1
 1221 0098 84F86027 		strb	r2, [r4, #1888]
 1222 009c 13B9     		cbnz	r3, .L118
 188:Src/cli.c     **** 		}
 1223              		.loc 1 188 0
 1224 009e 0422     		movs	r2, #4
 1225 00a0 84F86027 		strb	r2, [r4, #1888]
 1226              	.L118:
 1227 00a4 38BD     		pop	{r3, r4, r5, pc}
 1228              	.L129:
 1229 00a6 00BF     		.align	2
 1230              	.L128:
 1231 00a8 00000000 		.word	gCmdParamInfo
 1232 00ac 60010000 		.word	gCmdParamInfo+352
 1233 00b0 04000000 		.word	.LC8
 1234              		.cfi_endproc
 1235              	.LFE72:
 1237              		.section	.text.cli_direction,"ax",%progbits
 1238              		.align	1
 1239              		.syntax unified
 1240              		.thumb
 1241              		.thumb_func
 1242              		.fpu softvfp
 1244              	cli_direction:
 1245              	.LFB75:
 250:Src/cli.c     **** 	switch(ReadChar)
 1246              		.loc 1 250 0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 0
 1249              		@ frame_needed = 0, uses_anonymous_args = 0
 1250              	.LVL155:
 1251 0000 08B5     		push	{r3, lr}
 1252              	.LCFI17:
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 3, -8
 1255              		.cfi_offset 14, -4
 251:Src/cli.c     **** 	{
 1256              		.loc 1 251 0
 1257 0002 4138     		subs	r0, r0, #65
 1258              	.LVL156:
 1259 0004 0328     		cmp	r0, #3
 1260 0006 30D8     		bhi	.L130
 1261 0008 DFE800F0 		tbb	[pc, r0]
 1262              	.L133:
 1263 000c 02       		.byte	(.L132-.L133)/2
 1264 000d 06       		.byte	(.L134-.L133)/2
 1265 000e 0A       		.byte	(.L135-.L133)/2
ARM GAS  /tmp/cc1eEA2J.s 			page 33


 1266 000f 1C       		.byte	(.L136-.L133)/2
 1267              		.p2align 1
 1268              	.L132:
 255:Src/cli.c     **** 			break;
 1269              		.loc 1 255 0
 1270 0010 0020     		movs	r0, #0
 1271 0012 FFF7FEFF 		bl	cli_read_history_cmd
 1272              	.LVL157:
 256:Src/cli.c     **** 		}
 1273              		.loc 1 256 0
 1274 0016 08BD     		pop	{r3, pc}
 1275              	.L134:
 260:Src/cli.c     **** 			break;
 1276              		.loc 1 260 0
 1277 0018 0120     		movs	r0, #1
 1278 001a FFF7FEFF 		bl	cli_read_history_cmd
 1279              	.LVL158:
 261:Src/cli.c     **** 		}
 1280              		.loc 1 261 0
 1281 001e 08BD     		pop	{r3, pc}
 1282              	.L135:
 265:Src/cli.c     **** 			{
 1283              		.loc 1 265 0
 1284 0020 124B     		ldr	r3, .L138
 1285 0022 9B68     		ldr	r3, [r3, #8]
 1286 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1287 0026 03B3     		cbz	r3, .L130
 267:Src/cli.c     **** 				vOutputChar(0x5b);
 1288              		.loc 1 267 0
 1289 0028 1B20     		movs	r0, #27
 1290 002a FFF7FEFF 		bl	vOutputChar
 1291              	.LVL159:
 268:Src/cli.c     **** 				vOutputChar('C');
 1292              		.loc 1 268 0
 1293 002e 5B20     		movs	r0, #91
 1294 0030 FFF7FEFF 		bl	vOutputChar
 1295              	.LVL160:
 269:Src/cli.c     **** 				gCmdParamInfo.cmdBufCursor++;
 1296              		.loc 1 269 0
 1297 0034 4320     		movs	r0, #67
 1298 0036 FFF7FEFF 		bl	vOutputChar
 1299              	.LVL161:
 270:Src/cli.c     **** 			}
 1300              		.loc 1 270 0
 1301 003a 0C4A     		ldr	r2, .L138
 1302 003c 9368     		ldr	r3, [r2, #8]
 1303 003e 0133     		adds	r3, r3, #1
 1304 0040 9360     		str	r3, [r2, #8]
 1305 0042 08BD     		pop	{r3, pc}
 1306              	.L136:
 276:Src/cli.c     **** 			{
 1307              		.loc 1 276 0
 1308 0044 094B     		ldr	r3, .L138
 1309 0046 9A68     		ldr	r2, [r3, #8]
 1310 0048 03F5B073 		add	r3, r3, #352
 1311 004c 9A42     		cmp	r2, r3
 1312 004e 0CD0     		beq	.L130
ARM GAS  /tmp/cc1eEA2J.s 			page 34


 278:Src/cli.c     **** 				vOutputChar(0x5b);
 1313              		.loc 1 278 0
 1314 0050 1B20     		movs	r0, #27
 1315 0052 FFF7FEFF 		bl	vOutputChar
 1316              	.LVL162:
 279:Src/cli.c     **** 				vOutputChar('D');
 1317              		.loc 1 279 0
 1318 0056 5B20     		movs	r0, #91
 1319 0058 FFF7FEFF 		bl	vOutputChar
 1320              	.LVL163:
 280:Src/cli.c     **** 				gCmdParamInfo.cmdBufCursor--;
 1321              		.loc 1 280 0
 1322 005c 4420     		movs	r0, #68
 1323 005e FFF7FEFF 		bl	vOutputChar
 1324              	.LVL164:
 281:Src/cli.c     **** 			}
 1325              		.loc 1 281 0
 1326 0062 024A     		ldr	r2, .L138
 1327 0064 9368     		ldr	r3, [r2, #8]
 1328 0066 013B     		subs	r3, r3, #1
 1329 0068 9360     		str	r3, [r2, #8]
 1330              	.L130:
 1331 006a 08BD     		pop	{r3, pc}
 1332              	.L139:
 1333              		.align	2
 1334              	.L138:
 1335 006c 00000000 		.word	gCmdParamInfo
 1336              		.cfi_endproc
 1337              	.LFE75:
 1339              		.section	.text.cli_cInput,"ax",%progbits
 1340              		.align	1
 1341              		.syntax unified
 1342              		.thumb
 1343              		.thumb_func
 1344              		.fpu softvfp
 1346              	cli_cInput:
 1347              	.LFB73:
 193:Src/cli.c     **** 	if(ReadChar == ' ' && (*gCmdParamInfo.cmdBufCursor == ' '|| \
 1348              		.loc 1 193 0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 256
 1351              		@ frame_needed = 0, uses_anonymous_args = 0
 1352              	.LVL165:
 194:Src/cli.c     **** 							(gCmdParamInfo.cmdBufCursor == gCmdParamInfo.cmdBuf) || \
 1353              		.loc 1 194 0
 1354 0000 2028     		cmp	r0, #32
 1355 0002 1ED0     		beq	.L148
 1356              	.L141:
 193:Src/cli.c     **** 	if(ReadChar == ' ' && (*gCmdParamInfo.cmdBufCursor == ' '|| \
 1357              		.loc 1 193 0
 1358 0004 70B5     		push	{r4, r5, r6, lr}
 1359              	.LCFI18:
 1360              		.cfi_def_cfa_offset 16
 1361              		.cfi_offset 4, -16
 1362              		.cfi_offset 5, -12
 1363              		.cfi_offset 6, -8
 1364              		.cfi_offset 14, -4
ARM GAS  /tmp/cc1eEA2J.s 			page 35


 1365 0006 C0B0     		sub	sp, sp, #256
 1366              	.LCFI19:
 1367              		.cfi_def_cfa_offset 272
 1368 0008 0446     		mov	r4, r0
 1369              	.LBB2:
 204:Src/cli.c     **** 		memcpy((gCmdParamInfo.cmdBufCursor + 1),str,strlen(str) + 1);
 1370              		.loc 1 204 0
 1371 000a 1C4E     		ldr	r6, .L149
 1372 000c B568     		ldr	r5, [r6, #8]
 1373 000e 2946     		mov	r1, r5
 1374 0010 6846     		mov	r0, sp
 1375              	.LVL166:
 1376 0012 FFF7FEFF 		bl	strcpy
 1377              	.LVL167:
 205:Src/cli.c     **** 		*gCmdParamInfo.cmdBufCursor = ReadChar;
 1378              		.loc 1 205 0
 1379 0016 0135     		adds	r5, r5, #1
 1380 0018 6846     		mov	r0, sp
 1381 001a FFF7FEFF 		bl	strlen
 1382              	.LVL168:
 1383 001e 421C     		adds	r2, r0, #1
 1384 0020 6946     		mov	r1, sp
 1385 0022 2846     		mov	r0, r5
 1386 0024 FFF7FEFF 		bl	memcpy
 1387              	.LVL169:
 206:Src/cli.c     **** 		vOutputChar(ReadChar);
 1388              		.loc 1 206 0
 1389 0028 B368     		ldr	r3, [r6, #8]
 1390 002a 1C70     		strb	r4, [r3]
 207:Src/cli.c     **** 		vOutputString(str);
 1391              		.loc 1 207 0
 1392 002c 2046     		mov	r0, r4
 1393 002e FFF7FEFF 		bl	vOutputChar
 1394              	.LVL170:
 208:Src/cli.c     **** 		for(i = strlen(str) ; i > 0 ; i-- )
 1395              		.loc 1 208 0
 1396 0032 6846     		mov	r0, sp
 1397 0034 FFF7FEFF 		bl	vOutputString
 1398              	.LVL171:
 209:Src/cli.c     **** 		{
 1399              		.loc 1 209 0
 1400 0038 6846     		mov	r0, sp
 1401 003a FFF7FEFF 		bl	strlen
 1402              	.LVL172:
 1403 003e 84B2     		uxth	r4, r0
 1404              	.LVL173:
 1405 0040 11E0     		b	.L143
 1406              	.LVL174:
 1407              	.L148:
 1408              	.LCFI20:
 1409              		.cfi_def_cfa_offset 0
 1410              		.cfi_restore 4
 1411              		.cfi_restore 5
 1412              		.cfi_restore 6
 1413              		.cfi_restore 14
 1414              	.LBE2:
 194:Src/cli.c     **** 							(gCmdParamInfo.cmdBufCursor == gCmdParamInfo.cmdBuf) || \
ARM GAS  /tmp/cc1eEA2J.s 			page 36


 1415              		.loc 1 194 0 discriminator 1
 1416 0042 0E4B     		ldr	r3, .L149
 1417 0044 9B68     		ldr	r3, [r3, #8]
 1418 0046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1419 0048 202A     		cmp	r2, #32
 1420 004a 06D0     		beq	.L146
 194:Src/cli.c     **** 							(gCmdParamInfo.cmdBufCursor == gCmdParamInfo.cmdBuf) || \
 1421              		.loc 1 194 0 is_stmt 0 discriminator 2
 1422 004c 0C4A     		ldr	r2, .L149+4
 1423 004e 9342     		cmp	r3, r2
 1424 0050 03D0     		beq	.L146
 196:Src/cli.c     **** 	{
 1425              		.loc 1 196 0 is_stmt 1
 1426 0052 13F8013C 		ldrb	r3, [r3, #-1]	@ zero_extendqisi2
 195:Src/cli.c     **** 							(*(gCmdParamInfo.cmdBufCursor - 1) == ' ')))
 1427              		.loc 1 195 0
 1428 0056 202B     		cmp	r3, #32
 1429 0058 D4D1     		bne	.L141
 1430              	.L146:
 1431 005a 7047     		bx	lr
 1432              	.LVL175:
 1433              	.L144:
 1434              	.LCFI21:
 1435              		.cfi_def_cfa_offset 272
 1436              		.cfi_offset 4, -16
 1437              		.cfi_offset 5, -12
 1438              		.cfi_offset 6, -8
 1439              		.cfi_offset 14, -4
 1440              	.LBB3:
 211:Src/cli.c     **** 		}
 1441              		.loc 1 211 0 discriminator 3
 1442 005c 0820     		movs	r0, #8
 1443 005e FFF7FEFF 		bl	vOutputChar
 1444              	.LVL176:
 209:Src/cli.c     **** 		{
 1445              		.loc 1 209 0 discriminator 3
 1446 0062 013C     		subs	r4, r4, #1
 1447              	.LVL177:
 1448 0064 A4B2     		uxth	r4, r4
 1449              	.LVL178:
 1450              	.L143:
 209:Src/cli.c     **** 		{
 1451              		.loc 1 209 0 is_stmt 0 discriminator 1
 1452 0066 002C     		cmp	r4, #0
 1453 0068 F8D1     		bne	.L144
 213:Src/cli.c     **** 		gCmdParamInfo.cmdBufTail ++;
 1454              		.loc 1 213 0 is_stmt 1 discriminator 2
 1455 006a 044B     		ldr	r3, .L149
 1456 006c 9A68     		ldr	r2, [r3, #8]
 1457 006e 0132     		adds	r2, r2, #1
 1458 0070 9A60     		str	r2, [r3, #8]
 214:Src/cli.c     **** 	}
 1459              		.loc 1 214 0 discriminator 2
 1460 0072 5A68     		ldr	r2, [r3, #4]
 1461 0074 0132     		adds	r2, r2, #1
 1462 0076 5A60     		str	r2, [r3, #4]
 1463              	.LBE3:
ARM GAS  /tmp/cc1eEA2J.s 			page 37


 216:Src/cli.c     **** static void cli_backspace(void)
 1464              		.loc 1 216 0 discriminator 2
 1465 0078 40B0     		add	sp, sp, #256
 1466              	.LCFI22:
 1467              		.cfi_def_cfa_offset 16
 1468              		@ sp needed
 1469 007a 70BD     		pop	{r4, r5, r6, pc}
 1470              	.LVL179:
 1471              	.L150:
 1472              		.align	2
 1473              	.L149:
 1474 007c 00000000 		.word	gCmdParamInfo
 1475 0080 60010000 		.word	gCmdParamInfo+352
 1476              		.cfi_endproc
 1477              	.LFE73:
 1479              		.section	.text.CLIParameterAdd,"ax",%progbits
 1480              		.align	1
 1481              		.global	CLIParameterAdd
 1482              		.syntax unified
 1483              		.thumb
 1484              		.thumb_func
 1485              		.fpu softvfp
 1487              	CLIParameterAdd:
 1488              	.LFB81:
 419:Src/cli.c     **** void CLI_info_init(void)	//CLIï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 420:Src/cli.c     **** {
 421:Src/cli.c     **** 	gUsbParamInfo.read_ptr = gUsbParamInfo.cHandleBuf;
 422:Src/cli.c     **** 	gUsbParamInfo.write_ptr= gUsbParamInfo.cHandleBuf;
 423:Src/cli.c     **** 	memset(&gCmdParamInfo,'\0',sizeof(gCmdParamInfo));
 424:Src/cli.c     **** 	memset(&clilist,'\0',sizeof(clilist));
 425:Src/cli.c     **** 	gCmdParamInfo.outMessage = "\r\nbitohw :";
 426:Src/cli.c     **** 	cli_deinit();
 427:Src/cli.c     **** 	CLICommandAdd("help",prvDispHelpConfig);  //ï¿½ï¿½Ó°ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 428:Src/cli.c     **** }
 429:Src/cli.c     **** 
 430:Src/cli.c     **** void CLIParameterAdd(char *str,Handle p)  //×¢ï¿½ï¿½É±ï¿½ï¿½Ö·ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 431:Src/cli.c     **** {
 1489              		.loc 1 431 0
 1490              		.cfi_startproc
 1491              		@ args = 0, pretend = 0, frame = 0
 1492              		@ frame_needed = 0, uses_anonymous_args = 0
 1493              		@ link register save eliminated.
 1494              	.LVL180:
 1495 0000 30B4     		push	{r4, r5}
 1496              	.LCFI23:
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 4, -8
 1499              		.cfi_offset 5, -4
 432:Src/cli.c     **** 	static uint16_t num = 0;
 433:Src/cli.c     **** 	clilist.parameter[num].str = str;
 1500              		.loc 1 433 0
 1501 0002 074C     		ldr	r4, .L153
 1502 0004 2388     		ldrh	r3, [r4]
 1503 0006 074A     		ldr	r2, .L153+4
 1504 0008 03F16405 		add	r5, r3, #100
 1505 000c 42F83500 		str	r0, [r2, r5, lsl #3]
 434:Src/cli.c     **** 	clilist.parameter[num].p   = p;
ARM GAS  /tmp/cc1eEA2J.s 			page 38


 1506              		.loc 1 434 0
 1507 0010 02EBC502 		add	r2, r2, r5, lsl #3
 1508 0014 5160     		str	r1, [r2, #4]
 435:Src/cli.c     **** 	num ++;
 1509              		.loc 1 435 0
 1510 0016 0133     		adds	r3, r3, #1
 1511 0018 2380     		strh	r3, [r4]	@ movhi
 436:Src/cli.c     **** }
 1512              		.loc 1 436 0
 1513 001a 30BC     		pop	{r4, r5}
 1514              	.LCFI24:
 1515              		.cfi_restore 5
 1516              		.cfi_restore 4
 1517              		.cfi_def_cfa_offset 0
 1518 001c 7047     		bx	lr
 1519              	.L154:
 1520 001e 00BF     		.align	2
 1521              	.L153:
 1522 0020 00000000 		.word	.LANCHOR1
 1523 0024 00000000 		.word	clilist
 1524              		.cfi_endproc
 1525              	.LFE81:
 1527              		.section	.text.CLICommandAdd,"ax",%progbits
 1528              		.align	1
 1529              		.global	CLICommandAdd
 1530              		.syntax unified
 1531              		.thumb
 1532              		.thumb_func
 1533              		.fpu softvfp
 1535              	CLICommandAdd:
 1536              	.LFB82:
 437:Src/cli.c     **** 
 438:Src/cli.c     **** uint16_t  *CLICommandAdd(char *str,Handle p)   //×¢ï¿½ï¿½ï¿½ï¿½ï¿½î´¦ï¿½ï¿½ï¿½ï¿½
 439:Src/cli.c     **** {
 1537              		.loc 1 439 0
 1538              		.cfi_startproc
 1539              		@ args = 0, pretend = 0, frame = 0
 1540              		@ frame_needed = 0, uses_anonymous_args = 0
 1541              		@ link register save eliminated.
 1542              	.LVL181:
 1543 0000 10B4     		push	{r4}
 1544              	.LCFI25:
 1545              		.cfi_def_cfa_offset 4
 1546              		.cfi_offset 4, -4
 440:Src/cli.c     **** 	static uint16_t num = 0;
 441:Src/cli.c     **** 	clilist.command[num].str = str;
 1547              		.loc 1 441 0
 1548 0002 064C     		ldr	r4, .L157
 1549 0004 2388     		ldrh	r3, [r4]
 1550 0006 064A     		ldr	r2, .L157+4
 1551 0008 42F83300 		str	r0, [r2, r3, lsl #3]
 442:Src/cli.c     **** 	clilist.command[num].p	 = p;
 1552              		.loc 1 442 0
 1553 000c 02EBC302 		add	r2, r2, r3, lsl #3
 1554 0010 5160     		str	r1, [r2, #4]
 443:Src/cli.c     **** 	num ++;
 1555              		.loc 1 443 0
ARM GAS  /tmp/cc1eEA2J.s 			page 39


 1556 0012 0133     		adds	r3, r3, #1
 1557 0014 2380     		strh	r3, [r4]	@ movhi
 444:Src/cli.c     **** 	return &num;
 445:Src/cli.c     **** }
 1558              		.loc 1 445 0
 1559 0016 2046     		mov	r0, r4
 1560              	.LVL182:
 1561 0018 10BC     		pop	{r4}
 1562              	.LCFI26:
 1563              		.cfi_restore 4
 1564              		.cfi_def_cfa_offset 0
 1565 001a 7047     		bx	lr
 1566              	.L158:
 1567              		.align	2
 1568              	.L157:
 1569 001c 00000000 		.word	.LANCHOR2
 1570 0020 00000000 		.word	clilist
 1571              		.cfi_endproc
 1572              	.LFE82:
 1574              		.section	.text.CLI_info_init,"ax",%progbits
 1575              		.align	1
 1576              		.global	CLI_info_init
 1577              		.syntax unified
 1578              		.thumb
 1579              		.thumb_func
 1580              		.fpu softvfp
 1582              	CLI_info_init:
 1583              	.LFB80:
 420:Src/cli.c     **** 	gUsbParamInfo.read_ptr = gUsbParamInfo.cHandleBuf;
 1584              		.loc 1 420 0
 1585              		.cfi_startproc
 1586              		@ args = 0, pretend = 0, frame = 0
 1587              		@ frame_needed = 0, uses_anonymous_args = 0
 1588 0000 10B5     		push	{r4, lr}
 1589              	.LCFI27:
 1590              		.cfi_def_cfa_offset 8
 1591              		.cfi_offset 4, -8
 1592              		.cfi_offset 14, -4
 421:Src/cli.c     **** 	gUsbParamInfo.write_ptr= gUsbParamInfo.cHandleBuf;
 1593              		.loc 1 421 0
 1594 0002 0C4B     		ldr	r3, .L161
 1595 0004 5B66     		str	r3, [r3, #100]
 422:Src/cli.c     **** 	memset(&gCmdParamInfo,'\0',sizeof(gCmdParamInfo));
 1596              		.loc 1 422 0
 1597 0006 9B66     		str	r3, [r3, #104]
 423:Src/cli.c     **** 	memset(&clilist,'\0',sizeof(clilist));
 1598              		.loc 1 423 0
 1599 0008 0B4C     		ldr	r4, .L161+4
 1600 000a 40F26472 		movw	r2, #1892
 1601 000e 0021     		movs	r1, #0
 1602 0010 2046     		mov	r0, r4
 1603 0012 FFF7FEFF 		bl	memset
 1604              	.LVL183:
 424:Src/cli.c     **** 	gCmdParamInfo.outMessage = "\r\nbitohw :";
 1605              		.loc 1 424 0
 1606 0016 4FF4C862 		mov	r2, #1600
 1607 001a 0021     		movs	r1, #0
ARM GAS  /tmp/cc1eEA2J.s 			page 40


 1608 001c 0748     		ldr	r0, .L161+8
 1609 001e FFF7FEFF 		bl	memset
 1610              	.LVL184:
 425:Src/cli.c     **** 	cli_deinit();
 1611              		.loc 1 425 0
 1612 0022 074B     		ldr	r3, .L161+12
 1613 0024 E360     		str	r3, [r4, #12]
 426:Src/cli.c     **** 	CLICommandAdd("help",prvDispHelpConfig);  //ï¿½ï¿½Ó°ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 1614              		.loc 1 426 0
 1615 0026 FFF7FEFF 		bl	cli_deinit
 1616              	.LVL185:
 427:Src/cli.c     **** }
 1617              		.loc 1 427 0
 1618 002a 0649     		ldr	r1, .L161+16
 1619 002c 0648     		ldr	r0, .L161+20
 1620 002e FFF7FEFF 		bl	CLICommandAdd
 1621              	.LVL186:
 1622 0032 10BD     		pop	{r4, pc}
 1623              	.L162:
 1624              		.align	2
 1625              	.L161:
 1626 0034 00000000 		.word	gUsbParamInfo
 1627 0038 00000000 		.word	gCmdParamInfo
 1628 003c 00000000 		.word	clilist
 1629 0040 00000000 		.word	.LC10
 1630 0044 00000000 		.word	prvDispHelpConfig
 1631 0048 0C000000 		.word	.LC11
 1632              		.cfi_endproc
 1633              	.LFE80:
 1635              		.section	.text.read_cInput,"ax",%progbits
 1636              		.align	1
 1637              		.global	read_cInput
 1638              		.syntax unified
 1639              		.thumb
 1640              		.thumb_func
 1641              		.fpu softvfp
 1643              	read_cInput:
 1644              	.LFB84:
 446:Src/cli.c     **** 
 447:Src/cli.c     **** void CLI_event_handle() //CLIï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 448:Src/cli.c     **** {
 449:Src/cli.c     **** 	char ReadChar;
 450:Src/cli.c     **** 
 451:Src/cli.c     **** 	while((ReadChar = vGetchar(0)) != 0)
 452:Src/cli.c     **** 	{
 453:Src/cli.c     **** 		if(ReadChar == '\n' || ReadChar == '\r')
 454:Src/cli.c     **** 		{
 455:Src/cli.c     **** 			label = false;
 456:Src/cli.c     **** 			if((gCmdParamInfo.cmdBuf == gCmdParamInfo.cmdBufTail)||(gCmdParamInfo.cmdBuf[0] == ' ') )
 457:Src/cli.c     **** 			{
 458:Src/cli.c     **** 				vOutputString(gCmdParamInfo.outMessage);
 459:Src/cli.c     **** 			}
 460:Src/cli.c     **** 			else
 461:Src/cli.c     **** 			{
 462:Src/cli.c     **** 				if(*(-- gCmdParamInfo.cmdBufTail) == ' ')
 463:Src/cli.c     **** 				{
 464:Src/cli.c     **** 					*gCmdParamInfo.cmdBufTail = '\0';
ARM GAS  /tmp/cc1eEA2J.s 			page 41


 465:Src/cli.c     **** 				}
 466:Src/cli.c     **** 				cli_ProcessCommand(gCmdParamInfo.cmdBuf);  //ï¿½ï¿½ï¿½ï¿½Ô¤ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö·ï¿½ï¿½ï
 467:Src/cli.c     **** 				cli_deinit(); 								//ï¿½ï¿½ï¿½ï¿½ï¿½Õ¶ï¿½
 468:Src/cli.c     **** 				vOutputString(gCmdParamInfo.outMessage);
 469:Src/cli.c     **** 			}
 470:Src/cli.c     **** 		}
 471:Src/cli.c     **** 		else
 472:Src/cli.c     **** 		{
 473:Src/cli.c     **** 			if((ReadChar >= '\b') && (ReadChar < ' '))
 474:Src/cli.c     **** 			{
 475:Src/cli.c     **** 				label = false;
 476:Src/cli.c     **** 				if(ReadChar == '\b')
 477:Src/cli.c     **** 				{
 478:Src/cli.c     **** 					cli_backspace();		//ï¿½ï¿½ï¿½ï¿½ï¿½Ë¸ï¿½ï¿½
 479:Src/cli.c     **** 				}
 480:Src/cli.c     **** 				else if(ReadChar == 0x1b && vGetchar(0xffff) == 0x5b)
 481:Src/cli.c     **** 				{
 482:Src/cli.c     **** 					cli_direction(vGetchar(0xffff));  //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 483:Src/cli.c     **** 				}
 484:Src/cli.c     **** 			}
 485:Src/cli.c     **** 			else if((ReadChar >= ' ') && (ReadChar <= '~' ))
 486:Src/cli.c     **** 			{
 487:Src/cli.c     **** 				if(ReadChar == '#' || label == true)
 488:Src/cli.c     **** 				{
 489:Src/cli.c     **** 					label = true;
 490:Src/cli.c     **** 				}
 491:Src/cli.c     **** 				else if((gCmdParamInfo.cmdBufTail - gCmdParamInfo.cmdBuf) < (CMD_MAX_LENG - 1))
 492:Src/cli.c     **** 				{
 493:Src/cli.c     **** 					cli_cInput(ReadChar); //ï¿½ï¿½ï¿½ï¿½Ö·ï¿½ï¿½ï¿½ï¿½ï¿½Ô¤ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 494:Src/cli.c     **** 				}
 495:Src/cli.c     **** 			}
 496:Src/cli.c     **** 		}
 497:Src/cli.c     **** 	}
 498:Src/cli.c     **** }
 499:Src/cli.c     **** 
 500:Src/cli.c     **** char read_cInput(uint16_t time) //ï¿½ï¿½ï¿½Ð¶Ï»ï¿½ï¿½ï¿½ï¿½ï¿½
 501:Src/cli.c     **** {
 1645              		.loc 1 501 0
 1646              		.cfi_startproc
 1647              		@ args = 0, pretend = 0, frame = 0
 1648              		@ frame_needed = 0, uses_anonymous_args = 0
 1649              		@ link register save eliminated.
 1650              	.LVL187:
 1651 0000 00E0     		b	.L166
 1652              	.LVL188:
 1653              	.L167:
 502:Src/cli.c     **** 	char ReadChar;
 503:Src/cli.c     **** 	do
 504:Src/cli.c     **** 	{
 505:Src/cli.c     **** 		if(	gUsbParamInfo.read_ptr != gUsbParamInfo.write_ptr)
 506:Src/cli.c     **** 		{
 507:Src/cli.c     **** 			ReadChar = *gUsbParamInfo.read_ptr;
 508:Src/cli.c     **** 			if(++ gUsbParamInfo.read_ptr == (gUsbParamInfo.cHandleBuf + UART_BUFF_LEN))
 509:Src/cli.c     **** 			{
 510:Src/cli.c     **** 				gUsbParamInfo.read_ptr = gUsbParamInfo.cHandleBuf;
 511:Src/cli.c     **** 			}
 512:Src/cli.c     **** 			return ReadChar;
ARM GAS  /tmp/cc1eEA2J.s 			page 42


 513:Src/cli.c     **** 		}
 514:Src/cli.c     **** 	}while(time-- != 0);
 1654              		.loc 1 514 0
 1655 0002 1846     		mov	r0, r3
 1656              	.LVL189:
 1657              	.L166:
 505:Src/cli.c     **** 		{
 1658              		.loc 1 505 0
 1659 0004 094B     		ldr	r3, .L169
 1660 0006 5A6E     		ldr	r2, [r3, #100]
 1661 0008 9B6E     		ldr	r3, [r3, #104]
 1662 000a 9A42     		cmp	r2, r3
 1663 000c 04D1     		bne	.L168
 1664              		.loc 1 514 0
 1665 000e 431E     		subs	r3, r0, #1
 1666 0010 9BB2     		uxth	r3, r3
 1667              	.LVL190:
 1668 0012 0028     		cmp	r0, #0
 1669 0014 F5D1     		bne	.L167
 1670              	.LVL191:
 1671              	.L165:
 515:Src/cli.c     **** 
 516:Src/cli.c     **** 	return 0;
 517:Src/cli.c     **** }
 1672              		.loc 1 517 0
 1673 0016 7047     		bx	lr
 1674              	.LVL192:
 1675              	.L168:
 507:Src/cli.c     **** 			if(++ gUsbParamInfo.read_ptr == (gUsbParamInfo.cHandleBuf + UART_BUFF_LEN))
 1676              		.loc 1 507 0
 1677 0018 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 1678              	.LVL193:
 508:Src/cli.c     **** 			{
 1679              		.loc 1 508 0
 1680 001c 034B     		ldr	r3, .L169
 1681 001e 43F8642F 		str	r2, [r3, #100]!
 1682 0022 9A42     		cmp	r2, r3
 1683 0024 F7D1     		bne	.L165
 510:Src/cli.c     **** 			}
 1684              		.loc 1 510 0
 1685 0026 014B     		ldr	r3, .L169
 1686 0028 5B66     		str	r3, [r3, #100]
 1687 002a 7047     		bx	lr
 1688              	.L170:
 1689              		.align	2
 1690              	.L169:
 1691 002c 00000000 		.word	gUsbParamInfo
 1692              		.cfi_endproc
 1693              	.LFE84:
 1695              		.section	.text.vGetchar,"ax",%progbits
 1696              		.align	1
 1697              		.global	vGetchar
 1698              		.syntax unified
 1699              		.thumb
 1700              		.thumb_func
 1701              		.fpu softvfp
 1703              	vGetchar:
ARM GAS  /tmp/cc1eEA2J.s 			page 43


 1704              	.LFB66:
  44:Src/cli.c     **** 		return read_cInput(time);
 1705              		.loc 1 44 0
 1706              		.cfi_startproc
 1707              		@ args = 0, pretend = 0, frame = 0
 1708              		@ frame_needed = 0, uses_anonymous_args = 0
 1709              	.LVL194:
 1710 0000 08B5     		push	{r3, lr}
 1711              	.LCFI28:
 1712              		.cfi_def_cfa_offset 8
 1713              		.cfi_offset 3, -8
 1714              		.cfi_offset 14, -4
  45:Src/cli.c     **** }
 1715              		.loc 1 45 0
 1716 0002 FFF7FEFF 		bl	read_cInput
 1717              	.LVL195:
  46:Src/cli.c     **** void prvUARTCommandConsoleTask(void const *pvParameters)
 1718              		.loc 1 46 0
 1719 0006 08BD     		pop	{r3, pc}
 1720              		.cfi_endproc
 1721              	.LFE66:
 1723              		.section	.text.CLI_event_handle,"ax",%progbits
 1724              		.align	1
 1725              		.global	CLI_event_handle
 1726              		.syntax unified
 1727              		.thumb
 1728              		.thumb_func
 1729              		.fpu softvfp
 1731              	CLI_event_handle:
 1732              	.LFB83:
 448:Src/cli.c     **** 	char ReadChar;
 1733              		.loc 1 448 0
 1734              		.cfi_startproc
 1735              		@ args = 0, pretend = 0, frame = 0
 1736              		@ frame_needed = 0, uses_anonymous_args = 0
 1737 0000 10B5     		push	{r4, lr}
 1738              	.LCFI29:
 1739              		.cfi_def_cfa_offset 8
 1740              		.cfi_offset 4, -8
 1741              		.cfi_offset 14, -4
 451:Src/cli.c     **** 	{
 1742              		.loc 1 451 0
 1743 0002 20E0     		b	.L174
 1744              	.LVL196:
 1745              	.L175:
 455:Src/cli.c     **** 			if((gCmdParamInfo.cmdBuf == gCmdParamInfo.cmdBufTail)||(gCmdParamInfo.cmdBuf[0] == ' ') )
 1746              		.loc 1 455 0
 1747 0004 0022     		movs	r2, #0
 1748 0006 354B     		ldr	r3, .L190
 1749 0008 1A70     		strb	r2, [r3]
 456:Src/cli.c     **** 			{
 1750              		.loc 1 456 0
 1751 000a 354B     		ldr	r3, .L190+4
 1752 000c 5A68     		ldr	r2, [r3, #4]
 1753 000e 03F5B073 		add	r3, r3, #352
 1754 0012 9A42     		cmp	r2, r3
 1755 0014 3AD0     		beq	.L177
ARM GAS  /tmp/cc1eEA2J.s 			page 44


 456:Src/cli.c     **** 			{
 1756              		.loc 1 456 0 is_stmt 0 discriminator 1
 1757 0016 A3F5B073 		sub	r3, r3, #352
 1758 001a 93F86031 		ldrb	r3, [r3, #352]	@ zero_extendqisi2
 1759 001e 202B     		cmp	r3, #32
 1760 0020 34D0     		beq	.L177
 462:Src/cli.c     **** 				{
 1761              		.loc 1 462 0 is_stmt 1
 1762 0022 531E     		subs	r3, r2, #1
 1763 0024 2E49     		ldr	r1, .L190+4
 1764 0026 4B60     		str	r3, [r1, #4]
 1765 0028 12F8013C 		ldrb	r3, [r2, #-1]	@ zero_extendqisi2
 1766 002c 202B     		cmp	r3, #32
 1767 002e 32D0     		beq	.L187
 1768              	.L180:
 466:Src/cli.c     **** 				cli_deinit(); 								//ï¿½ï¿½ï¿½ï¿½ï¿½Õ¶ï¿½
 1769              		.loc 1 466 0
 1770 0030 2C4C     		ldr	r4, .L190+8
 1771 0032 2046     		mov	r0, r4
 1772              	.LVL197:
 1773 0034 FFF7FEFF 		bl	cli_ProcessCommand
 1774              	.LVL198:
 467:Src/cli.c     **** 				vOutputString(gCmdParamInfo.outMessage);
 1775              		.loc 1 467 0
 1776 0038 FFF7FEFF 		bl	cli_deinit
 1777              	.LVL199:
 468:Src/cli.c     **** 			}
 1778              		.loc 1 468 0
 1779 003c A4F5B074 		sub	r4, r4, #352
 1780 0040 E068     		ldr	r0, [r4, #12]
 1781 0042 FFF7FEFF 		bl	vOutputString
 1782              	.LVL200:
 1783              	.L174:
 451:Src/cli.c     **** 	{
 1784              		.loc 1 451 0
 1785 0046 0020     		movs	r0, #0
 1786 0048 FFF7FEFF 		bl	vGetchar
 1787              	.LVL201:
 1788 004c 0346     		mov	r3, r0
 1789 004e 0028     		cmp	r0, #0
 1790 0050 42D0     		beq	.L188
 453:Src/cli.c     **** 		{
 1791              		.loc 1 453 0
 1792 0052 0A2B     		cmp	r3, #10
 1793 0054 D6D0     		beq	.L175
 453:Src/cli.c     **** 		{
 1794              		.loc 1 453 0 is_stmt 0 discriminator 1
 1795 0056 0D2B     		cmp	r3, #13
 1796 0058 D4D0     		beq	.L175
 473:Src/cli.c     **** 			{
 1797              		.loc 1 473 0 is_stmt 1
 1798 005a A3F10802 		sub	r2, r3, #8
 1799 005e D2B2     		uxtb	r2, r2
 1800 0060 172A     		cmp	r2, #23
 1801 0062 1FD8     		bhi	.L181
 475:Src/cli.c     **** 				if(ReadChar == '\b')
 1802              		.loc 1 475 0
ARM GAS  /tmp/cc1eEA2J.s 			page 45


 1803 0064 0021     		movs	r1, #0
 1804 0066 1D4A     		ldr	r2, .L190
 1805 0068 1170     		strb	r1, [r2]
 476:Src/cli.c     **** 				{
 1806              		.loc 1 476 0
 1807 006a 082B     		cmp	r3, #8
 1808 006c 17D0     		beq	.L189
 480:Src/cli.c     **** 				{
 1809              		.loc 1 480 0
 1810 006e 1B2B     		cmp	r3, #27
 1811 0070 E9D1     		bne	.L174
 480:Src/cli.c     **** 				{
 1812              		.loc 1 480 0 is_stmt 0 discriminator 1
 1813 0072 4FF6FF70 		movw	r0, #65535
 1814              	.LVL202:
 1815 0076 FFF7FEFF 		bl	vGetchar
 1816              	.LVL203:
 1817 007a 5B28     		cmp	r0, #91
 1818 007c E3D1     		bne	.L174
 482:Src/cli.c     **** 				}
 1819              		.loc 1 482 0 is_stmt 1
 1820 007e 4FF6FF70 		movw	r0, #65535
 1821 0082 FFF7FEFF 		bl	vGetchar
 1822              	.LVL204:
 1823 0086 FFF7FEFF 		bl	cli_direction
 1824              	.LVL205:
 1825 008a DCE7     		b	.L174
 1826              	.LVL206:
 1827              	.L177:
 458:Src/cli.c     **** 			}
 1828              		.loc 1 458 0
 1829 008c 144B     		ldr	r3, .L190+4
 1830 008e D868     		ldr	r0, [r3, #12]
 1831              	.LVL207:
 1832 0090 FFF7FEFF 		bl	vOutputString
 1833              	.LVL208:
 1834 0094 D7E7     		b	.L174
 1835              	.LVL209:
 1836              	.L187:
 464:Src/cli.c     **** 				}
 1837              		.loc 1 464 0
 1838 0096 0023     		movs	r3, #0
 1839 0098 02F8013C 		strb	r3, [r2, #-1]
 1840 009c C8E7     		b	.L180
 1841              	.L189:
 478:Src/cli.c     **** 				}
 1842              		.loc 1 478 0
 1843 009e FFF7FEFF 		bl	cli_backspace
 1844              	.LVL210:
 1845 00a2 D0E7     		b	.L174
 1846              	.LVL211:
 1847              	.L181:
 485:Src/cli.c     **** 			{
 1848              		.loc 1 485 0
 1849 00a4 A3F12002 		sub	r2, r3, #32
 1850 00a8 D2B2     		uxtb	r2, r2
 1851 00aa 5E2A     		cmp	r2, #94
ARM GAS  /tmp/cc1eEA2J.s 			page 46


 1852 00ac CBD8     		bhi	.L174
 487:Src/cli.c     **** 				{
 1853              		.loc 1 487 0
 1854 00ae 232B     		cmp	r3, #35
 1855 00b0 0ED0     		beq	.L183
 487:Src/cli.c     **** 				{
 1856              		.loc 1 487 0 is_stmt 0 discriminator 1
 1857 00b2 0A4A     		ldr	r2, .L190
 1858 00b4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1859 00b6 012A     		cmp	r2, #1
 1860 00b8 0AD0     		beq	.L183
 491:Src/cli.c     **** 				{
 1861              		.loc 1 491 0 is_stmt 1
 1862 00ba 094A     		ldr	r2, .L190+4
 1863 00bc 5168     		ldr	r1, [r2, #4]
 1864 00be 02F5B072 		add	r2, r2, #352
 1865 00c2 8A1A     		subs	r2, r1, r2
 1866 00c4 FE2A     		cmp	r2, #254
 1867 00c6 BEDC     		bgt	.L174
 493:Src/cli.c     **** 				}
 1868              		.loc 1 493 0
 1869 00c8 1846     		mov	r0, r3
 1870              	.LVL212:
 1871 00ca FFF7FEFF 		bl	cli_cInput
 1872              	.LVL213:
 1873 00ce BAE7     		b	.L174
 1874              	.LVL214:
 1875              	.L183:
 489:Src/cli.c     **** 				}
 1876              		.loc 1 489 0
 1877 00d0 0122     		movs	r2, #1
 1878 00d2 024B     		ldr	r3, .L190
 1879 00d4 1A70     		strb	r2, [r3]
 1880 00d6 B6E7     		b	.L174
 1881              	.L188:
 498:Src/cli.c     **** 
 1882              		.loc 1 498 0
 1883 00d8 10BD     		pop	{r4, pc}
 1884              	.L191:
 1885 00da 00BF     		.align	2
 1886              	.L190:
 1887 00dc 00000000 		.word	.LANCHOR3
 1888 00e0 00000000 		.word	gCmdParamInfo
 1889 00e4 60010000 		.word	gCmdParamInfo+352
 1890              		.cfi_endproc
 1891              	.LFE83:
 1893              		.section	.text.prvUARTCommandConsoleTask,"ax",%progbits
 1894              		.align	1
 1895              		.global	prvUARTCommandConsoleTask
 1896              		.syntax unified
 1897              		.thumb
 1898              		.thumb_func
 1899              		.fpu softvfp
 1901              	prvUARTCommandConsoleTask:
 1902              	.LFB67:
  48:Src/cli.c     **** 	CLI_info_init();  //CLI ï¿½ï¿½Ê¼ï¿½ï¿½
 1903              		.loc 1 48 0
ARM GAS  /tmp/cc1eEA2J.s 			page 47


 1904              		.cfi_startproc
 1905              		@ Volatile: function does not return.
 1906              		@ args = 0, pretend = 0, frame = 0
 1907              		@ frame_needed = 0, uses_anonymous_args = 0
 1908              	.LVL215:
 1909 0000 08B5     		push	{r3, lr}
 1910              	.LCFI30:
 1911              		.cfi_def_cfa_offset 8
 1912              		.cfi_offset 3, -8
 1913              		.cfi_offset 14, -4
  49:Src/cli.c     **** 	while(1)
 1914              		.loc 1 49 0
 1915 0002 FFF7FEFF 		bl	CLI_info_init
 1916              	.LVL216:
 1917              	.L193:
  52:Src/cli.c     **** //		vTaskDelay(30);
 1918              		.loc 1 52 0 discriminator 1
 1919 0006 FFF7FEFF 		bl	CLI_event_handle
 1920              	.LVL217:
 1921 000a FCE7     		b	.L193
 1922              		.cfi_endproc
 1923              	.LFE67:
 1925              		.section	.text.write_cInput,"ax",%progbits
 1926              		.align	1
 1927              		.global	write_cInput
 1928              		.syntax unified
 1929              		.thumb
 1930              		.thumb_func
 1931              		.fpu softvfp
 1933              	write_cInput:
 1934              	.LFB85:
 518:Src/cli.c     **** void  write_cInput(char* Buf, uint32_t Len)  //Ð´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 519:Src/cli.c     **** {
 1935              		.loc 1 519 0
 1936              		.cfi_startproc
 1937              		@ args = 0, pretend = 0, frame = 0
 1938              		@ frame_needed = 0, uses_anonymous_args = 0
 1939              	.LVL218:
 1940 0000 70B5     		push	{r4, r5, r6, lr}
 1941              	.LCFI31:
 1942              		.cfi_def_cfa_offset 16
 1943              		.cfi_offset 4, -16
 1944              		.cfi_offset 5, -12
 1945              		.cfi_offset 6, -8
 1946              		.cfi_offset 14, -4
 1947 0002 0546     		mov	r5, r0
 1948 0004 0C46     		mov	r4, r1
 1949 0006 1EE0     		b	.L200
 1950              	.LVL219:
 1951              	.L204:
 520:Src/cli.c     **** 	do
 521:Src/cli.c     **** 	  {
 522:Src/cli.c     **** 		  if(gUsbParamInfo.write_ptr >= gUsbParamInfo.read_ptr)
 523:Src/cli.c     **** 		  {
 524:Src/cli.c     **** 			  if(gUsbParamInfo.write_ptr + Len <= (gUsbParamInfo.cHandleBuf + UART_BUFF_LEN))
 525:Src/cli.c     **** 			  {
 526:Src/cli.c     **** 				  strncpy(gUsbParamInfo.write_ptr,Buf,(uint16_t)Len);
ARM GAS  /tmp/cc1eEA2J.s 			page 48


 1952              		.loc 1 526 0
 1953 0008 A2B2     		uxth	r2, r4
 1954 000a 2946     		mov	r1, r5
 1955 000c FFF7FEFF 		bl	strncpy
 1956              	.LVL220:
 527:Src/cli.c     **** 				  gUsbParamInfo.write_ptr = gUsbParamInfo.write_ptr + Len;
 1957              		.loc 1 527 0
 1958 0010 214B     		ldr	r3, .L205
 1959 0012 9A6E     		ldr	r2, [r3, #104]
 1960 0014 2244     		add	r2, r2, r4
 1961 0016 9A66     		str	r2, [r3, #104]
 528:Src/cli.c     **** 				  Buf = Buf + Len;
 1962              		.loc 1 528 0
 1963 0018 2544     		add	r5, r5, r4
 1964              	.LVL221:
 529:Src/cli.c     **** 				  Len = 0;
 530:Src/cli.c     **** 				  if(gUsbParamInfo.write_ptr == (gUsbParamInfo.cHandleBuf + UART_BUFF_LEN))
 1965              		.loc 1 530 0
 1966 001a 6433     		adds	r3, r3, #100
 1967 001c 9A42     		cmp	r2, r3
 1968 001e 37D1     		bne	.L201
 531:Src/cli.c     **** 				  {
 532:Src/cli.c     **** 					  gUsbParamInfo.write_ptr = gUsbParamInfo.cHandleBuf;
 1969              		.loc 1 532 0
 1970 0020 643B     		subs	r3, r3, #100
 1971 0022 9B66     		str	r3, [r3, #104]
 529:Src/cli.c     **** 				  Len = 0;
 1972              		.loc 1 529 0
 1973 0024 0024     		movs	r4, #0
 1974 0026 0DE0     		b	.L198
 1975              	.LVL222:
 1976              	.L196:
 533:Src/cli.c     **** 				  }
 534:Src/cli.c     **** 			  }
 535:Src/cli.c     **** 			  else
 536:Src/cli.c     **** 			  {
 537:Src/cli.c     **** 
 538:Src/cli.c     **** 				  strncpy(gUsbParamInfo.write_ptr,Buf,(uint16_t)((gUsbParamInfo.cHandleBuf + UART_BUFF_LEN) - g
 539:Src/cli.c     **** 				  Buf = Buf + (gUsbParamInfo.cHandleBuf + UART_BUFF_LEN - gUsbParamInfo.write_ptr);
 540:Src/cli.c     **** 				  Len = Len - (gUsbParamInfo.cHandleBuf + UART_BUFF_LEN - gUsbParamInfo.write_ptr );
 541:Src/cli.c     **** 				  gUsbParamInfo.write_ptr = gUsbParamInfo.cHandleBuf;
 542:Src/cli.c     **** 			  }
 543:Src/cli.c     **** 		  }
 544:Src/cli.c     **** 		  else
 545:Src/cli.c     **** 		  {
 546:Src/cli.c     **** 			  if(((gUsbParamInfo.read_ptr - 1) - gUsbParamInfo.write_ptr) >= Len)
 1977              		.loc 1 546 0
 1978 0028 013A     		subs	r2, r2, #1
 1979 002a 121A     		subs	r2, r2, r0
 1980 002c 9442     		cmp	r4, r2
 1981 002e 22D8     		bhi	.L199
 547:Src/cli.c     **** 			  {
 548:Src/cli.c     **** 				  strncpy(gUsbParamInfo.write_ptr,Buf,(uint16_t)Len);
 1982              		.loc 1 548 0
 1983 0030 A2B2     		uxth	r2, r4
 1984 0032 2946     		mov	r1, r5
 1985 0034 FFF7FEFF 		bl	strncpy
ARM GAS  /tmp/cc1eEA2J.s 			page 49


 1986              	.LVL223:
 549:Src/cli.c     **** 				  Buf = Buf + Len;
 1987              		.loc 1 549 0
 1988 0038 2544     		add	r5, r5, r4
 1989              	.LVL224:
 550:Src/cli.c     **** 				  gUsbParamInfo.write_ptr = gUsbParamInfo.write_ptr + Len;
 1990              		.loc 1 550 0
 1991 003a 174A     		ldr	r2, .L205
 1992 003c 936E     		ldr	r3, [r2, #104]
 1993 003e 1C44     		add	r4, r4, r3
 1994              	.LVL225:
 1995 0040 9466     		str	r4, [r2, #104]
 1996              	.LVL226:
 551:Src/cli.c     **** 				  Len = 0;
 1997              		.loc 1 551 0
 1998 0042 0024     		movs	r4, #0
 1999              	.LVL227:
 2000              	.L198:
 552:Src/cli.c     **** 			  }
 553:Src/cli.c     **** 			  else
 554:Src/cli.c     **** 			  {
 555:Src/cli.c     **** 				  strncpy(gUsbParamInfo.write_ptr,Buf,(uint16_t)((gUsbParamInfo.read_ptr - 1) - gUsbParamInfo.w
 556:Src/cli.c     **** 				  Buf = Buf + ((gUsbParamInfo.read_ptr - 1) - gUsbParamInfo.write_ptr);
 557:Src/cli.c     **** 				  Len = 0;
 558:Src/cli.c     **** 				  gUsbParamInfo.write_ptr = gUsbParamInfo.read_ptr - 1;
 559:Src/cli.c     **** 			  }
 560:Src/cli.c     **** 		  }
 561:Src/cli.c     **** 	  }while(Len != 0);
 2001              		.loc 1 561 0
 2002 0044 34B3     		cbz	r4, .L203
 2003              	.L200:
 522:Src/cli.c     **** 		  {
 2004              		.loc 1 522 0
 2005 0046 144B     		ldr	r3, .L205
 2006 0048 986E     		ldr	r0, [r3, #104]
 2007 004a 5A6E     		ldr	r2, [r3, #100]
 2008 004c 9042     		cmp	r0, r2
 2009 004e EBD3     		bcc	.L196
 524:Src/cli.c     **** 			  {
 2010              		.loc 1 524 0
 2011 0050 0219     		adds	r2, r0, r4
 2012 0052 6433     		adds	r3, r3, #100
 2013 0054 9A42     		cmp	r2, r3
 2014 0056 D7D9     		bls	.L204
 538:Src/cli.c     **** 				  Buf = Buf + (gUsbParamInfo.cHandleBuf + UART_BUFF_LEN - gUsbParamInfo.write_ptr);
 2015              		.loc 1 538 0
 2016 0058 104E     		ldr	r6, .L205+4
 2017 005a 321A     		subs	r2, r6, r0
 2018 005c 92B2     		uxth	r2, r2
 2019 005e 2946     		mov	r1, r5
 2020 0060 FFF7FEFF 		bl	strncpy
 2021              	.LVL228:
 539:Src/cli.c     **** 				  Len = Len - (gUsbParamInfo.cHandleBuf + UART_BUFF_LEN - gUsbParamInfo.write_ptr );
 2022              		.loc 1 539 0
 2023 0064 A6F16402 		sub	r2, r6, #100
 2024 0068 7368     		ldr	r3, [r6, #4]
 2025 006a F11A     		subs	r1, r6, r3
ARM GAS  /tmp/cc1eEA2J.s 			page 50


 2026 006c 0D44     		add	r5, r5, r1
 2027              	.LVL229:
 540:Src/cli.c     **** 				  gUsbParamInfo.write_ptr = gUsbParamInfo.cHandleBuf;
 2028              		.loc 1 540 0
 2029 006e 1C44     		add	r4, r4, r3
 2030              	.LVL230:
 2031 0070 A41B     		subs	r4, r4, r6
 2032              	.LVL231:
 541:Src/cli.c     **** 			  }
 2033              		.loc 1 541 0
 2034 0072 9266     		str	r2, [r2, #104]
 2035 0074 E6E7     		b	.L198
 2036              	.L199:
 555:Src/cli.c     **** 				  Buf = Buf + ((gUsbParamInfo.read_ptr - 1) - gUsbParamInfo.write_ptr);
 2037              		.loc 1 555 0
 2038 0076 92B2     		uxth	r2, r2
 2039 0078 2946     		mov	r1, r5
 2040 007a FFF7FEFF 		bl	strncpy
 2041              	.LVL232:
 556:Src/cli.c     **** 				  Len = 0;
 2042              		.loc 1 556 0
 2043 007e 064A     		ldr	r2, .L205
 2044 0080 536E     		ldr	r3, [r2, #100]
 2045 0082 013B     		subs	r3, r3, #1
 2046 0084 916E     		ldr	r1, [r2, #104]
 2047 0086 591A     		subs	r1, r3, r1
 2048 0088 0D44     		add	r5, r5, r1
 2049              	.LVL233:
 558:Src/cli.c     **** 			  }
 2050              		.loc 1 558 0
 2051 008a 9366     		str	r3, [r2, #104]
 557:Src/cli.c     **** 				  gUsbParamInfo.write_ptr = gUsbParamInfo.read_ptr - 1;
 2052              		.loc 1 557 0
 2053 008c 0024     		movs	r4, #0
 2054 008e D9E7     		b	.L198
 2055              	.L201:
 529:Src/cli.c     **** 				  if(gUsbParamInfo.write_ptr == (gUsbParamInfo.cHandleBuf + UART_BUFF_LEN))
 2056              		.loc 1 529 0
 2057 0090 0024     		movs	r4, #0
 2058 0092 D7E7     		b	.L198
 2059              	.LVL234:
 2060              	.L203:
 562:Src/cli.c     **** }
 2061              		.loc 1 562 0
 2062 0094 70BD     		pop	{r4, r5, r6, pc}
 2063              	.LVL235:
 2064              	.L206:
 2065 0096 00BF     		.align	2
 2066              	.L205:
 2067 0098 00000000 		.word	gUsbParamInfo
 2068 009c 64000000 		.word	gUsbParamInfo+100
 2069              		.cfi_endproc
 2070              	.LFE85:
 2072              		.comm	clilist,1600,4
 2073              		.comm	gUsbParamInfo,108,4
 2074              		.comm	gCmdParamInfo,1892,4
 2075              		.section	.bss.i.7572,"aw",%nobits
ARM GAS  /tmp/cc1eEA2J.s 			page 51


 2076              		.set	.LANCHOR0,. + 0
 2079              	i.7572:
 2080 0000 00       		.space	1
 2081              		.section	.bss.label,"aw",%nobits
 2082              		.set	.LANCHOR3,. + 0
 2085              	label:
 2086 0000 00       		.space	1
 2087              		.section	.bss.num.7662,"aw",%nobits
 2088              		.align	1
 2089              		.set	.LANCHOR1,. + 0
 2092              	num.7662:
 2093 0000 0000     		.space	2
 2094              		.section	.bss.num.7667,"aw",%nobits
 2095              		.align	1
 2096              		.set	.LANCHOR2,. + 0
 2099              	num.7667:
 2100 0000 0000     		.space	2
 2101              		.section	.rodata.CLIGetParameter.str1.4,"aMS",%progbits,1
 2102              		.align	2
 2103              	.LC2:
 2104 0000 0D0A2049 		.ascii	"\015\012 Instruction standard error, please contact"
 2104      6E737472 
 2104      75637469 
 2104      6F6E2073 
 2104      74616E64 
 2105 002d 20736F66 		.ascii	" software processing!\000"
 2105      74776172 
 2105      65207072 
 2105      6F636573 
 2105      73696E67 
 2106              		.section	.rodata.CLI_info_init.str1.4,"aMS",%progbits,1
 2107              		.align	2
 2108              	.LC10:
 2109 0000 0D0A6269 		.ascii	"\015\012bitohw :\000"
 2109      746F6877 
 2109      203A00
 2110 000b 00       		.space	1
 2111              	.LC11:
 2112 000c 68656C70 		.ascii	"help\000"
 2112      00
 2113              		.section	.rodata.cli_ProcessCommand.str1.4,"aMS",%progbits,1
 2114              		.align	2
 2115              	.LC4:
 2116 0000 0D0A2D2D 		.ascii	"\015\012---ATECMDRESULT--- FAIL\000"
 2116      2D415445 
 2116      434D4452 
 2116      4553554C 
 2116      542D2D2D 
 2117 001a 0000     		.space	2
 2118              	.LC5:
 2119 001c 0D0A2D2D 		.ascii	"\015\012---ATECMDRESULT--- OK\000"
 2119      2D415445 
 2119      434D4452 
 2119      4553554C 
 2119      542D2D2D 
 2120              	.LC6:
 2121 0034 0D0A436F 		.ascii	"\015\012Command not recognised.  Enter 'help' to vi"
ARM GAS  /tmp/cc1eEA2J.s 			page 52


 2121      6D6D616E 
 2121      64206E6F 
 2121      74207265 
 2121      636F676E 
 2122 0061 65772061 		.ascii	"ew a list of available commands.\000"
 2122      206C6973 
 2122      74206F66 
 2122      20617661 
 2122      696C6162 
 2123              		.section	.rodata.cli_backspace.str1.4,"aMS",%progbits,1
 2124              		.align	2
 2125              	.LC7:
 2126 0000 2000     		.ascii	" \000"
 2127 0002 0000     		.space	2
 2128              	.LC8:
 2129 0004 08200800 		.ascii	"\010 \010\000"
 2130              	.LC9:
 2131 0008 200800   		.ascii	" \010\000"
 2132              		.section	.rodata.cli_format_cmd.str1.4,"aMS",%progbits,1
 2133              		.align	2
 2134              	.LC3:
 2135 0000 2D616C6C 		.ascii	"-all\000"
 2135      00
 2136              		.section	.rodata.prvDispHelpConfig.str1.4,"aMS",%progbits,1
 2137              		.align	2
 2138              	.LC1:
 2139 0000 0D0A2020 		.ascii	"\015\012        \000"
 2139      20202020 
 2139      202000
 2140              		.section	.rodata.vOutputString.str1.4,"aMS",%progbits,1
 2141              		.align	2
 2142              	.LC0:
 2143 0000 257300   		.ascii	"%s\000"
 2144              		.text
 2145              	.Letext0:
 2146              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2147              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2148              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 2149              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2150              		.file 6 "/usr/include/newlib/sys/lock.h"
 2151              		.file 7 "/usr/include/newlib/sys/_types.h"
 2152              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2153              		.file 9 "/usr/include/newlib/sys/reent.h"
 2154              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2155              		.file 11 "/usr/include/newlib/stdlib.h"
 2156              		.file 12 "Inc/cli.h"
 2157              		.file 13 "Inc/common.h"
 2158              		.file 14 "/usr/include/newlib/string.h"
 2159              		.file 15 "/usr/include/newlib/stdio.h"
 2160              		.file 16 "<built-in>"
ARM GAS  /tmp/cc1eEA2J.s 			page 53


DEFINED SYMBOLS
                            *ABS*:0000000000000000 cli.c
     /tmp/cc1eEA2J.s:16     .text.cli_deinit:0000000000000000 $t
     /tmp/cc1eEA2J.s:22     .text.cli_deinit:0000000000000000 cli_deinit
     /tmp/cc1eEA2J.s:43     .text.cli_deinit:0000000000000014 $d
                            *COM*:0000000000000764 gCmdParamInfo
     /tmp/cc1eEA2J.s:48     .text.vOutputString:0000000000000000 $t
     /tmp/cc1eEA2J.s:54     .text.vOutputString:0000000000000000 vOutputString
     /tmp/cc1eEA2J.s:76     .text.vOutputString:000000000000000c $d
     /tmp/cc1eEA2J.s:81     .text.prvDispHelpConfig:0000000000000000 $t
     /tmp/cc1eEA2J.s:87     .text.prvDispHelpConfig:0000000000000000 prvDispHelpConfig
     /tmp/cc1eEA2J.s:123    .text.prvDispHelpConfig:000000000000001c $d
                            *COM*:0000000000000640 clilist
     /tmp/cc1eEA2J.s:129    .text.cli_write_history_cmd:0000000000000000 $t
     /tmp/cc1eEA2J.s:135    .text.cli_write_history_cmd:0000000000000000 cli_write_history_cmd
     /tmp/cc1eEA2J.s:199    .text.cli_write_history_cmd:0000000000000058 $d
     /tmp/cc1eEA2J.s:205    .text.CLIGetParameter:0000000000000000 $t
     /tmp/cc1eEA2J.s:211    .text.CLIGetParameter:0000000000000000 CLIGetParameter
     /tmp/cc1eEA2J.s:323    .text.CLIGetParameter:0000000000000064 $d
     /tmp/cc1eEA2J.s:328    .text.CLI_Charmatching:0000000000000000 $t
     /tmp/cc1eEA2J.s:334    .text.CLI_Charmatching:0000000000000000 CLI_Charmatching
     /tmp/cc1eEA2J.s:550    .text.CLICommandSeek:0000000000000000 $t
     /tmp/cc1eEA2J.s:556    .text.CLICommandSeek:0000000000000000 CLICommandSeek
     /tmp/cc1eEA2J.s:671    .text.CLICommandSeek:0000000000000070 $d
     /tmp/cc1eEA2J.s:676    .text.cli_format_cmd:0000000000000000 $t
     /tmp/cc1eEA2J.s:682    .text.cli_format_cmd:0000000000000000 cli_format_cmd
     /tmp/cc1eEA2J.s:833    .text.cli_format_cmd:00000000000000e8 $d
     /tmp/cc1eEA2J.s:839    .text.cli_ProcessCommand:0000000000000000 $t
     /tmp/cc1eEA2J.s:845    .text.cli_ProcessCommand:0000000000000000 cli_ProcessCommand
     /tmp/cc1eEA2J.s:929    .text.cli_ProcessCommand:000000000000004c $d
     /tmp/cc1eEA2J.s:937    .text.vOutputChar:0000000000000000 $t
     /tmp/cc1eEA2J.s:943    .text.vOutputChar:0000000000000000 vOutputChar
     /tmp/cc1eEA2J.s:963    .text.cli_backspace:0000000000000000 $t
     /tmp/cc1eEA2J.s:969    .text.cli_backspace:0000000000000000 cli_backspace
     /tmp/cc1eEA2J.s:1097   .text.cli_backspace:0000000000000098 $d
     /tmp/cc1eEA2J.s:1105   .text.cli_read_history_cmd:0000000000000000 $t
     /tmp/cc1eEA2J.s:1111   .text.cli_read_history_cmd:0000000000000000 cli_read_history_cmd
     /tmp/cc1eEA2J.s:1231   .text.cli_read_history_cmd:00000000000000a8 $d
     /tmp/cc1eEA2J.s:1238   .text.cli_direction:0000000000000000 $t
     /tmp/cc1eEA2J.s:1244   .text.cli_direction:0000000000000000 cli_direction
     /tmp/cc1eEA2J.s:1263   .text.cli_direction:000000000000000c $d
     /tmp/cc1eEA2J.s:1267   .text.cli_direction:0000000000000010 $t
     /tmp/cc1eEA2J.s:1335   .text.cli_direction:000000000000006c $d
     /tmp/cc1eEA2J.s:1340   .text.cli_cInput:0000000000000000 $t
     /tmp/cc1eEA2J.s:1346   .text.cli_cInput:0000000000000000 cli_cInput
     /tmp/cc1eEA2J.s:1474   .text.cli_cInput:000000000000007c $d
     /tmp/cc1eEA2J.s:1480   .text.CLIParameterAdd:0000000000000000 $t
     /tmp/cc1eEA2J.s:1487   .text.CLIParameterAdd:0000000000000000 CLIParameterAdd
     /tmp/cc1eEA2J.s:1522   .text.CLIParameterAdd:0000000000000020 $d
     /tmp/cc1eEA2J.s:1528   .text.CLICommandAdd:0000000000000000 $t
     /tmp/cc1eEA2J.s:1535   .text.CLICommandAdd:0000000000000000 CLICommandAdd
     /tmp/cc1eEA2J.s:1569   .text.CLICommandAdd:000000000000001c $d
     /tmp/cc1eEA2J.s:1575   .text.CLI_info_init:0000000000000000 $t
     /tmp/cc1eEA2J.s:1582   .text.CLI_info_init:0000000000000000 CLI_info_init
     /tmp/cc1eEA2J.s:1626   .text.CLI_info_init:0000000000000034 $d
                            *COM*:000000000000006c gUsbParamInfo
     /tmp/cc1eEA2J.s:1636   .text.read_cInput:0000000000000000 $t
ARM GAS  /tmp/cc1eEA2J.s 			page 54


     /tmp/cc1eEA2J.s:1643   .text.read_cInput:0000000000000000 read_cInput
     /tmp/cc1eEA2J.s:1691   .text.read_cInput:000000000000002c $d
     /tmp/cc1eEA2J.s:1696   .text.vGetchar:0000000000000000 $t
     /tmp/cc1eEA2J.s:1703   .text.vGetchar:0000000000000000 vGetchar
     /tmp/cc1eEA2J.s:1724   .text.CLI_event_handle:0000000000000000 $t
     /tmp/cc1eEA2J.s:1731   .text.CLI_event_handle:0000000000000000 CLI_event_handle
     /tmp/cc1eEA2J.s:1887   .text.CLI_event_handle:00000000000000dc $d
     /tmp/cc1eEA2J.s:1894   .text.prvUARTCommandConsoleTask:0000000000000000 $t
     /tmp/cc1eEA2J.s:1901   .text.prvUARTCommandConsoleTask:0000000000000000 prvUARTCommandConsoleTask
     /tmp/cc1eEA2J.s:1926   .text.write_cInput:0000000000000000 $t
     /tmp/cc1eEA2J.s:1933   .text.write_cInput:0000000000000000 write_cInput
     /tmp/cc1eEA2J.s:2067   .text.write_cInput:0000000000000098 $d
     /tmp/cc1eEA2J.s:2079   .bss.i.7572:0000000000000000 i.7572
     /tmp/cc1eEA2J.s:2080   .bss.i.7572:0000000000000000 $d
     /tmp/cc1eEA2J.s:2085   .bss.label:0000000000000000 label
     /tmp/cc1eEA2J.s:2086   .bss.label:0000000000000000 $d
     /tmp/cc1eEA2J.s:2088   .bss.num.7662:0000000000000000 $d
     /tmp/cc1eEA2J.s:2092   .bss.num.7662:0000000000000000 num.7662
     /tmp/cc1eEA2J.s:2095   .bss.num.7667:0000000000000000 $d
     /tmp/cc1eEA2J.s:2099   .bss.num.7667:0000000000000000 num.7667
     /tmp/cc1eEA2J.s:2102   .rodata.CLIGetParameter.str1.4:0000000000000000 $d
     /tmp/cc1eEA2J.s:2107   .rodata.CLI_info_init.str1.4:0000000000000000 $d
     /tmp/cc1eEA2J.s:2114   .rodata.cli_ProcessCommand.str1.4:0000000000000000 $d
     /tmp/cc1eEA2J.s:2124   .rodata.cli_backspace.str1.4:0000000000000000 $d
     /tmp/cc1eEA2J.s:2133   .rodata.cli_format_cmd.str1.4:0000000000000000 $d
     /tmp/cc1eEA2J.s:2137   .rodata.prvDispHelpConfig.str1.4:0000000000000000 $d
     /tmp/cc1eEA2J.s:2141   .rodata.vOutputString.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
printf
strcmp
strcpy
strchr
strncmp
strlen
strncpy
memset
putchar
memcpy
